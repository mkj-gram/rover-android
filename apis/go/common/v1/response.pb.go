// Code generated by protoc-gen-go.
// source: common/v1/response.proto
// DO NOT EDIT!

package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OperationResult struct {
	Success      bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Status       int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	ErrorCode    int32  `protobuf:"varint,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (m *OperationResult) Reset()                    { *m = OperationResult{} }
func (m *OperationResult) String() string            { return proto.CompactTextString(m) }
func (*OperationResult) ProtoMessage()               {}
func (*OperationResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *OperationResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *OperationResult) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OperationResult) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *OperationResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*OperationResult)(nil), "common.v1.OperationResult")
}

func init() { proto.RegisterFile("common/v1/response.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0xce, 0x3d, 0x0a, 0xc2, 0x40,
	0x10, 0xc5, 0x71, 0xd6, 0x8f, 0x68, 0x06, 0x45, 0xd8, 0x42, 0xa6, 0x11, 0x82, 0x36, 0xa9, 0x12,
	0x82, 0x47, 0xb0, 0x16, 0x61, 0x2f, 0x20, 0x71, 0x33, 0x88, 0x60, 0x32, 0x61, 0x66, 0x93, 0x2b,
	0x78, 0x6d, 0x61, 0xa3, 0xe5, 0xfb, 0xff, 0x9a, 0x07, 0xe8, 0xb9, 0x6d, 0xb9, 0x2b, 0xc7, 0xaa,
	0x14, 0xd2, 0x9e, 0x3b, 0xa5, 0xa2, 0x17, 0x0e, 0x6c, 0xd3, 0x49, 0x8a, 0xb1, 0x3a, 0x7e, 0x0c,
	0xec, 0x6e, 0x3d, 0x49, 0x1d, 0x5e, 0xdc, 0x39, 0xd2, 0xe1, 0x1d, 0x2c, 0xc2, 0x4a, 0x07, 0xef,
	0x49, 0x15, 0x4d, 0x66, 0xf2, 0xb5, 0xfb, 0x4f, 0xbb, 0x87, 0x44, 0x43, 0x1d, 0x06, 0xc5, 0x59,
	0x66, 0xf2, 0xa5, 0xfb, 0x2d, 0x7b, 0x00, 0x20, 0x11, 0x96, 0xbb, 0xe7, 0x86, 0x70, 0x1e, 0x2d,
	0x8d, 0xe5, 0xc2, 0x0d, 0xd9, 0x13, 0x6c, 0x27, 0x6e, 0x49, 0xb5, 0x7e, 0x12, 0x2e, 0x32, 0x93,
	0xa7, 0x6e, 0x13, 0xe3, 0x75, 0x6a, 0x8f, 0x24, 0x7e, 0x3b, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xd8, 0xd6, 0xb9, 0x95, 0xb7, 0x00, 0x00, 0x00,
}
