// Code generated by protoc-gen-go.
// source: segment/v1/segment.proto
// DO NOT EDIT!

/*
Package segment is a generated protocol buffer package.

It is generated from these files:
	segment/v1/segment.proto

It has these top-level messages:
	StaticSegment
	ListStaticSegmentRequest
	ListStaticSegmentResponse
	GetStaticSegmentRequest
	GetStaticSegmentReply
	CreateStaticSegmentRequest
	CreateStaticSegmentReply
	UpdateStaticSegmentIdsReply
	GetStaticSegmentPushIdsRequest
	PushId
*/
package segment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/roverplatform/rover/go/protobuf/ptypes/timestamp"
import rover_auth_v1 "auth/v1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushIdType int32

const (
	PushIdType_ROVER PushIdType = 0
	PushIdType_ALIAS PushIdType = 1
)

var PushIdType_name = map[int32]string{
	0: "ROVER",
	1: "ALIAS",
}
var PushIdType_value = map[string]int32{
	"ROVER": 0,
	"ALIAS": 1,
}

func (x PushIdType) String() string {
	return proto.EnumName(PushIdType_name, int32(x))
}
func (PushIdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StaticSegment struct {
	Id        int32                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AccountId int32                      `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Title     string                     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Size      int64                      `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *StaticSegment) Reset()                    { *m = StaticSegment{} }
func (m *StaticSegment) String() string            { return proto.CompactTextString(m) }
func (*StaticSegment) ProtoMessage()               {}
func (*StaticSegment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StaticSegment) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StaticSegment) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *StaticSegment) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StaticSegment) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *StaticSegment) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *StaticSegment) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ListStaticSegmentRequest struct {
	// Optional
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	AccountId   int32                      `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	OrderBy     string                     `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	PageSize    int32                      `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken   string                     `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListStaticSegmentRequest) Reset()                    { *m = ListStaticSegmentRequest{} }
func (m *ListStaticSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*ListStaticSegmentRequest) ProtoMessage()               {}
func (*ListStaticSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListStaticSegmentRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ListStaticSegmentRequest) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ListStaticSegmentRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *ListStaticSegmentRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListStaticSegmentRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListStaticSegmentResponse struct {
	Segments      []*StaticSegment `protobuf:"bytes,1,rep,name=segments" json:"segments,omitempty"`
	NextPageToken string           `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListStaticSegmentResponse) Reset()                    { *m = ListStaticSegmentResponse{} }
func (m *ListStaticSegmentResponse) String() string            { return proto.CompactTextString(m) }
func (*ListStaticSegmentResponse) ProtoMessage()               {}
func (*ListStaticSegmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListStaticSegmentResponse) GetSegments() []*StaticSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *ListStaticSegmentResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetStaticSegmentRequest struct {
	// Optional
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	Id          int32                      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *GetStaticSegmentRequest) Reset()                    { *m = GetStaticSegmentRequest{} }
func (m *GetStaticSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStaticSegmentRequest) ProtoMessage()               {}
func (*GetStaticSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetStaticSegmentRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *GetStaticSegmentRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetStaticSegmentReply struct {
	Segment *StaticSegment `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
}

func (m *GetStaticSegmentReply) Reset()                    { *m = GetStaticSegmentReply{} }
func (m *GetStaticSegmentReply) String() string            { return proto.CompactTextString(m) }
func (*GetStaticSegmentReply) ProtoMessage()               {}
func (*GetStaticSegmentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetStaticSegmentReply) GetSegment() *StaticSegment {
	if m != nil {
		return m.Segment
	}
	return nil
}

type CreateStaticSegmentRequest struct {
	// Optional
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	AccountId   int32                      `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Title       string                     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
}

func (m *CreateStaticSegmentRequest) Reset()                    { *m = CreateStaticSegmentRequest{} }
func (m *CreateStaticSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateStaticSegmentRequest) ProtoMessage()               {}
func (*CreateStaticSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateStaticSegmentRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *CreateStaticSegmentRequest) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *CreateStaticSegmentRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type CreateStaticSegmentReply struct {
	Segment *StaticSegment `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
}

func (m *CreateStaticSegmentReply) Reset()                    { *m = CreateStaticSegmentReply{} }
func (m *CreateStaticSegmentReply) String() string            { return proto.CompactTextString(m) }
func (*CreateStaticSegmentReply) ProtoMessage()               {}
func (*CreateStaticSegmentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateStaticSegmentReply) GetSegment() *StaticSegment {
	if m != nil {
		return m.Segment
	}
	return nil
}

type UpdateStaticSegmentIdsReply struct {
	Segment *StaticSegment `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
}

func (m *UpdateStaticSegmentIdsReply) Reset()                    { *m = UpdateStaticSegmentIdsReply{} }
func (m *UpdateStaticSegmentIdsReply) String() string            { return proto.CompactTextString(m) }
func (*UpdateStaticSegmentIdsReply) ProtoMessage()               {}
func (*UpdateStaticSegmentIdsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateStaticSegmentIdsReply) GetSegment() *StaticSegment {
	if m != nil {
		return m.Segment
	}
	return nil
}

// Internal
type GetStaticSegmentPushIdsRequest struct {
	SegmentId int32 `protobuf:"varint,1,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
}

func (m *GetStaticSegmentPushIdsRequest) Reset()                    { *m = GetStaticSegmentPushIdsRequest{} }
func (m *GetStaticSegmentPushIdsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStaticSegmentPushIdsRequest) ProtoMessage()               {}
func (*GetStaticSegmentPushIdsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetStaticSegmentPushIdsRequest) GetSegmentId() int32 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

type PushId struct {
	Id   string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type PushIdType `protobuf:"varint,2,opt,name=type,enum=rover.segment.v1.PushIdType" json:"type,omitempty"`
}

func (m *PushId) Reset()                    { *m = PushId{} }
func (m *PushId) String() string            { return proto.CompactTextString(m) }
func (*PushId) ProtoMessage()               {}
func (*PushId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PushId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PushId) GetType() PushIdType {
	if m != nil {
		return m.Type
	}
	return PushIdType_ROVER
}

func init() {
	proto.RegisterType((*StaticSegment)(nil), "rover.segment.v1.StaticSegment")
	proto.RegisterType((*ListStaticSegmentRequest)(nil), "rover.segment.v1.ListStaticSegmentRequest")
	proto.RegisterType((*ListStaticSegmentResponse)(nil), "rover.segment.v1.ListStaticSegmentResponse")
	proto.RegisterType((*GetStaticSegmentRequest)(nil), "rover.segment.v1.GetStaticSegmentRequest")
	proto.RegisterType((*GetStaticSegmentReply)(nil), "rover.segment.v1.GetStaticSegmentReply")
	proto.RegisterType((*CreateStaticSegmentRequest)(nil), "rover.segment.v1.CreateStaticSegmentRequest")
	proto.RegisterType((*CreateStaticSegmentReply)(nil), "rover.segment.v1.CreateStaticSegmentReply")
	proto.RegisterType((*UpdateStaticSegmentIdsReply)(nil), "rover.segment.v1.UpdateStaticSegmentIdsReply")
	proto.RegisterType((*GetStaticSegmentPushIdsRequest)(nil), "rover.segment.v1.GetStaticSegmentPushIdsRequest")
	proto.RegisterType((*PushId)(nil), "rover.segment.v1.PushId")
	proto.RegisterEnum("rover.segment.v1.PushIdType", PushIdType_name, PushIdType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Segment service

type SegmentClient interface {
	ListStaticSegments(ctx context.Context, in *ListStaticSegmentRequest, opts ...grpc.CallOption) (*ListStaticSegmentResponse, error)
	GetStaticSegment(ctx context.Context, in *GetStaticSegmentRequest, opts ...grpc.CallOption) (*GetStaticSegmentReply, error)
	CreateStaticSegment(ctx context.Context, in *CreateStaticSegmentRequest, opts ...grpc.CallOption) (*CreateStaticSegmentReply, error)
	UpdateStaticSegmentPushIds(ctx context.Context, opts ...grpc.CallOption) (Segment_UpdateStaticSegmentPushIdsClient, error)
	GetStaticSegmentPushIds(ctx context.Context, in *GetStaticSegmentPushIdsRequest, opts ...grpc.CallOption) (Segment_GetStaticSegmentPushIdsClient, error)
}

type segmentClient struct {
	cc *grpc.ClientConn
}

func NewSegmentClient(cc *grpc.ClientConn) SegmentClient {
	return &segmentClient{cc}
}

func (c *segmentClient) ListStaticSegments(ctx context.Context, in *ListStaticSegmentRequest, opts ...grpc.CallOption) (*ListStaticSegmentResponse, error) {
	out := new(ListStaticSegmentResponse)
	err := grpc.Invoke(ctx, "/rover.segment.v1.Segment/ListStaticSegments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *segmentClient) GetStaticSegment(ctx context.Context, in *GetStaticSegmentRequest, opts ...grpc.CallOption) (*GetStaticSegmentReply, error) {
	out := new(GetStaticSegmentReply)
	err := grpc.Invoke(ctx, "/rover.segment.v1.Segment/GetStaticSegment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *segmentClient) CreateStaticSegment(ctx context.Context, in *CreateStaticSegmentRequest, opts ...grpc.CallOption) (*CreateStaticSegmentReply, error) {
	out := new(CreateStaticSegmentReply)
	err := grpc.Invoke(ctx, "/rover.segment.v1.Segment/CreateStaticSegment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *segmentClient) UpdateStaticSegmentPushIds(ctx context.Context, opts ...grpc.CallOption) (Segment_UpdateStaticSegmentPushIdsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Segment_serviceDesc.Streams[0], c.cc, "/rover.segment.v1.Segment/UpdateStaticSegmentPushIds", opts...)
	if err != nil {
		return nil, err
	}
	x := &segmentUpdateStaticSegmentPushIdsClient{stream}
	return x, nil
}

type Segment_UpdateStaticSegmentPushIdsClient interface {
	Send(*PushId) error
	CloseAndRecv() (*UpdateStaticSegmentIdsReply, error)
	grpc.ClientStream
}

type segmentUpdateStaticSegmentPushIdsClient struct {
	grpc.ClientStream
}

func (x *segmentUpdateStaticSegmentPushIdsClient) Send(m *PushId) error {
	return x.ClientStream.SendMsg(m)
}

func (x *segmentUpdateStaticSegmentPushIdsClient) CloseAndRecv() (*UpdateStaticSegmentIdsReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UpdateStaticSegmentIdsReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *segmentClient) GetStaticSegmentPushIds(ctx context.Context, in *GetStaticSegmentPushIdsRequest, opts ...grpc.CallOption) (Segment_GetStaticSegmentPushIdsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Segment_serviceDesc.Streams[1], c.cc, "/rover.segment.v1.Segment/GetStaticSegmentPushIds", opts...)
	if err != nil {
		return nil, err
	}
	x := &segmentGetStaticSegmentPushIdsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Segment_GetStaticSegmentPushIdsClient interface {
	Recv() (*PushId, error)
	grpc.ClientStream
}

type segmentGetStaticSegmentPushIdsClient struct {
	grpc.ClientStream
}

func (x *segmentGetStaticSegmentPushIdsClient) Recv() (*PushId, error) {
	m := new(PushId)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Segment service

type SegmentServer interface {
	ListStaticSegments(context.Context, *ListStaticSegmentRequest) (*ListStaticSegmentResponse, error)
	GetStaticSegment(context.Context, *GetStaticSegmentRequest) (*GetStaticSegmentReply, error)
	CreateStaticSegment(context.Context, *CreateStaticSegmentRequest) (*CreateStaticSegmentReply, error)
	UpdateStaticSegmentPushIds(Segment_UpdateStaticSegmentPushIdsServer) error
	GetStaticSegmentPushIds(*GetStaticSegmentPushIdsRequest, Segment_GetStaticSegmentPushIdsServer) error
}

func RegisterSegmentServer(s *grpc.Server, srv SegmentServer) {
	s.RegisterService(&_Segment_serviceDesc, srv)
}

func _Segment_ListStaticSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStaticSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SegmentServer).ListStaticSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.segment.v1.Segment/ListStaticSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SegmentServer).ListStaticSegments(ctx, req.(*ListStaticSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Segment_GetStaticSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStaticSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SegmentServer).GetStaticSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.segment.v1.Segment/GetStaticSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SegmentServer).GetStaticSegment(ctx, req.(*GetStaticSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Segment_CreateStaticSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStaticSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SegmentServer).CreateStaticSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.segment.v1.Segment/CreateStaticSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SegmentServer).CreateStaticSegment(ctx, req.(*CreateStaticSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Segment_UpdateStaticSegmentPushIds_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SegmentServer).UpdateStaticSegmentPushIds(&segmentUpdateStaticSegmentPushIdsServer{stream})
}

type Segment_UpdateStaticSegmentPushIdsServer interface {
	SendAndClose(*UpdateStaticSegmentIdsReply) error
	Recv() (*PushId, error)
	grpc.ServerStream
}

type segmentUpdateStaticSegmentPushIdsServer struct {
	grpc.ServerStream
}

func (x *segmentUpdateStaticSegmentPushIdsServer) SendAndClose(m *UpdateStaticSegmentIdsReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *segmentUpdateStaticSegmentPushIdsServer) Recv() (*PushId, error) {
	m := new(PushId)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Segment_GetStaticSegmentPushIds_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetStaticSegmentPushIdsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SegmentServer).GetStaticSegmentPushIds(m, &segmentGetStaticSegmentPushIdsServer{stream})
}

type Segment_GetStaticSegmentPushIdsServer interface {
	Send(*PushId) error
	grpc.ServerStream
}

type segmentGetStaticSegmentPushIdsServer struct {
	grpc.ServerStream
}

func (x *segmentGetStaticSegmentPushIdsServer) Send(m *PushId) error {
	return x.ServerStream.SendMsg(m)
}

var _Segment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rover.segment.v1.Segment",
	HandlerType: (*SegmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListStaticSegments",
			Handler:    _Segment_ListStaticSegments_Handler,
		},
		{
			MethodName: "GetStaticSegment",
			Handler:    _Segment_GetStaticSegment_Handler,
		},
		{
			MethodName: "CreateStaticSegment",
			Handler:    _Segment_CreateStaticSegment_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UpdateStaticSegmentPushIds",
			Handler:       _Segment_UpdateStaticSegmentPushIds_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetStaticSegmentPushIds",
			Handler:       _Segment_GetStaticSegmentPushIds_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "segment/v1/segment.proto",
}

func init() { proto.RegisterFile("segment/v1/segment.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 661 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0xae, 0xbb, 0x76, 0x5b, 0xce, 0x7e, 0xdb, 0xaf, 0x32, 0x43, 0x64, 0x19, 0x63, 0x95, 0x2f,
	0x20, 0x0c, 0x48, 0xb7, 0x72, 0x35, 0x4d, 0x08, 0x75, 0x13, 0x42, 0x43, 0x93, 0x98, 0xdc, 0x0d,
	0x21, 0x6e, 0xa2, 0xac, 0x31, 0x6d, 0x44, 0x97, 0x64, 0xb1, 0x53, 0x2d, 0x5c, 0xf1, 0x08, 0xbc,
	0x08, 0xcf, 0xc2, 0x1b, 0xf0, 0x2c, 0x28, 0x76, 0xd2, 0xad, 0x4d, 0x4b, 0x2b, 0x4d, 0x88, 0xab,
	0xda, 0xc7, 0xdf, 0xf9, 0xf7, 0xf5, 0x3b, 0x27, 0xa0, 0x73, 0xd6, 0xbd, 0x64, 0xbe, 0x68, 0x0c,
	0xf6, 0x1a, 0xd9, 0xd1, 0x0a, 0xa3, 0x40, 0x04, 0xb8, 0x16, 0x05, 0x03, 0x16, 0x59, 0xb9, 0x71,
	0xb0, 0x67, 0x6c, 0x77, 0x83, 0xa0, 0xdb, 0x67, 0x0d, 0xf9, 0x7e, 0x11, 0x7f, 0x6e, 0x08, 0xef,
	0x92, 0x71, 0xe1, 0x5c, 0x86, 0xca, 0xc5, 0xc0, 0x4e, 0x2c, 0x7a, 0x69, 0xa4, 0xf4, 0x57, 0xd9,
	0xc8, 0x2f, 0x04, 0xab, 0x6d, 0xe1, 0x08, 0xaf, 0xd3, 0x56, 0x91, 0xf0, 0x1a, 0x94, 0x3d, 0x57,
	0x47, 0x75, 0x64, 0x56, 0x69, 0xd9, 0x73, 0xf1, 0x16, 0x80, 0xd3, 0xe9, 0x04, 0xb1, 0x2f, 0x6c,
	0xcf, 0xd5, 0xcb, 0xd2, 0xae, 0x65, 0x96, 0x63, 0x17, 0xaf, 0x43, 0x55, 0x78, 0xa2, 0xcf, 0xf4,
	0x85, 0x3a, 0x32, 0x35, 0xaa, 0x2e, 0x18, 0x43, 0x85, 0x7b, 0x5f, 0x99, 0x5e, 0xa9, 0x23, 0x73,
	0x81, 0xca, 0x33, 0xde, 0x07, 0x88, 0x43, 0xd7, 0x11, 0xcc, 0xb5, 0x1d, 0xa1, 0x57, 0xeb, 0xc8,
	0x5c, 0x69, 0x1a, 0x96, 0x2a, 0xda, 0xca, 0x8b, 0xb6, 0xce, 0xf2, 0xa2, 0xa9, 0x96, 0xa1, 0x5b,
	0x22, 0x75, 0xed, 0x44, 0x2c, 0x77, 0x5d, 0x9c, 0xed, 0x9a, 0xa1, 0x5b, 0x82, 0xfc, 0x44, 0xa0,
	0x9f, 0x78, 0x5c, 0x8c, 0x34, 0x49, 0xd9, 0x55, 0xcc, 0xb8, 0xc0, 0xaf, 0xe0, 0xbf, 0x94, 0x0b,
	0xbb, 0x13, 0xf8, 0x82, 0x5d, 0x0b, 0xd9, 0x75, 0x1a, 0x59, 0x71, 0x2b, 0x69, 0x1a, 0xec, 0x59,
	0xad, 0x58, 0xf4, 0x8e, 0x14, 0x82, 0xae, 0x38, 0x37, 0x97, 0x59, 0xd4, 0x6c, 0xc0, 0x72, 0x10,
	0xb9, 0x2c, 0xb2, 0x2f, 0x92, 0x8c, 0x9d, 0x25, 0x79, 0x3f, 0x4c, 0xf0, 0x26, 0x68, 0xa1, 0xd3,
	0x65, 0xf6, 0x90, 0xa4, 0x2a, 0x5d, 0x4e, 0x0d, 0xed, 0x94, 0xa8, 0x2d, 0x00, 0xf9, 0x28, 0x82,
	0x2f, 0xcc, 0x97, 0x44, 0x69, 0x54, 0xc2, 0xcf, 0x52, 0x03, 0xf9, 0x86, 0x60, 0x63, 0x42, 0x47,
	0x3c, 0x0c, 0x7c, 0xce, 0xf0, 0x01, 0x2c, 0x67, 0x9a, 0xe0, 0x3a, 0xaa, 0x2f, 0x98, 0x2b, 0xcd,
	0x6d, 0x6b, 0x5c, 0x2a, 0xd6, 0xa8, 0xeb, 0xd0, 0x01, 0x3f, 0x86, 0xff, 0x7d, 0x76, 0x2d, 0xec,
	0x5b, 0xe9, 0xcb, 0x32, 0xfd, 0x6a, 0x6a, 0x3e, 0x1d, 0x96, 0xd0, 0x83, 0x07, 0x6f, 0xd9, 0x5f,
	0xa1, 0x54, 0xa9, 0xaf, 0x9c, 0xab, 0x8f, 0x50, 0xb8, 0x5f, 0xcc, 0x14, 0xf6, 0x13, 0xbc, 0x0f,
	0x4b, 0x59, 0xd9, 0x59, 0x8a, 0x99, 0x6d, 0xe6, 0x78, 0xf2, 0x1d, 0x81, 0x71, 0x24, 0x05, 0xf2,
	0x0f, 0x44, 0x31, 0x71, 0x5e, 0xc8, 0x39, 0xe8, 0x13, 0x2b, 0xba, 0x63, 0xa7, 0x1f, 0x61, 0xf3,
	0x5c, 0x0e, 0xd1, 0xc8, 0xfb, 0xb1, 0xcb, 0xef, 0x1c, 0xf9, 0x35, 0x3c, 0x1a, 0xff, 0x5f, 0x4e,
	0x63, 0xde, 0x93, 0xa1, 0x15, 0x8d, 0x5b, 0x00, 0x19, 0xd8, 0x1e, 0xee, 0x13, 0x8d, 0xe7, 0x15,
	0x90, 0x77, 0xb0, 0xa8, 0x1c, 0x6e, 0x2d, 0x1c, 0x4d, 0x2e, 0x9c, 0x5d, 0xa8, 0x88, 0x24, 0x64,
	0x92, 0xba, 0xb5, 0xe6, 0xc3, 0x62, 0x49, 0xca, 0xef, 0x2c, 0x09, 0x19, 0x95, 0xc8, 0x1d, 0x02,
	0x70, 0x63, 0xc3, 0x1a, 0x54, 0xe9, 0xfb, 0x0f, 0x6f, 0x68, 0xad, 0x94, 0x1e, 0x5b, 0x27, 0xc7,
	0xad, 0x76, 0x0d, 0x35, 0x7f, 0x54, 0x60, 0x29, 0x5f, 0x71, 0x01, 0xe0, 0xc2, 0x00, 0x71, 0xbc,
	0x53, 0xcc, 0x34, 0x6d, 0x71, 0x18, 0xcf, 0xe6, 0xc2, 0xaa, 0x91, 0x24, 0x25, 0xdc, 0x83, 0xda,
	0x38, 0x5b, 0xf8, 0x69, 0x31, 0xc4, 0x94, 0x99, 0x32, 0x9e, 0xcc, 0x03, 0x0d, 0xfb, 0x09, 0x29,
	0xe1, 0x2b, 0xb8, 0x37, 0x41, 0x48, 0xf8, 0x79, 0x31, 0xc2, 0xf4, 0x09, 0x30, 0x76, 0xe6, 0x44,
	0xab, 0x94, 0x1e, 0x18, 0x13, 0x44, 0x96, 0xa9, 0x01, 0xeb, 0xd3, 0xfe, 0x3f, 0xe3, 0x45, 0xf1,
	0xe5, 0x0f, 0x62, 0x25, 0x25, 0x13, 0x61, 0xaf, 0xb8, 0x77, 0xf2, 0x3c, 0xbb, 0xb3, 0x39, 0x1a,
	0x15, 0xa8, 0x31, 0xb5, 0x32, 0x52, 0xda, 0x45, 0x87, 0xeb, 0x9f, 0xf0, 0xcd, 0xb7, 0xf7, 0x20,
	0x3b, 0x5e, 0x2c, 0xca, 0x8f, 0xcd, 0xcb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x8d, 0xcf,
	0x50, 0x98, 0x07, 0x00, 0x00,
}
