// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/predicates.proto

/*
Package predicates is a generated protocol buffer package.

It is generated from these files:
	protobuf/predicates.proto

It has these top-level messages:
	PredicateAggregate
	Predicate
	StringPredicate
	BoolPredicate
	DoublePredicate
	NumberPredicate
	DatePredicate
	VersionPredicate
	GeofencePredicate
	DurationPredicate
	StringArrayPredicate
*/
package predicates

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import rover_protobuf "github.com/roverplatform/rover/apis/go/protobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PredicateAggregate_Condition int32

const (
	PredicateAggregate_ANY PredicateAggregate_Condition = 0
	PredicateAggregate_ALL PredicateAggregate_Condition = 1
)

var PredicateAggregate_Condition_name = map[int32]string{
	0: "ANY",
	1: "ALL",
}
var PredicateAggregate_Condition_value = map[string]int32{
	"ANY": 0,
	"ALL": 1,
}

func (x PredicateAggregate_Condition) String() string {
	return proto.EnumName(PredicateAggregate_Condition_name, int32(x))
}
func (PredicateAggregate_Condition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type StringPredicate_Op int32

const (
	StringPredicate_IS_UNSET         StringPredicate_Op = 0
	StringPredicate_IS_SET           StringPredicate_Op = 1
	StringPredicate_IS_EQUAL         StringPredicate_Op = 2
	StringPredicate_IS_NOT_EQUAL     StringPredicate_Op = 3
	StringPredicate_STARTS_WITH      StringPredicate_Op = 4
	StringPredicate_ENDS_WITH        StringPredicate_Op = 5
	StringPredicate_CONTAINS         StringPredicate_Op = 6
	StringPredicate_DOES_NOT_CONTAIN StringPredicate_Op = 7
)

var StringPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "STARTS_WITH",
	5: "ENDS_WITH",
	6: "CONTAINS",
	7: "DOES_NOT_CONTAIN",
}
var StringPredicate_Op_value = map[string]int32{
	"IS_UNSET":         0,
	"IS_SET":           1,
	"IS_EQUAL":         2,
	"IS_NOT_EQUAL":     3,
	"STARTS_WITH":      4,
	"ENDS_WITH":        5,
	"CONTAINS":         6,
	"DOES_NOT_CONTAIN": 7,
}

func (x StringPredicate_Op) String() string {
	return proto.EnumName(StringPredicate_Op_name, int32(x))
}
func (StringPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type BoolPredicate_Op int32

const (
	BoolPredicate_IS_UNSET BoolPredicate_Op = 0
	BoolPredicate_IS_SET   BoolPredicate_Op = 1
	BoolPredicate_IS_EQUAL BoolPredicate_Op = 2
)

var BoolPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
}
var BoolPredicate_Op_value = map[string]int32{
	"IS_UNSET": 0,
	"IS_SET":   1,
	"IS_EQUAL": 2,
}

func (x BoolPredicate_Op) String() string {
	return proto.EnumName(BoolPredicate_Op_name, int32(x))
}
func (BoolPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type DoublePredicate_Op int32

const (
	DoublePredicate_IS_UNSET        DoublePredicate_Op = 0
	DoublePredicate_IS_SET          DoublePredicate_Op = 1
	DoublePredicate_IS_EQUAL        DoublePredicate_Op = 2
	DoublePredicate_IS_NOT_EQUAL    DoublePredicate_Op = 3
	DoublePredicate_IS_GREATER_THAN DoublePredicate_Op = 4
	DoublePredicate_IS_LESS_THAN    DoublePredicate_Op = 5
	DoublePredicate_IS_BETWEEN      DoublePredicate_Op = 6
)

var DoublePredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "IS_GREATER_THAN",
	5: "IS_LESS_THAN",
	6: "IS_BETWEEN",
}
var DoublePredicate_Op_value = map[string]int32{
	"IS_UNSET":        0,
	"IS_SET":          1,
	"IS_EQUAL":        2,
	"IS_NOT_EQUAL":    3,
	"IS_GREATER_THAN": 4,
	"IS_LESS_THAN":    5,
	"IS_BETWEEN":      6,
}

func (x DoublePredicate_Op) String() string {
	return proto.EnumName(DoublePredicate_Op_name, int32(x))
}
func (DoublePredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type NumberPredicate_Op int32

const (
	NumberPredicate_IS_UNSET        NumberPredicate_Op = 0
	NumberPredicate_IS_SET          NumberPredicate_Op = 1
	NumberPredicate_IS_EQUAL        NumberPredicate_Op = 2
	NumberPredicate_IS_NOT_EQUAL    NumberPredicate_Op = 3
	NumberPredicate_IS_GREATER_THAN NumberPredicate_Op = 4
	NumberPredicate_IS_LESS_THAN    NumberPredicate_Op = 5
	NumberPredicate_IS_BETWEEN      NumberPredicate_Op = 6
)

var NumberPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "IS_GREATER_THAN",
	5: "IS_LESS_THAN",
	6: "IS_BETWEEN",
}
var NumberPredicate_Op_value = map[string]int32{
	"IS_UNSET":        0,
	"IS_SET":          1,
	"IS_EQUAL":        2,
	"IS_NOT_EQUAL":    3,
	"IS_GREATER_THAN": 4,
	"IS_LESS_THAN":    5,
	"IS_BETWEEN":      6,
}

func (x NumberPredicate_Op) String() string {
	return proto.EnumName(NumberPredicate_Op_name, int32(x))
}
func (NumberPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

type DatePredicate_Op int32

const (
	DatePredicate_IS_UNSET  DatePredicate_Op = 0
	DatePredicate_IS_SET    DatePredicate_Op = 1
	DatePredicate_IS_AFTER  DatePredicate_Op = 2
	DatePredicate_IS_BEFORE DatePredicate_Op = 3
	DatePredicate_IS_ON     DatePredicate_Op = 4
)

var DatePredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_AFTER",
	3: "IS_BEFORE",
	4: "IS_ON",
}
var DatePredicate_Op_value = map[string]int32{
	"IS_UNSET":  0,
	"IS_SET":    1,
	"IS_AFTER":  2,
	"IS_BEFORE": 3,
	"IS_ON":     4,
}

func (x DatePredicate_Op) String() string {
	return proto.EnumName(DatePredicate_Op_name, int32(x))
}
func (DatePredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type VersionPredicate_Op int32

const (
	VersionPredicate_IS_UNSET                 VersionPredicate_Op = 0
	VersionPredicate_IS_SET                   VersionPredicate_Op = 1
	VersionPredicate_IS_EQUAL                 VersionPredicate_Op = 2
	VersionPredicate_IS_NOT_EQUAL             VersionPredicate_Op = 3
	VersionPredicate_IS_GREATER_THAN          VersionPredicate_Op = 4
	VersionPredicate_IS_LESS_THAN             VersionPredicate_Op = 5
	VersionPredicate_IS_BETWEEN               VersionPredicate_Op = 6
	VersionPredicate_IS_GREATER_THAN_OR_EQUAL VersionPredicate_Op = 7
	VersionPredicate_IS_LESS_THAN_OR_EQUAL    VersionPredicate_Op = 8
)

var VersionPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "IS_GREATER_THAN",
	5: "IS_LESS_THAN",
	6: "IS_BETWEEN",
	7: "IS_GREATER_THAN_OR_EQUAL",
	8: "IS_LESS_THAN_OR_EQUAL",
}
var VersionPredicate_Op_value = map[string]int32{
	"IS_UNSET":                 0,
	"IS_SET":                   1,
	"IS_EQUAL":                 2,
	"IS_NOT_EQUAL":             3,
	"IS_GREATER_THAN":          4,
	"IS_LESS_THAN":             5,
	"IS_BETWEEN":               6,
	"IS_GREATER_THAN_OR_EQUAL": 7,
	"IS_LESS_THAN_OR_EQUAL":    8,
}

func (x VersionPredicate_Op) String() string {
	return proto.EnumName(VersionPredicate_Op_name, int32(x))
}
func (VersionPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type GeofencePredicate_Op int32

const (
	GeofencePredicate_IS_UNSET   GeofencePredicate_Op = 0
	GeofencePredicate_IS_SET     GeofencePredicate_Op = 1
	GeofencePredicate_IS_OUTSIDE GeofencePredicate_Op = 2
	GeofencePredicate_IS_WITHIN  GeofencePredicate_Op = 3
)

var GeofencePredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_OUTSIDE",
	3: "IS_WITHIN",
}
var GeofencePredicate_Op_value = map[string]int32{
	"IS_UNSET":   0,
	"IS_SET":     1,
	"IS_OUTSIDE": 2,
	"IS_WITHIN":  3,
}

func (x GeofencePredicate_Op) String() string {
	return proto.EnumName(GeofencePredicate_Op_name, int32(x))
}
func (GeofencePredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

type DurationPredicate_Op int32

const (
	DurationPredicate_IS_GREATER_THAN DurationPredicate_Op = 0
	DurationPredicate_IS_LESS_THAN    DurationPredicate_Op = 1
	DurationPredicate_IS_EQUAL        DurationPredicate_Op = 2
)

var DurationPredicate_Op_name = map[int32]string{
	0: "IS_GREATER_THAN",
	1: "IS_LESS_THAN",
	2: "IS_EQUAL",
}
var DurationPredicate_Op_value = map[string]int32{
	"IS_GREATER_THAN": 0,
	"IS_LESS_THAN":    1,
	"IS_EQUAL":        2,
}

func (x DurationPredicate_Op) String() string {
	return proto.EnumName(DurationPredicate_Op_name, int32(x))
}
func (DurationPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

type DurationPredicate_Duration_Type int32

const (
	DurationPredicate_Duration_DAYS DurationPredicate_Duration_Type = 0
)

var DurationPredicate_Duration_Type_name = map[int32]string{
	0: "DAYS",
}
var DurationPredicate_Duration_Type_value = map[string]int32{
	"DAYS": 0,
}

func (x DurationPredicate_Duration_Type) String() string {
	return proto.EnumName(DurationPredicate_Duration_Type_name, int32(x))
}
func (DurationPredicate_Duration_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 0, 0}
}

type StringArrayPredicate_Op int32

const (
	StringArrayPredicate_IS_UNSET             StringArrayPredicate_Op = 0
	StringArrayPredicate_IS_SET               StringArrayPredicate_Op = 1
	StringArrayPredicate_CONTAINS_ANY         StringArrayPredicate_Op = 2
	StringArrayPredicate_DOES_NOT_CONTAIN_ANY StringArrayPredicate_Op = 3
	StringArrayPredicate_CONTAINS_ALL         StringArrayPredicate_Op = 4
	StringArrayPredicate_DOES_NOT_CONTAIN_ALL StringArrayPredicate_Op = 5
)

var StringArrayPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "CONTAINS_ANY",
	3: "DOES_NOT_CONTAIN_ANY",
	4: "CONTAINS_ALL",
	5: "DOES_NOT_CONTAIN_ALL",
}
var StringArrayPredicate_Op_value = map[string]int32{
	"IS_UNSET":             0,
	"IS_SET":               1,
	"CONTAINS_ANY":         2,
	"DOES_NOT_CONTAIN_ANY": 3,
	"CONTAINS_ALL":         4,
	"DOES_NOT_CONTAIN_ALL": 5,
}

func (x StringArrayPredicate_Op) String() string {
	return proto.EnumName(StringArrayPredicate_Op_name, int32(x))
}
func (StringArrayPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

type PredicateAggregate struct {
	Condition  PredicateAggregate_Condition `protobuf:"varint,1,opt,name=condition,enum=rover.protobuf.PredicateAggregate_Condition" json:"condition,omitempty"`
	Predicates []*Predicate                 `protobuf:"bytes,2,rep,name=predicates" json:"predicates,omitempty"`
}

func (m *PredicateAggregate) Reset()                    { *m = PredicateAggregate{} }
func (m *PredicateAggregate) String() string            { return proto.CompactTextString(m) }
func (*PredicateAggregate) ProtoMessage()               {}
func (*PredicateAggregate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PredicateAggregate) GetCondition() PredicateAggregate_Condition {
	if m != nil {
		return m.Condition
	}
	return PredicateAggregate_ANY
}

func (m *PredicateAggregate) GetPredicates() []*Predicate {
	if m != nil {
		return m.Predicates
	}
	return nil
}

type Predicate struct {
	// Types that are valid to be assigned to Value:
	//	*Predicate_StringPredicate
	//	*Predicate_BoolPredicate
	//	*Predicate_NumberPredicate
	//	*Predicate_DatePredicate
	//	*Predicate_VersionPredicate
	//	*Predicate_GeofencePredicate
	//	*Predicate_DoublePredicate
	//	*Predicate_StringArrayPredicate
	//	*Predicate_DurationPredicate
	Value isPredicate_Value `protobuf_oneof:"value"`
}

func (m *Predicate) Reset()                    { *m = Predicate{} }
func (m *Predicate) String() string            { return proto.CompactTextString(m) }
func (*Predicate) ProtoMessage()               {}
func (*Predicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isPredicate_Value interface {
	isPredicate_Value()
}

type Predicate_StringPredicate struct {
	StringPredicate *StringPredicate `protobuf:"bytes,2,opt,name=string_predicate,json=stringPredicate,oneof"`
}
type Predicate_BoolPredicate struct {
	BoolPredicate *BoolPredicate `protobuf:"bytes,3,opt,name=bool_predicate,json=boolPredicate,oneof"`
}
type Predicate_NumberPredicate struct {
	NumberPredicate *NumberPredicate `protobuf:"bytes,4,opt,name=number_predicate,json=numberPredicate,oneof"`
}
type Predicate_DatePredicate struct {
	DatePredicate *DatePredicate `protobuf:"bytes,5,opt,name=date_predicate,json=datePredicate,oneof"`
}
type Predicate_VersionPredicate struct {
	VersionPredicate *VersionPredicate `protobuf:"bytes,6,opt,name=version_predicate,json=versionPredicate,oneof"`
}
type Predicate_GeofencePredicate struct {
	GeofencePredicate *GeofencePredicate `protobuf:"bytes,7,opt,name=geofence_predicate,json=geofencePredicate,oneof"`
}
type Predicate_DoublePredicate struct {
	DoublePredicate *DoublePredicate `protobuf:"bytes,8,opt,name=double_predicate,json=doublePredicate,oneof"`
}
type Predicate_StringArrayPredicate struct {
	StringArrayPredicate *StringArrayPredicate `protobuf:"bytes,9,opt,name=string_array_predicate,json=stringArrayPredicate,oneof"`
}
type Predicate_DurationPredicate struct {
	DurationPredicate *DurationPredicate `protobuf:"bytes,10,opt,name=duration_predicate,json=durationPredicate,oneof"`
}

func (*Predicate_StringPredicate) isPredicate_Value()      {}
func (*Predicate_BoolPredicate) isPredicate_Value()        {}
func (*Predicate_NumberPredicate) isPredicate_Value()      {}
func (*Predicate_DatePredicate) isPredicate_Value()        {}
func (*Predicate_VersionPredicate) isPredicate_Value()     {}
func (*Predicate_GeofencePredicate) isPredicate_Value()    {}
func (*Predicate_DoublePredicate) isPredicate_Value()      {}
func (*Predicate_StringArrayPredicate) isPredicate_Value() {}
func (*Predicate_DurationPredicate) isPredicate_Value()    {}

func (m *Predicate) GetValue() isPredicate_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Predicate) GetStringPredicate() *StringPredicate {
	if x, ok := m.GetValue().(*Predicate_StringPredicate); ok {
		return x.StringPredicate
	}
	return nil
}

func (m *Predicate) GetBoolPredicate() *BoolPredicate {
	if x, ok := m.GetValue().(*Predicate_BoolPredicate); ok {
		return x.BoolPredicate
	}
	return nil
}

func (m *Predicate) GetNumberPredicate() *NumberPredicate {
	if x, ok := m.GetValue().(*Predicate_NumberPredicate); ok {
		return x.NumberPredicate
	}
	return nil
}

func (m *Predicate) GetDatePredicate() *DatePredicate {
	if x, ok := m.GetValue().(*Predicate_DatePredicate); ok {
		return x.DatePredicate
	}
	return nil
}

func (m *Predicate) GetVersionPredicate() *VersionPredicate {
	if x, ok := m.GetValue().(*Predicate_VersionPredicate); ok {
		return x.VersionPredicate
	}
	return nil
}

func (m *Predicate) GetGeofencePredicate() *GeofencePredicate {
	if x, ok := m.GetValue().(*Predicate_GeofencePredicate); ok {
		return x.GeofencePredicate
	}
	return nil
}

func (m *Predicate) GetDoublePredicate() *DoublePredicate {
	if x, ok := m.GetValue().(*Predicate_DoublePredicate); ok {
		return x.DoublePredicate
	}
	return nil
}

func (m *Predicate) GetStringArrayPredicate() *StringArrayPredicate {
	if x, ok := m.GetValue().(*Predicate_StringArrayPredicate); ok {
		return x.StringArrayPredicate
	}
	return nil
}

func (m *Predicate) GetDurationPredicate() *DurationPredicate {
	if x, ok := m.GetValue().(*Predicate_DurationPredicate); ok {
		return x.DurationPredicate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Predicate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Predicate_OneofMarshaler, _Predicate_OneofUnmarshaler, _Predicate_OneofSizer, []interface{}{
		(*Predicate_StringPredicate)(nil),
		(*Predicate_BoolPredicate)(nil),
		(*Predicate_NumberPredicate)(nil),
		(*Predicate_DatePredicate)(nil),
		(*Predicate_VersionPredicate)(nil),
		(*Predicate_GeofencePredicate)(nil),
		(*Predicate_DoublePredicate)(nil),
		(*Predicate_StringArrayPredicate)(nil),
		(*Predicate_DurationPredicate)(nil),
	}
}

func _Predicate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Predicate)
	// value
	switch x := m.Value.(type) {
	case *Predicate_StringPredicate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringPredicate); err != nil {
			return err
		}
	case *Predicate_BoolPredicate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BoolPredicate); err != nil {
			return err
		}
	case *Predicate_NumberPredicate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NumberPredicate); err != nil {
			return err
		}
	case *Predicate_DatePredicate:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DatePredicate); err != nil {
			return err
		}
	case *Predicate_VersionPredicate:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VersionPredicate); err != nil {
			return err
		}
	case *Predicate_GeofencePredicate:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GeofencePredicate); err != nil {
			return err
		}
	case *Predicate_DoublePredicate:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DoublePredicate); err != nil {
			return err
		}
	case *Predicate_StringArrayPredicate:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringArrayPredicate); err != nil {
			return err
		}
	case *Predicate_DurationPredicate:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DurationPredicate); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Predicate.Value has unexpected type %T", x)
	}
	return nil
}

func _Predicate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Predicate)
	switch tag {
	case 2: // value.string_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StringPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_StringPredicate{msg}
		return true, err
	case 3: // value.bool_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BoolPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_BoolPredicate{msg}
		return true, err
	case 4: // value.number_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NumberPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_NumberPredicate{msg}
		return true, err
	case 5: // value.date_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatePredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_DatePredicate{msg}
		return true, err
	case 6: // value.version_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VersionPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_VersionPredicate{msg}
		return true, err
	case 7: // value.geofence_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GeofencePredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_GeofencePredicate{msg}
		return true, err
	case 8: // value.double_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DoublePredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_DoublePredicate{msg}
		return true, err
	case 9: // value.string_array_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StringArrayPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_StringArrayPredicate{msg}
		return true, err
	case 10: // value.duration_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DurationPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_DurationPredicate{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Predicate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Predicate)
	// value
	switch x := m.Value.(type) {
	case *Predicate_StringPredicate:
		s := proto.Size(x.StringPredicate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_BoolPredicate:
		s := proto.Size(x.BoolPredicate)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_NumberPredicate:
		s := proto.Size(x.NumberPredicate)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_DatePredicate:
		s := proto.Size(x.DatePredicate)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_VersionPredicate:
		s := proto.Size(x.VersionPredicate)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_GeofencePredicate:
		s := proto.Size(x.GeofencePredicate)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_DoublePredicate:
		s := proto.Size(x.DoublePredicate)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_StringArrayPredicate:
		s := proto.Size(x.StringArrayPredicate)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_DurationPredicate:
		s := proto.Size(x.DurationPredicate)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type StringPredicate struct {
	Op            StringPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.StringPredicate_Op" json:"op,omitempty"`
	Selector      string             `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string             `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         string             `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *StringPredicate) Reset()                    { *m = StringPredicate{} }
func (m *StringPredicate) String() string            { return proto.CompactTextString(m) }
func (*StringPredicate) ProtoMessage()               {}
func (*StringPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StringPredicate) GetOp() StringPredicate_Op {
	if m != nil {
		return m.Op
	}
	return StringPredicate_IS_UNSET
}

func (m *StringPredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *StringPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *StringPredicate) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type BoolPredicate struct {
	Op            BoolPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.BoolPredicate_Op" json:"op,omitempty"`
	Selector      string           `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string           `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         bool             `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
}

func (m *BoolPredicate) Reset()                    { *m = BoolPredicate{} }
func (m *BoolPredicate) String() string            { return proto.CompactTextString(m) }
func (*BoolPredicate) ProtoMessage()               {}
func (*BoolPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BoolPredicate) GetOp() BoolPredicate_Op {
	if m != nil {
		return m.Op
	}
	return BoolPredicate_IS_UNSET
}

func (m *BoolPredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *BoolPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *BoolPredicate) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type DoublePredicate struct {
	Op            DoublePredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.DoublePredicate_Op" json:"op,omitempty"`
	Selector      string             `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string             `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         float64            `protobuf:"fixed64,4,opt,name=value" json:"value,omitempty"`
	Value2        float64            `protobuf:"fixed64,5,opt,name=value2" json:"value2,omitempty"`
}

func (m *DoublePredicate) Reset()                    { *m = DoublePredicate{} }
func (m *DoublePredicate) String() string            { return proto.CompactTextString(m) }
func (*DoublePredicate) ProtoMessage()               {}
func (*DoublePredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DoublePredicate) GetOp() DoublePredicate_Op {
	if m != nil {
		return m.Op
	}
	return DoublePredicate_IS_UNSET
}

func (m *DoublePredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *DoublePredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *DoublePredicate) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DoublePredicate) GetValue2() float64 {
	if m != nil {
		return m.Value2
	}
	return 0
}

type NumberPredicate struct {
	Op            NumberPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.NumberPredicate_Op" json:"op,omitempty"`
	Selector      string             `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string             `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         int64              `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	Value2        int64              `protobuf:"varint,5,opt,name=value2" json:"value2,omitempty"`
}

func (m *NumberPredicate) Reset()                    { *m = NumberPredicate{} }
func (m *NumberPredicate) String() string            { return proto.CompactTextString(m) }
func (*NumberPredicate) ProtoMessage()               {}
func (*NumberPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NumberPredicate) GetOp() NumberPredicate_Op {
	if m != nil {
		return m.Op
	}
	return NumberPredicate_IS_UNSET
}

func (m *NumberPredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *NumberPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *NumberPredicate) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *NumberPredicate) GetValue2() int64 {
	if m != nil {
		return m.Value2
	}
	return 0
}

type DatePredicate struct {
	Op            DatePredicate_Op    `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.DatePredicate_Op" json:"op,omitempty"`
	Selector      string              `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string              `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         *DatePredicate_Date `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *DatePredicate) Reset()                    { *m = DatePredicate{} }
func (m *DatePredicate) String() string            { return proto.CompactTextString(m) }
func (*DatePredicate) ProtoMessage()               {}
func (*DatePredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DatePredicate) GetOp() DatePredicate_Op {
	if m != nil {
		return m.Op
	}
	return DatePredicate_IS_UNSET
}

func (m *DatePredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *DatePredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *DatePredicate) GetValue() *DatePredicate_Date {
	if m != nil {
		return m.Value
	}
	return nil
}

type DatePredicate_Date struct {
	Day   uint32 `protobuf:"varint,1,opt,name=day" json:"day,omitempty"`
	Month uint32 `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	Year  uint32 `protobuf:"varint,3,opt,name=year" json:"year,omitempty"`
}

func (m *DatePredicate_Date) Reset()                    { *m = DatePredicate_Date{} }
func (m *DatePredicate_Date) String() string            { return proto.CompactTextString(m) }
func (*DatePredicate_Date) ProtoMessage()               {}
func (*DatePredicate_Date) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *DatePredicate_Date) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *DatePredicate_Date) GetMonth() uint32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *DatePredicate_Date) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

type VersionPredicate struct {
	Op            VersionPredicate_Op     `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.VersionPredicate_Op" json:"op,omitempty"`
	Selector      string                  `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string                  `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         *rover_protobuf.Version `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	Value2        *rover_protobuf.Version `protobuf:"bytes,5,opt,name=value2" json:"value2,omitempty"`
}

func (m *VersionPredicate) Reset()                    { *m = VersionPredicate{} }
func (m *VersionPredicate) String() string            { return proto.CompactTextString(m) }
func (*VersionPredicate) ProtoMessage()               {}
func (*VersionPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *VersionPredicate) GetOp() VersionPredicate_Op {
	if m != nil {
		return m.Op
	}
	return VersionPredicate_IS_UNSET
}

func (m *VersionPredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *VersionPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *VersionPredicate) GetValue() *rover_protobuf.Version {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *VersionPredicate) GetValue2() *rover_protobuf.Version {
	if m != nil {
		return m.Value2
	}
	return nil
}

type GeofencePredicate struct {
	Op            GeofencePredicate_Op        `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.GeofencePredicate_Op" json:"op,omitempty"`
	Selector      string                      `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string                      `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         *GeofencePredicate_Location `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *GeofencePredicate) Reset()                    { *m = GeofencePredicate{} }
func (m *GeofencePredicate) String() string            { return proto.CompactTextString(m) }
func (*GeofencePredicate) ProtoMessage()               {}
func (*GeofencePredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GeofencePredicate) GetOp() GeofencePredicate_Op {
	if m != nil {
		return m.Op
	}
	return GeofencePredicate_IS_UNSET
}

func (m *GeofencePredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *GeofencePredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *GeofencePredicate) GetValue() *GeofencePredicate_Location {
	if m != nil {
		return m.Value
	}
	return nil
}

type GeofencePredicate_Location struct {
	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Radius    int32   `protobuf:"varint,3,opt,name=radius" json:"radius,omitempty"`
	Name      string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *GeofencePredicate_Location) Reset()                    { *m = GeofencePredicate_Location{} }
func (m *GeofencePredicate_Location) String() string            { return proto.CompactTextString(m) }
func (*GeofencePredicate_Location) ProtoMessage()               {}
func (*GeofencePredicate_Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *GeofencePredicate_Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *GeofencePredicate_Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GeofencePredicate_Location) GetRadius() int32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *GeofencePredicate_Location) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DurationPredicate struct {
	Op            DurationPredicate_Op        `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.DurationPredicate_Op" json:"op,omitempty"`
	Selector      string                      `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string                      `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         *DurationPredicate_Duration `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *DurationPredicate) Reset()                    { *m = DurationPredicate{} }
func (m *DurationPredicate) String() string            { return proto.CompactTextString(m) }
func (*DurationPredicate) ProtoMessage()               {}
func (*DurationPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DurationPredicate) GetOp() DurationPredicate_Op {
	if m != nil {
		return m.Op
	}
	return DurationPredicate_IS_GREATER_THAN
}

func (m *DurationPredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *DurationPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *DurationPredicate) GetValue() *DurationPredicate_Duration {
	if m != nil {
		return m.Value
	}
	return nil
}

type DurationPredicate_Duration struct {
	Duration uint32                          `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	Type     DurationPredicate_Duration_Type `protobuf:"varint,2,opt,name=type,enum=rover.protobuf.DurationPredicate_Duration_Type" json:"type,omitempty"`
}

func (m *DurationPredicate_Duration) Reset()                    { *m = DurationPredicate_Duration{} }
func (m *DurationPredicate_Duration) String() string            { return proto.CompactTextString(m) }
func (*DurationPredicate_Duration) ProtoMessage()               {}
func (*DurationPredicate_Duration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

func (m *DurationPredicate_Duration) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *DurationPredicate_Duration) GetType() DurationPredicate_Duration_Type {
	if m != nil {
		return m.Type
	}
	return DurationPredicate_Duration_DAYS
}

type StringArrayPredicate struct {
	Op            StringArrayPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.protobuf.StringArrayPredicate_Op" json:"op,omitempty"`
	Selector      string                  `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	AttributeName string                  `protobuf:"bytes,3,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         []string                `protobuf:"bytes,4,rep,name=value" json:"value,omitempty"`
}

func (m *StringArrayPredicate) Reset()                    { *m = StringArrayPredicate{} }
func (m *StringArrayPredicate) String() string            { return proto.CompactTextString(m) }
func (*StringArrayPredicate) ProtoMessage()               {}
func (*StringArrayPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *StringArrayPredicate) GetOp() StringArrayPredicate_Op {
	if m != nil {
		return m.Op
	}
	return StringArrayPredicate_IS_UNSET
}

func (m *StringArrayPredicate) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *StringArrayPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *StringArrayPredicate) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*PredicateAggregate)(nil), "rover.protobuf.PredicateAggregate")
	proto.RegisterType((*Predicate)(nil), "rover.protobuf.Predicate")
	proto.RegisterType((*StringPredicate)(nil), "rover.protobuf.StringPredicate")
	proto.RegisterType((*BoolPredicate)(nil), "rover.protobuf.BoolPredicate")
	proto.RegisterType((*DoublePredicate)(nil), "rover.protobuf.DoublePredicate")
	proto.RegisterType((*NumberPredicate)(nil), "rover.protobuf.NumberPredicate")
	proto.RegisterType((*DatePredicate)(nil), "rover.protobuf.DatePredicate")
	proto.RegisterType((*DatePredicate_Date)(nil), "rover.protobuf.DatePredicate.Date")
	proto.RegisterType((*VersionPredicate)(nil), "rover.protobuf.VersionPredicate")
	proto.RegisterType((*GeofencePredicate)(nil), "rover.protobuf.GeofencePredicate")
	proto.RegisterType((*GeofencePredicate_Location)(nil), "rover.protobuf.GeofencePredicate.Location")
	proto.RegisterType((*DurationPredicate)(nil), "rover.protobuf.DurationPredicate")
	proto.RegisterType((*DurationPredicate_Duration)(nil), "rover.protobuf.DurationPredicate.Duration")
	proto.RegisterType((*StringArrayPredicate)(nil), "rover.protobuf.StringArrayPredicate")
	proto.RegisterEnum("rover.protobuf.PredicateAggregate_Condition", PredicateAggregate_Condition_name, PredicateAggregate_Condition_value)
	proto.RegisterEnum("rover.protobuf.StringPredicate_Op", StringPredicate_Op_name, StringPredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.BoolPredicate_Op", BoolPredicate_Op_name, BoolPredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.DoublePredicate_Op", DoublePredicate_Op_name, DoublePredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.NumberPredicate_Op", NumberPredicate_Op_name, NumberPredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.DatePredicate_Op", DatePredicate_Op_name, DatePredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.VersionPredicate_Op", VersionPredicate_Op_name, VersionPredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.GeofencePredicate_Op", GeofencePredicate_Op_name, GeofencePredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.DurationPredicate_Op", DurationPredicate_Op_name, DurationPredicate_Op_value)
	proto.RegisterEnum("rover.protobuf.DurationPredicate_Duration_Type", DurationPredicate_Duration_Type_name, DurationPredicate_Duration_Type_value)
	proto.RegisterEnum("rover.protobuf.StringArrayPredicate_Op", StringArrayPredicate_Op_name, StringArrayPredicate_Op_value)
}

func init() { proto.RegisterFile("protobuf/predicates.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1074 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x57, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xae, 0xed, 0xfc, 0xf9, 0x74, 0x93, 0xba, 0xb3, 0xdd, 0xd2, 0x56, 0xac, 0x28, 0x66, 0x11,
	0x2b, 0xb4, 0xa4, 0x28, 0x8b, 0x04, 0x7b, 0x81, 0x84, 0xd3, 0xb8, 0xdb, 0xa2, 0xc8, 0x86, 0xb1,
	0xcb, 0x6a, 0x11, 0x52, 0xe4, 0xc4, 0xde, 0x10, 0x29, 0x8d, 0x23, 0xc7, 0xa9, 0xd4, 0x0b, 0x6e,
	0xb8, 0xe2, 0x1d, 0xb8, 0x41, 0xe2, 0x1a, 0x1e, 0x80, 0x27, 0x40, 0xbc, 0x07, 0xcf, 0x01, 0x33,
	0xe3, 0x9f, 0x8c, 0x1d, 0x6f, 0x52, 0x44, 0xbb, 0xbd, 0xca, 0x9c, 0x6f, 0xce, 0xf9, 0xe6, 0xcc,
	0x77, 0xce, 0x78, 0x26, 0xb0, 0x3f, 0x0d, 0xfc, 0xd0, 0xef, 0xcf, 0x5f, 0x1d, 0x4d, 0x03, 0xcf,
	0x1d, 0x0d, 0x9c, 0xd0, 0x9b, 0x35, 0x19, 0x86, 0x1a, 0x81, 0x7f, 0xe9, 0x05, 0xcd, 0xc4, 0xe1,
	0x60, 0x37, 0x75, 0x25, 0xf0, 0x6c, 0xe4, 0x4f, 0xa2, 0x29, 0xf5, 0x0f, 0x01, 0xd0, 0x57, 0x49,
	0xb0, 0x36, 0x1c, 0x06, 0xde, 0x90, 0x0c, 0xd0, 0x97, 0x20, 0x0f, 0xfc, 0x89, 0x3b, 0x0a, 0x89,
	0xe7, 0x9e, 0x70, 0x28, 0x3c, 0x6e, 0xb4, 0x9e, 0x34, 0xb3, 0x94, 0xcd, 0xe5, 0xb0, 0xe6, 0x71,
	0x12, 0x83, 0x17, 0xe1, 0xe8, 0x19, 0xc0, 0x22, 0xbd, 0x3d, 0xf1, 0x50, 0x7a, 0xbc, 0xd9, 0xda,
	0x7f, 0x2d, 0x19, 0xe6, 0x9c, 0xd5, 0x87, 0x20, 0xa7, 0x94, 0xa8, 0x0a, 0x92, 0x66, 0xbc, 0x54,
	0x36, 0xd8, 0xa0, 0xdb, 0x55, 0x04, 0xf5, 0xef, 0x32, 0xc8, 0x69, 0x20, 0xea, 0x82, 0x32, 0x0b,
	0x83, 0xd1, 0x64, 0xd8, 0x4b, 0x19, 0xc8, 0x6a, 0x02, 0x59, 0xed, 0x9d, 0xfc, 0x6a, 0x16, 0xf3,
	0x4b, 0x43, 0x4f, 0x37, 0xf0, 0xd6, 0x2c, 0x0b, 0xa1, 0x13, 0x68, 0xf4, 0x7d, 0x7f, 0xcc, 0x71,
	0x49, 0x8c, 0xeb, 0x61, 0x9e, 0xab, 0x4d, 0xbc, 0x78, 0xa6, 0x7a, 0x9f, 0x07, 0x68, 0x56, 0x93,
	0xf9, 0x45, 0xdf, 0x0b, 0x38, 0xa6, 0x52, 0x71, 0x56, 0x06, 0xf3, 0xcb, 0x64, 0x35, 0xc9, 0x42,
	0x34, 0x2b, 0x97, 0xfc, 0x72, 0x5c, 0xe5, 0xe2, 0xac, 0x3a, 0x64, 0x2e, 0x93, 0x95, 0xcb, 0x03,
	0xc8, 0x84, 0xed, 0xb8, 0x0f, 0x38, 0xaa, 0x0a, 0xa3, 0x3a, 0xcc, 0x53, 0x7d, 0x13, 0x39, 0xf2,
	0x6c, 0xca, 0x65, 0x0e, 0x43, 0x18, 0xd0, 0xd0, 0xf3, 0x5f, 0x79, 0x93, 0x01, 0x9f, 0x5c, 0x95,
	0x31, 0xbe, 0x9b, 0x67, 0x7c, 0x1e, 0x7b, 0xf2, 0x94, 0xdb, 0xc3, 0x3c, 0x48, 0xa5, 0x73, 0xfd,
	0x79, 0x7f, 0xcc, 0x33, 0xd6, 0x8a, 0xa5, 0xeb, 0x30, 0xbf, 0x8c, 0x74, 0x6e, 0x16, 0x42, 0xdf,
	0xc1, 0x6e, 0xdc, 0x1e, 0x4e, 0x10, 0x38, 0x57, 0x1c, 0xa7, 0xcc, 0x38, 0x1f, 0x15, 0x37, 0x89,
	0x46, 0x9d, 0x79, 0xe2, 0x9d, 0x59, 0x01, 0x4e, 0xf7, 0xef, 0xce, 0x03, 0x27, 0xcc, 0x2a, 0x0a,
	0xc5, 0xfb, 0xef, 0xc4, 0x9e, 0x99, 0xfd, 0xbb, 0x79, 0xb0, 0x5d, 0x85, 0xf2, 0xa5, 0x33, 0x9e,
	0x7b, 0xea, 0xaf, 0x22, 0x6c, 0xe5, 0x5a, 0x16, 0xb5, 0x40, 0xf4, 0xa7, 0xf1, 0xd1, 0x54, 0xd7,
	0xf4, 0x77, 0xd3, 0x9c, 0x62, 0xe2, 0x8d, 0x0e, 0xa0, 0x36, 0xf3, 0xc6, 0xde, 0x20, 0xf4, 0x03,
	0x76, 0x32, 0x64, 0x9c, 0xda, 0xe8, 0x7d, 0x68, 0x38, 0x21, 0x09, 0xeb, 0xcf, 0x49, 0x7b, 0x4d,
	0x9c, 0x8b, 0xa8, 0xdf, 0x65, 0x5c, 0x4f, 0x51, 0x83, 0x80, 0x68, 0x27, 0xce, 0x89, 0xf5, 0xb0,
	0x8c, 0xe3, 0x04, 0x7f, 0x14, 0x40, 0x34, 0xa7, 0xe8, 0x1e, 0xd4, 0xce, 0xac, 0xde, 0xb9, 0x61,
	0xe9, 0x36, 0x39, 0xa6, 0x00, 0x15, 0x62, 0xd1, 0xb1, 0x10, 0xcf, 0xe8, 0x5f, 0x9f, 0x6b, 0x5d,
	0x45, 0x44, 0x0a, 0xdc, 0x23, 0x96, 0x61, 0xda, 0x31, 0x22, 0xa1, 0x2d, 0xd8, 0xb4, 0x6c, 0x0d,
	0xdb, 0x56, 0xef, 0xc5, 0x99, 0x7d, 0xaa, 0x94, 0x50, 0x1d, 0x64, 0xdd, 0xe8, 0xc4, 0x66, 0x99,
	0xc6, 0x1f, 0x9b, 0x86, 0xad, 0x9d, 0x19, 0x96, 0x52, 0x21, 0x49, 0x28, 0x1d, 0x53, 0x8f, 0x18,
	0x62, 0x58, 0xa9, 0xaa, 0x7f, 0x0a, 0x50, 0xcf, 0x1c, 0x46, 0xf4, 0x31, 0xa7, 0xd1, 0xe1, 0xca,
	0x73, 0x7b, 0x5b, 0x0a, 0xd5, 0x12, 0x85, 0x9e, 0xfc, 0x17, 0x81, 0xd4, 0xdf, 0x48, 0xc1, 0x73,
	0x2d, 0xbd, 0xba, 0xe0, 0x39, 0xe7, 0xdb, 0xda, 0x8e, 0x10, 0x6f, 0x07, 0xed, 0x42, 0x85, 0x0d,
	0x5a, 0xec, 0xfb, 0x23, 0xe0, 0xd8, 0x52, 0xe7, 0xff, 0xb3, 0x0f, 0xee, 0xc3, 0x16, 0x41, 0x9e,
	0x63, 0x5d, 0xb3, 0x75, 0xdc, 0xb3, 0x4f, 0x35, 0x83, 0xf4, 0x42, 0xe4, 0xd6, 0xd5, 0x2d, 0x2b,
	0x42, 0xca, 0xa8, 0x01, 0x40, 0x90, 0xb6, 0x6e, 0xbf, 0xd0, 0x75, 0x43, 0xa9, 0x30, 0xbd, 0x72,
	0x5f, 0xcf, 0xd5, 0x7a, 0xe5, 0x9c, 0x6f, 0x4b, 0x2f, 0xa9, 0x58, 0x2f, 0xe9, 0xae, 0xf5, 0xfa,
	0x4b, 0x84, 0x7a, 0xe6, 0x86, 0x58, 0x7d, 0x54, 0x32, 0xae, 0x37, 0xa8, 0xd5, 0x67, 0xbc, 0x56,
	0x9b, 0x05, 0x5d, 0x9d, 0x59, 0x97, 0x5a, 0xb1, 0x9e, 0x07, 0x6d, 0x28, 0x51, 0x93, 0x6c, 0x55,
	0x72, 0x9d, 0x2b, 0x96, 0x77, 0x1d, 0xd3, 0x21, 0xd5, 0xff, 0xc2, 0x9f, 0x84, 0xdf, 0xb3, 0x9c,
	0xea, 0x38, 0x32, 0x10, 0x82, 0xd2, 0x95, 0xe7, 0x04, 0x2c, 0x8d, 0x3a, 0x66, 0x63, 0xf5, 0xe4,
	0x5a, 0xda, 0x6b, 0x27, 0x44, 0x59, 0xa2, 0x3d, 0xf9, 0x20, 0x31, 0x09, 0x4f, 0x4c, 0xac, 0x13,
	0xe1, 0x65, 0x28, 0x13, 0xd3, 0x24, 0x72, 0xab, 0x3f, 0x4b, 0xa0, 0xe4, 0xef, 0x48, 0xf4, 0x94,
	0xd3, 0xf3, 0xbd, 0x75, 0x37, 0xea, 0x0d, 0x4a, 0xfa, 0x51, 0x56, 0xd2, 0xb7, 0x5e, 0xb3, 0x74,
	0xd2, 0x97, 0x47, 0x99, 0xbe, 0x5c, 0xe1, 0x9f, 0x34, 0xec, 0xef, 0xc2, 0x9d, 0x74, 0x2c, 0x7a,
	0x1b, 0xf6, 0x72, 0x61, 0x3d, 0x13, 0xc7, 0xa4, 0x55, 0xb4, 0x0f, 0x0f, 0xf8, 0xf8, 0xc5, 0x54,
	0x4d, 0xfd, 0x47, 0x84, 0xed, 0xa5, 0xf7, 0x06, 0xfa, 0x84, 0x2b, 0xcf, 0xa3, 0xb5, 0xcf, 0x93,
	0x1b, 0xac, 0xcf, 0x17, 0xd9, 0xfa, 0x7c, 0xb8, 0x7e, 0xed, 0xae, 0x3f, 0x60, 0xef, 0x82, 0xa4,
	0xf5, 0xa7, 0x50, 0x4b, 0x20, 0xa2, 0x8a, 0x3c, 0xf6, 0x27, 0xc3, 0x51, 0x38, 0x77, 0x3d, 0xb6,
	0x1b, 0x01, 0x2f, 0x00, 0x9a, 0xee, 0x98, 0xf8, 0xb1, 0x49, 0x91, 0x4d, 0xa6, 0x36, 0xfd, 0x20,
	0x05, 0x8e, 0x3b, 0x9a, 0xcf, 0x58, 0x9a, 0x65, 0x1c, 0x5b, 0xf4, 0xa0, 0xb0, 0xe4, 0xa3, 0xeb,
	0x9d, 0x8d, 0xd5, 0xcf, 0xd7, 0x94, 0x3c, 0xaa, 0x95, 0x79, 0x6e, 0x5b, 0x67, 0x1d, 0x3d, 0x3d,
	0x2a, 0xf4, 0xe6, 0x26, 0xf7, 0xb2, 0xa4, 0xfe, 0x24, 0xc1, 0xf6, 0xd2, 0x8b, 0x67, 0x75, 0x05,
	0x96, 0xdc, 0xdf, 0x60, 0x05, 0x96, 0xd7, 0x4e, 0x90, 0xa4, 0x02, 0x3f, 0x40, 0x2d, 0x81, 0x68,
	0x42, 0xc9, 0xc3, 0x2d, 0xfe, 0x0a, 0xa5, 0x36, 0x3a, 0x86, 0x52, 0x78, 0x35, 0x8d, 0xb4, 0x6f,
	0xb4, 0x8e, 0xae, 0xbf, 0x50, 0xd3, 0x26, 0x61, 0x98, 0x05, 0xab, 0x0a, 0x94, 0xa8, 0x85, 0x6a,
	0xe4, 0x8b, 0xa7, 0xbd, 0xb4, 0x94, 0x0d, 0xf5, 0x19, 0x2b, 0x47, 0xc1, 0x39, 0xda, 0x58, 0x3a,
	0x47, 0xf9, 0x77, 0xc5, 0x2f, 0x22, 0xec, 0x14, 0x3d, 0x6b, 0xd1, 0xa7, 0x5c, 0x35, 0x3e, 0xb8,
	0xce, 0x43, 0xf8, 0x76, 0x6e, 0x4c, 0x69, 0xf1, 0xa4, 0xbc, 0x5c, 0xd3, 0x74, 0x64, 0xab, 0xc9,
	0x8b, 0xb0, 0x47, 0xff, 0x16, 0x8a, 0x68, 0x0f, 0x76, 0xf2, 0xaf, 0x42, 0x36, 0x23, 0x65, 0x7d,
	0xc9, 0x3f, 0xc7, 0x52, 0xb1, 0x2f, 0x99, 0x29, 0xb7, 0x1f, 0x7c, 0x7b, 0xbf, 0xe0, 0x5f, 0x75,
	0xbf, 0xc2, 0xc0, 0xa7, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x48, 0xc0, 0xed, 0x73, 0x0f,
	0x00, 0x00,
}
