// Code generated by protoc-gen-go.
// source: audience/v1/audience.proto
// DO NOT EDIT!

/*
Package audience is a generated protocol buffer package.

It is generated from these files:
	audience/v1/audience.proto

It has these top-level messages:
	GetProfileRequest
	GetProfileResponse
	CreateProfileRequest
	CreateProfileResponse
	DeleteProfileRequest
	DeleteProfileResponse
	UpdateProfileRequest
	UpdateProfileResponse
	UpdateProfileIdentifierRequest
	UpdateProfileIdentifierResponse
	GetProfileByDeviceIdRequest
	GetProfileByDeviceIdResponse
	GetProfileByIdentifierRequest
	GetProfileByIdentifierResponse
	ListProfilesByIdsRequest
	ListProfilesByIdsResponse
	ListProfilesByIdentifiersRequest
	ListProfilesByIdentifiersResponse
	GetProfileSchemaRequest
	GetProfileSchemaResponse
	Profile
	ProfileSchema
	GetDeviceRequest
	GetDeviceResponse
	GetDeviceByPushTokenRequest
	GetDeviceByPushTokenResponse
	CreateDeviceRequest
	CreateDeviceResponse
	UpdateDevicePushTokenRequest
	UpdateDevicePushTokenResponse
	UpdateDeviceUnregisterPushTokenRequest
	UpdateDeviceUnregisterPushTokenResponse
	UpdateDeviceLocationRequest
	UpdateDeviceLocationResponse
	UpdateDeviceGeofenceMonitoringRequest
	UpdateDeviceGeofenceMonitoringResponse
	UpdateDeviceIBeaconMonitoringRequest
	UpdateDeviceIBeaconMonitoringResponse
	UpdateDeviceTestPropertyRequest
	UpdateDeviceTestPropertyResponse
	DeleteDeviceRequest
	DeleteDeviceResponse
	SetDeviceProfileRequest
	SetDeviceProfileResponse
	ListDevicesByProfileIdRequest
	ListDevicesByProfileIdResponse
	ListDevicesByProfileIdentifierRequest
	ListDevicesByProfileIdentifierResponse
	GetDeviceSchemaRequest
	GetDeviceSchemaResponse
	UpdateDeviceRequest
	UpdateDeviceResponse
	Device
	IBeaconRegion
	GeofenceRegion
	ValueUpdates
	ValueUpdate
	Value
	SchemaAttribute
	Version
	CreateDynamicSegmentRequest
	CreateDynamicSegmentResponse
	GetDynamicSegmentByIdRequest
	GetDynamicSegmentByIdResponse
	UpdateDynamicSegmentTitleRequest
	UpdateDynamicSegmentTitleResponse
	UpdateDynamicSegmentPredicatesRequest
	UpdateDynamicSegmentPredicatesResponse
	ArchiveDynamicSegmentByIdRequest
	ArchiveDynamicSegmentByIdResponse
	ListDynamicSegmentsRequest
	ListDynamicSegmentsResponse
	DynamicSegment
	StringPredicate
	BoolPredicate
	NumberPredicate
	DatePredicate
	GeofencePredicate
	VersionPredicate
	PredicateAggregate
	Predicate
*/
package audience

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/roverplatform/rover/go/protobuf/ptypes/timestamp"
import rover_auth_v1 "github.com/roverplatform/rover/apis/go/auth/v1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Platform int32

const (
	Platform_UNDEFINED Platform = 0
	Platform_MOBILE    Platform = 1
	Platform_WEB       Platform = 2
)

var Platform_name = map[int32]string{
	0: "UNDEFINED",
	1: "MOBILE",
	2: "WEB",
}
var Platform_value = map[string]int32{
	"UNDEFINED": 0,
	"MOBILE":    1,
	"WEB":       2,
}

func (x Platform) String() string {
	return proto.EnumName(Platform_name, int32(x))
}
func (Platform) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Null int32

const (
	// Null value.
	Null_NULL Null = 0
)

var Null_name = map[int32]string{
	0: "NULL",
}
var Null_value = map[string]int32{
	"NULL": 0,
}

func (x Null) String() string {
	return proto.EnumName(Null_name, int32(x))
}
func (Null) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Device_RegionMonitoringMode int32

const (
	Device_UNDEFINED Device_RegionMonitoringMode = 0
	Device_ROVER     Device_RegionMonitoringMode = 1
	Device_GIMBAL    Device_RegionMonitoringMode = 2
)

var Device_RegionMonitoringMode_name = map[int32]string{
	0: "UNDEFINED",
	1: "ROVER",
	2: "GIMBAL",
}
var Device_RegionMonitoringMode_value = map[string]int32{
	"UNDEFINED": 0,
	"ROVER":     1,
	"GIMBAL":    2,
}

func (x Device_RegionMonitoringMode) String() string {
	return proto.EnumName(Device_RegionMonitoringMode_name, int32(x))
}
func (Device_RegionMonitoringMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{52, 0}
}

// UpdateType describes possible updates
type ValueUpdate_UpdateType int32

const (
	ValueUpdate_SET ValueUpdate_UpdateType = 0
	// ADD and REMOVE are for array[string]
	ValueUpdate_ADD    ValueUpdate_UpdateType = 3
	ValueUpdate_REMOVE ValueUpdate_UpdateType = 4
)

var ValueUpdate_UpdateType_name = map[int32]string{
	0: "SET",
	3: "ADD",
	4: "REMOVE",
}
var ValueUpdate_UpdateType_value = map[string]int32{
	"SET":    0,
	"ADD":    3,
	"REMOVE": 4,
}

func (x ValueUpdate_UpdateType) String() string {
	return proto.EnumName(ValueUpdate_UpdateType_name, int32(x))
}
func (ValueUpdate_UpdateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{56, 0} }

type StringPredicate_Op int32

const (
	StringPredicate_IS_UNSET         StringPredicate_Op = 0
	StringPredicate_IS_SET           StringPredicate_Op = 1
	StringPredicate_IS_EQUAL         StringPredicate_Op = 2
	StringPredicate_IS_NOT_EQUAL     StringPredicate_Op = 3
	StringPredicate_STARTS_WITH      StringPredicate_Op = 4
	StringPredicate_ENDS_WITH        StringPredicate_Op = 5
	StringPredicate_CONTAINS         StringPredicate_Op = 6
	StringPredicate_DOES_NOT_CONTAIN StringPredicate_Op = 7
)

var StringPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "STARTS_WITH",
	5: "ENDS_WITH",
	6: "CONTAINS",
	7: "DOES_NOT_CONTAIN",
}
var StringPredicate_Op_value = map[string]int32{
	"IS_UNSET":         0,
	"IS_SET":           1,
	"IS_EQUAL":         2,
	"IS_NOT_EQUAL":     3,
	"STARTS_WITH":      4,
	"ENDS_WITH":        5,
	"CONTAINS":         6,
	"DOES_NOT_CONTAIN": 7,
}

func (x StringPredicate_Op) String() string {
	return proto.EnumName(StringPredicate_Op_name, int32(x))
}
func (StringPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{73, 0} }

type BoolPredicate_Op int32

const (
	BoolPredicate_IS_UNSET BoolPredicate_Op = 0
	BoolPredicate_IS_SET   BoolPredicate_Op = 1
	BoolPredicate_IS_EQUAL BoolPredicate_Op = 2
)

var BoolPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
}
var BoolPredicate_Op_value = map[string]int32{
	"IS_UNSET": 0,
	"IS_SET":   1,
	"IS_EQUAL": 2,
}

func (x BoolPredicate_Op) String() string {
	return proto.EnumName(BoolPredicate_Op_name, int32(x))
}
func (BoolPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{74, 0} }

type NumberPredicate_Op int32

const (
	NumberPredicate_IS_UNSET        NumberPredicate_Op = 0
	NumberPredicate_IS_SET          NumberPredicate_Op = 1
	NumberPredicate_IS_EQUAL        NumberPredicate_Op = 2
	NumberPredicate_IS_NOT_EQUAL    NumberPredicate_Op = 3
	NumberPredicate_IS_GREATER_THAN NumberPredicate_Op = 4
	NumberPredicate_IS_LESS_THAN    NumberPredicate_Op = 5
	NumberPredicate_IS_BETWEEN      NumberPredicate_Op = 6
)

var NumberPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "IS_GREATER_THAN",
	5: "IS_LESS_THAN",
	6: "IS_BETWEEN",
}
var NumberPredicate_Op_value = map[string]int32{
	"IS_UNSET":        0,
	"IS_SET":          1,
	"IS_EQUAL":        2,
	"IS_NOT_EQUAL":    3,
	"IS_GREATER_THAN": 4,
	"IS_LESS_THAN":    5,
	"IS_BETWEEN":      6,
}

func (x NumberPredicate_Op) String() string {
	return proto.EnumName(NumberPredicate_Op_name, int32(x))
}
func (NumberPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{75, 0} }

type DatePredicate_Op int32

const (
	DatePredicate_IS_UNSET        DatePredicate_Op = 0
	DatePredicate_IS_SET          DatePredicate_Op = 1
	DatePredicate_IS_EQUAL        DatePredicate_Op = 2
	DatePredicate_IS_NOT_EQUAL    DatePredicate_Op = 3
	DatePredicate_IS_GREATER_THAN DatePredicate_Op = 4
	DatePredicate_IS_LESS_THAN    DatePredicate_Op = 5
	DatePredicate_IS_BETWEEN      DatePredicate_Op = 6
	DatePredicate_IS_AFTER        DatePredicate_Op = 7
	DatePredicate_IS_BEFORE       DatePredicate_Op = 8
	DatePredicate_IS_ON           DatePredicate_Op = 9
)

var DatePredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "IS_GREATER_THAN",
	5: "IS_LESS_THAN",
	6: "IS_BETWEEN",
	7: "IS_AFTER",
	8: "IS_BEFORE",
	9: "IS_ON",
}
var DatePredicate_Op_value = map[string]int32{
	"IS_UNSET":        0,
	"IS_SET":          1,
	"IS_EQUAL":        2,
	"IS_NOT_EQUAL":    3,
	"IS_GREATER_THAN": 4,
	"IS_LESS_THAN":    5,
	"IS_BETWEEN":      6,
	"IS_AFTER":        7,
	"IS_BEFORE":       8,
	"IS_ON":           9,
}

func (x DatePredicate_Op) String() string {
	return proto.EnumName(DatePredicate_Op_name, int32(x))
}
func (DatePredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{76, 0} }

type GeofencePredicate_Op int32

const (
	GeofencePredicate_IS_UNSET   GeofencePredicate_Op = 0
	GeofencePredicate_IS_SET     GeofencePredicate_Op = 1
	GeofencePredicate_IS_OUTSIDE GeofencePredicate_Op = 2
	GeofencePredicate_IS_WITHIN  GeofencePredicate_Op = 3
)

var GeofencePredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_OUTSIDE",
	3: "IS_WITHIN",
}
var GeofencePredicate_Op_value = map[string]int32{
	"IS_UNSET":   0,
	"IS_SET":     1,
	"IS_OUTSIDE": 2,
	"IS_WITHIN":  3,
}

func (x GeofencePredicate_Op) String() string {
	return proto.EnumName(GeofencePredicate_Op_name, int32(x))
}
func (GeofencePredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{77, 0} }

type VersionPredicate_Op int32

const (
	VersionPredicate_IS_UNSET                 VersionPredicate_Op = 0
	VersionPredicate_IS_SET                   VersionPredicate_Op = 1
	VersionPredicate_IS_EQUAL                 VersionPredicate_Op = 2
	VersionPredicate_IS_NOT_EQUAL             VersionPredicate_Op = 3
	VersionPredicate_IS_GREATER_THAN          VersionPredicate_Op = 4
	VersionPredicate_IS_LESS_THAN             VersionPredicate_Op = 5
	VersionPredicate_IS_BETWEEN               VersionPredicate_Op = 6
	VersionPredicate_IS_GREATER_THAN_OR_EQUAL VersionPredicate_Op = 7
	VersionPredicate_IS_LESS_THAN_OR_EQUAL    VersionPredicate_Op = 8
)

var VersionPredicate_Op_name = map[int32]string{
	0: "IS_UNSET",
	1: "IS_SET",
	2: "IS_EQUAL",
	3: "IS_NOT_EQUAL",
	4: "IS_GREATER_THAN",
	5: "IS_LESS_THAN",
	6: "IS_BETWEEN",
	7: "IS_GREATER_THAN_OR_EQUAL",
	8: "IS_LESS_THAN_OR_EQUAL",
}
var VersionPredicate_Op_value = map[string]int32{
	"IS_UNSET":                 0,
	"IS_SET":                   1,
	"IS_EQUAL":                 2,
	"IS_NOT_EQUAL":             3,
	"IS_GREATER_THAN":          4,
	"IS_LESS_THAN":             5,
	"IS_BETWEEN":               6,
	"IS_GREATER_THAN_OR_EQUAL": 7,
	"IS_LESS_THAN_OR_EQUAL":    8,
}

func (x VersionPredicate_Op) String() string {
	return proto.EnumName(VersionPredicate_Op_name, int32(x))
}
func (VersionPredicate_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{78, 0} }

type PredicateAggregate_Condition int32

const (
	PredicateAggregate_ANY PredicateAggregate_Condition = 0
	PredicateAggregate_ALL PredicateAggregate_Condition = 1
)

var PredicateAggregate_Condition_name = map[int32]string{
	0: "ANY",
	1: "ALL",
}
var PredicateAggregate_Condition_value = map[string]int32{
	"ANY": 0,
	"ALL": 1,
}

func (x PredicateAggregate_Condition) String() string {
	return proto.EnumName(PredicateAggregate_Condition_name, int32(x))
}
func (PredicateAggregate_Condition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{79, 0}
}

type GetProfileRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	ProfileId   string                     `protobuf:"bytes,2,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
}

func (m *GetProfileRequest) Reset()                    { *m = GetProfileRequest{} }
func (m *GetProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProfileRequest) ProtoMessage()               {}
func (*GetProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetProfileRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *GetProfileRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

type GetProfileResponse struct {
	Profile *Profile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *GetProfileResponse) Reset()                    { *m = GetProfileResponse{} }
func (m *GetProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProfileResponse) ProtoMessage()               {}
func (*GetProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetProfileResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type CreateProfileRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
}

func (m *CreateProfileRequest) Reset()                    { *m = CreateProfileRequest{} }
func (m *CreateProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProfileRequest) ProtoMessage()               {}
func (*CreateProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateProfileRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

type CreateProfileResponse struct {
	Profile *Profile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *CreateProfileResponse) Reset()                    { *m = CreateProfileResponse{} }
func (m *CreateProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProfileResponse) ProtoMessage()               {}
func (*CreateProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateProfileResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type DeleteProfileRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	ProfileId   string                     `protobuf:"bytes,2,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
}

func (m *DeleteProfileRequest) Reset()                    { *m = DeleteProfileRequest{} }
func (m *DeleteProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProfileRequest) ProtoMessage()               {}
func (*DeleteProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeleteProfileRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *DeleteProfileRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

type DeleteProfileResponse struct {
}

func (m *DeleteProfileResponse) Reset()                    { *m = DeleteProfileResponse{} }
func (m *DeleteProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProfileResponse) ProtoMessage()               {}
func (*DeleteProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type UpdateProfileRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	ProfileId   string                     `protobuf:"bytes,2,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
	Attributes  map[string]*ValueUpdates   `protobuf:"bytes,5,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *UpdateProfileRequest) Reset()                    { *m = UpdateProfileRequest{} }
func (m *UpdateProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProfileRequest) ProtoMessage()               {}
func (*UpdateProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateProfileRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateProfileRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

func (m *UpdateProfileRequest) GetAttributes() map[string]*ValueUpdates {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type UpdateProfileResponse struct {
}

func (m *UpdateProfileResponse) Reset()                    { *m = UpdateProfileResponse{} }
func (m *UpdateProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProfileResponse) ProtoMessage()               {}
func (*UpdateProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type UpdateProfileIdentifierRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	// profile to set identifier on
	ProfileId string `protobuf:"bytes,2,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
	// the identifier value to set the identifier to
	Identifier string `protobuf:"bytes,3,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *UpdateProfileIdentifierRequest) Reset()                    { *m = UpdateProfileIdentifierRequest{} }
func (m *UpdateProfileIdentifierRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProfileIdentifierRequest) ProtoMessage()               {}
func (*UpdateProfileIdentifierRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateProfileIdentifierRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateProfileIdentifierRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

func (m *UpdateProfileIdentifierRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type UpdateProfileIdentifierResponse struct {
}

func (m *UpdateProfileIdentifierResponse) Reset()                    { *m = UpdateProfileIdentifierResponse{} }
func (m *UpdateProfileIdentifierResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProfileIdentifierResponse) ProtoMessage()               {}
func (*UpdateProfileIdentifierResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GetProfileByDeviceIdRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId    string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *GetProfileByDeviceIdRequest) Reset()                    { *m = GetProfileByDeviceIdRequest{} }
func (m *GetProfileByDeviceIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProfileByDeviceIdRequest) ProtoMessage()               {}
func (*GetProfileByDeviceIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetProfileByDeviceIdRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *GetProfileByDeviceIdRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type GetProfileByDeviceIdResponse struct {
	Profile *Profile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *GetProfileByDeviceIdResponse) Reset()                    { *m = GetProfileByDeviceIdResponse{} }
func (m *GetProfileByDeviceIdResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProfileByDeviceIdResponse) ProtoMessage()               {}
func (*GetProfileByDeviceIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetProfileByDeviceIdResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type GetProfileByIdentifierRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	Identifier  string                     `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *GetProfileByIdentifierRequest) Reset()                    { *m = GetProfileByIdentifierRequest{} }
func (m *GetProfileByIdentifierRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProfileByIdentifierRequest) ProtoMessage()               {}
func (*GetProfileByIdentifierRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetProfileByIdentifierRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *GetProfileByIdentifierRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type GetProfileByIdentifierResponse struct {
	Profile *Profile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *GetProfileByIdentifierResponse) Reset()                    { *m = GetProfileByIdentifierResponse{} }
func (m *GetProfileByIdentifierResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProfileByIdentifierResponse) ProtoMessage()               {}
func (*GetProfileByIdentifierResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetProfileByIdentifierResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type ListProfilesByIdsRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	ProfileIds  []string                   `protobuf:"bytes,2,rep,name=profile_ids,json=profileIds" json:"profile_ids,omitempty"`
}

func (m *ListProfilesByIdsRequest) Reset()                    { *m = ListProfilesByIdsRequest{} }
func (m *ListProfilesByIdsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListProfilesByIdsRequest) ProtoMessage()               {}
func (*ListProfilesByIdsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ListProfilesByIdsRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ListProfilesByIdsRequest) GetProfileIds() []string {
	if m != nil {
		return m.ProfileIds
	}
	return nil
}

type ListProfilesByIdsResponse struct {
	Profiles []*Profile `protobuf:"bytes,2,rep,name=profiles" json:"profiles,omitempty"`
}

func (m *ListProfilesByIdsResponse) Reset()                    { *m = ListProfilesByIdsResponse{} }
func (m *ListProfilesByIdsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListProfilesByIdsResponse) ProtoMessage()               {}
func (*ListProfilesByIdsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ListProfilesByIdsResponse) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

type ListProfilesByIdentifiersRequest struct {
	AuthContext        *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	ProfileIdentifiers []string                   `protobuf:"bytes,2,rep,name=profile_identifiers,json=profileIdentifiers" json:"profile_identifiers,omitempty"`
}

func (m *ListProfilesByIdentifiersRequest) Reset()         { *m = ListProfilesByIdentifiersRequest{} }
func (m *ListProfilesByIdentifiersRequest) String() string { return proto.CompactTextString(m) }
func (*ListProfilesByIdentifiersRequest) ProtoMessage()    {}
func (*ListProfilesByIdentifiersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16}
}

func (m *ListProfilesByIdentifiersRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ListProfilesByIdentifiersRequest) GetProfileIdentifiers() []string {
	if m != nil {
		return m.ProfileIdentifiers
	}
	return nil
}

type ListProfilesByIdentifiersResponse struct {
	Profiles []*Profile `protobuf:"bytes,2,rep,name=profiles" json:"profiles,omitempty"`
}

func (m *ListProfilesByIdentifiersResponse) Reset()         { *m = ListProfilesByIdentifiersResponse{} }
func (m *ListProfilesByIdentifiersResponse) String() string { return proto.CompactTextString(m) }
func (*ListProfilesByIdentifiersResponse) ProtoMessage()    {}
func (*ListProfilesByIdentifiersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17}
}

func (m *ListProfilesByIdentifiersResponse) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

type GetProfileSchemaRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
}

func (m *GetProfileSchemaRequest) Reset()                    { *m = GetProfileSchemaRequest{} }
func (m *GetProfileSchemaRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProfileSchemaRequest) ProtoMessage()               {}
func (*GetProfileSchemaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GetProfileSchemaRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

type GetProfileSchemaResponse struct {
	Schema *ProfileSchema `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
}

func (m *GetProfileSchemaResponse) Reset()                    { *m = GetProfileSchemaResponse{} }
func (m *GetProfileSchemaResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProfileSchemaResponse) ProtoMessage()               {}
func (*GetProfileSchemaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetProfileSchemaResponse) GetSchema() *ProfileSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

// Profile represents a variable set of a user attributes that customer pushes to Rover.
// It can be thought as a flat JSON object of simple key-value pairs ( There is no nesting of attributes )
type Profile struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId int32  `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// identifier represents an id used by customers to map back this profile to their data
	Identifier string `protobuf:"bytes,3,opt,name=identifier" json:"identifier,omitempty"`
	// profile attributes
	Attributes map[string]*Value          `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt  *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt  *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Profile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Profile) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Profile) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Profile) GetAttributes() map[string]*Value {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Profile) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Profile) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// ProfileSchema describes profiles' schema with the collection of SchemaAttribute descriptors
type ProfileSchema struct {
	Attributes []*SchemaAttribute `protobuf:"bytes,10,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *ProfileSchema) Reset()                    { *m = ProfileSchema{} }
func (m *ProfileSchema) String() string            { return proto.CompactTextString(m) }
func (*ProfileSchema) ProtoMessage()               {}
func (*ProfileSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ProfileSchema) GetAttributes() []*SchemaAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type GetDeviceRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId    string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *GetDeviceRequest) Reset()                    { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()               {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *GetDeviceRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *GetDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type GetDeviceResponse struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *GetDeviceResponse) Reset()                    { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()               {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *GetDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type GetDeviceByPushTokenRequest struct {
	AuthContext  *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	PushTokenKey string                     `protobuf:"bytes,2,opt,name=push_token_key,json=pushTokenKey" json:"push_token_key,omitempty"`
}

func (m *GetDeviceByPushTokenRequest) Reset()                    { *m = GetDeviceByPushTokenRequest{} }
func (m *GetDeviceByPushTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceByPushTokenRequest) ProtoMessage()               {}
func (*GetDeviceByPushTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GetDeviceByPushTokenRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *GetDeviceByPushTokenRequest) GetPushTokenKey() string {
	if m != nil {
		return m.PushTokenKey
	}
	return ""
}

type GetDeviceByPushTokenResponse struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *GetDeviceByPushTokenResponse) Reset()                    { *m = GetDeviceByPushTokenResponse{} }
func (m *GetDeviceByPushTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceByPushTokenResponse) ProtoMessage()               {}
func (*GetDeviceByPushTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *GetDeviceByPushTokenResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CreateDeviceRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	ProfileId   string                     `protobuf:"bytes,2,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
	DeviceId    string                     `protobuf:"bytes,3,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *CreateDeviceRequest) Reset()                    { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()               {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CreateDeviceRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *CreateDeviceRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

func (m *CreateDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type CreateDeviceResponse struct {
}

func (m *CreateDeviceResponse) Reset()                    { *m = CreateDeviceResponse{} }
func (m *CreateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceResponse) ProtoMessage()               {}
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type UpdateDevicePushTokenRequest struct {
	AuthContext     *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId        string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	PushTokenKey    string                     `protobuf:"bytes,3,opt,name=push_token_key,json=pushTokenKey" json:"push_token_key,omitempty"`
	PushEnvironment string                     `protobuf:"bytes,4,opt,name=push_environment,json=pushEnvironment" json:"push_environment,omitempty"`
}

func (m *UpdateDevicePushTokenRequest) Reset()                    { *m = UpdateDevicePushTokenRequest{} }
func (m *UpdateDevicePushTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDevicePushTokenRequest) ProtoMessage()               {}
func (*UpdateDevicePushTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdateDevicePushTokenRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDevicePushTokenRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *UpdateDevicePushTokenRequest) GetPushTokenKey() string {
	if m != nil {
		return m.PushTokenKey
	}
	return ""
}

func (m *UpdateDevicePushTokenRequest) GetPushEnvironment() string {
	if m != nil {
		return m.PushEnvironment
	}
	return ""
}

type UpdateDevicePushTokenResponse struct {
}

func (m *UpdateDevicePushTokenResponse) Reset()                    { *m = UpdateDevicePushTokenResponse{} }
func (m *UpdateDevicePushTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateDevicePushTokenResponse) ProtoMessage()               {}
func (*UpdateDevicePushTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type UpdateDeviceUnregisterPushTokenRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId    string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *UpdateDeviceUnregisterPushTokenRequest) Reset() {
	*m = UpdateDeviceUnregisterPushTokenRequest{}
}
func (m *UpdateDeviceUnregisterPushTokenRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceUnregisterPushTokenRequest) ProtoMessage()    {}
func (*UpdateDeviceUnregisterPushTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{30}
}

func (m *UpdateDeviceUnregisterPushTokenRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDeviceUnregisterPushTokenRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type UpdateDeviceUnregisterPushTokenResponse struct {
}

func (m *UpdateDeviceUnregisterPushTokenResponse) Reset() {
	*m = UpdateDeviceUnregisterPushTokenResponse{}
}
func (m *UpdateDeviceUnregisterPushTokenResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceUnregisterPushTokenResponse) ProtoMessage()    {}
func (*UpdateDeviceUnregisterPushTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{31}
}

type UpdateDeviceLocationRequest struct {
	AuthContext       *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId          string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	LocationAccuracy  int32                      `protobuf:"varint,3,opt,name=location_accuracy,json=locationAccuracy" json:"location_accuracy,omitempty"`
	LocationLatitude  float64                    `protobuf:"fixed64,4,opt,name=location_latitude,json=locationLatitude" json:"location_latitude,omitempty"`
	LocationLongitude float64                    `protobuf:"fixed64,5,opt,name=location_longitude,json=locationLongitude" json:"location_longitude,omitempty"`
}

func (m *UpdateDeviceLocationRequest) Reset()                    { *m = UpdateDeviceLocationRequest{} }
func (m *UpdateDeviceLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceLocationRequest) ProtoMessage()               {}
func (*UpdateDeviceLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *UpdateDeviceLocationRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDeviceLocationRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *UpdateDeviceLocationRequest) GetLocationAccuracy() int32 {
	if m != nil {
		return m.LocationAccuracy
	}
	return 0
}

func (m *UpdateDeviceLocationRequest) GetLocationLatitude() float64 {
	if m != nil {
		return m.LocationLatitude
	}
	return 0
}

func (m *UpdateDeviceLocationRequest) GetLocationLongitude() float64 {
	if m != nil {
		return m.LocationLongitude
	}
	return 0
}

type UpdateDeviceLocationResponse struct {
}

func (m *UpdateDeviceLocationResponse) Reset()                    { *m = UpdateDeviceLocationResponse{} }
func (m *UpdateDeviceLocationResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceLocationResponse) ProtoMessage()               {}
func (*UpdateDeviceLocationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

type UpdateDeviceGeofenceMonitoringRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId    string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Regions     []*GeofenceRegion          `protobuf:"bytes,3,rep,name=regions" json:"regions,omitempty"`
}

func (m *UpdateDeviceGeofenceMonitoringRequest) Reset()         { *m = UpdateDeviceGeofenceMonitoringRequest{} }
func (m *UpdateDeviceGeofenceMonitoringRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceGeofenceMonitoringRequest) ProtoMessage()    {}
func (*UpdateDeviceGeofenceMonitoringRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34}
}

func (m *UpdateDeviceGeofenceMonitoringRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDeviceGeofenceMonitoringRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *UpdateDeviceGeofenceMonitoringRequest) GetRegions() []*GeofenceRegion {
	if m != nil {
		return m.Regions
	}
	return nil
}

type UpdateDeviceGeofenceMonitoringResponse struct {
}

func (m *UpdateDeviceGeofenceMonitoringResponse) Reset() {
	*m = UpdateDeviceGeofenceMonitoringResponse{}
}
func (m *UpdateDeviceGeofenceMonitoringResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceGeofenceMonitoringResponse) ProtoMessage()    {}
func (*UpdateDeviceGeofenceMonitoringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35}
}

type UpdateDeviceIBeaconMonitoringRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId    string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Regions     []*IBeaconRegion           `protobuf:"bytes,3,rep,name=regions" json:"regions,omitempty"`
}

func (m *UpdateDeviceIBeaconMonitoringRequest) Reset()         { *m = UpdateDeviceIBeaconMonitoringRequest{} }
func (m *UpdateDeviceIBeaconMonitoringRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceIBeaconMonitoringRequest) ProtoMessage()    {}
func (*UpdateDeviceIBeaconMonitoringRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{36}
}

func (m *UpdateDeviceIBeaconMonitoringRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDeviceIBeaconMonitoringRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *UpdateDeviceIBeaconMonitoringRequest) GetRegions() []*IBeaconRegion {
	if m != nil {
		return m.Regions
	}
	return nil
}

type UpdateDeviceIBeaconMonitoringResponse struct {
}

func (m *UpdateDeviceIBeaconMonitoringResponse) Reset()         { *m = UpdateDeviceIBeaconMonitoringResponse{} }
func (m *UpdateDeviceIBeaconMonitoringResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceIBeaconMonitoringResponse) ProtoMessage()    {}
func (*UpdateDeviceIBeaconMonitoringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{37}
}

type UpdateDeviceTestPropertyRequest struct {
	AuthContext  *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId     string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	IsTestDevice bool                       `protobuf:"varint,3,opt,name=is_test_device,json=isTestDevice" json:"is_test_device,omitempty"`
}

func (m *UpdateDeviceTestPropertyRequest) Reset()         { *m = UpdateDeviceTestPropertyRequest{} }
func (m *UpdateDeviceTestPropertyRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceTestPropertyRequest) ProtoMessage()    {}
func (*UpdateDeviceTestPropertyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{38}
}

func (m *UpdateDeviceTestPropertyRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDeviceTestPropertyRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *UpdateDeviceTestPropertyRequest) GetIsTestDevice() bool {
	if m != nil {
		return m.IsTestDevice
	}
	return false
}

type UpdateDeviceTestPropertyResponse struct {
}

func (m *UpdateDeviceTestPropertyResponse) Reset()         { *m = UpdateDeviceTestPropertyResponse{} }
func (m *UpdateDeviceTestPropertyResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceTestPropertyResponse) ProtoMessage()    {}
func (*UpdateDeviceTestPropertyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39}
}

type DeleteDeviceRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId    string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *DeleteDeviceRequest) Reset()                    { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()               {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *DeleteDeviceRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *DeleteDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type DeleteDeviceResponse struct {
}

func (m *DeleteDeviceResponse) Reset()                    { *m = DeleteDeviceResponse{} }
func (m *DeleteDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeviceResponse) ProtoMessage()               {}
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

type SetDeviceProfileRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId    string                     `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	ProfileId   string                     `protobuf:"bytes,3,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
}

func (m *SetDeviceProfileRequest) Reset()                    { *m = SetDeviceProfileRequest{} }
func (m *SetDeviceProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDeviceProfileRequest) ProtoMessage()               {}
func (*SetDeviceProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *SetDeviceProfileRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *SetDeviceProfileRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *SetDeviceProfileRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

type SetDeviceProfileResponse struct {
}

func (m *SetDeviceProfileResponse) Reset()                    { *m = SetDeviceProfileResponse{} }
func (m *SetDeviceProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*SetDeviceProfileResponse) ProtoMessage()               {}
func (*SetDeviceProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

type ListDevicesByProfileIdRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	ProfileId   string                     `protobuf:"bytes,2,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
}

func (m *ListDevicesByProfileIdRequest) Reset()                    { *m = ListDevicesByProfileIdRequest{} }
func (m *ListDevicesByProfileIdRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDevicesByProfileIdRequest) ProtoMessage()               {}
func (*ListDevicesByProfileIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *ListDevicesByProfileIdRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ListDevicesByProfileIdRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

type ListDevicesByProfileIdResponse struct {
	Devices []*Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
}

func (m *ListDevicesByProfileIdResponse) Reset()                    { *m = ListDevicesByProfileIdResponse{} }
func (m *ListDevicesByProfileIdResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDevicesByProfileIdResponse) ProtoMessage()               {}
func (*ListDevicesByProfileIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *ListDevicesByProfileIdResponse) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type ListDevicesByProfileIdentifierRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	Identifier  string                     `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *ListDevicesByProfileIdentifierRequest) Reset()         { *m = ListDevicesByProfileIdentifierRequest{} }
func (m *ListDevicesByProfileIdentifierRequest) String() string { return proto.CompactTextString(m) }
func (*ListDevicesByProfileIdentifierRequest) ProtoMessage()    {}
func (*ListDevicesByProfileIdentifierRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{46}
}

func (m *ListDevicesByProfileIdentifierRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ListDevicesByProfileIdentifierRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type ListDevicesByProfileIdentifierResponse struct {
	Devices []*Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
}

func (m *ListDevicesByProfileIdentifierResponse) Reset() {
	*m = ListDevicesByProfileIdentifierResponse{}
}
func (m *ListDevicesByProfileIdentifierResponse) String() string { return proto.CompactTextString(m) }
func (*ListDevicesByProfileIdentifierResponse) ProtoMessage()    {}
func (*ListDevicesByProfileIdentifierResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{47}
}

func (m *ListDevicesByProfileIdentifierResponse) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type GetDeviceSchemaRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
}

func (m *GetDeviceSchemaRequest) Reset()                    { *m = GetDeviceSchemaRequest{} }
func (m *GetDeviceSchemaRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceSchemaRequest) ProtoMessage()               {}
func (*GetDeviceSchemaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *GetDeviceSchemaRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

type GetDeviceSchemaResponse struct {
	Attributes []*SchemaAttribute `protobuf:"bytes,1,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *GetDeviceSchemaResponse) Reset()                    { *m = GetDeviceSchemaResponse{} }
func (m *GetDeviceSchemaResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceSchemaResponse) ProtoMessage()               {}
func (*GetDeviceSchemaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *GetDeviceSchemaResponse) GetAttributes() []*SchemaAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Every event comes with DeviceContext populated
type UpdateDeviceRequest struct {
	AuthContext                 *rover_auth_v1.AuthContext  `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	DeviceId                    string                      `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	PushEnvironment             string                      `protobuf:"bytes,10,opt,name=push_environment,json=pushEnvironment" json:"push_environment,omitempty"`
	PushTokenKey                string                      `protobuf:"bytes,11,opt,name=push_token_key,json=pushTokenKey" json:"push_token_key,omitempty"`
	AppName                     string                      `protobuf:"bytes,12,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	AppVersion                  string                      `protobuf:"bytes,13,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	AppBuild                    string                      `protobuf:"bytes,14,opt,name=app_build,json=appBuild" json:"app_build,omitempty"`
	AppNamespace                string                      `protobuf:"bytes,15,opt,name=app_namespace,json=appNamespace" json:"app_namespace,omitempty"`
	DeviceManufacturer          string                      `protobuf:"bytes,16,opt,name=device_manufacturer,json=deviceManufacturer" json:"device_manufacturer,omitempty"`
	OsName                      string                      `protobuf:"bytes,17,opt,name=os_name,json=osName" json:"os_name,omitempty"`
	OsVersion                   *Version                    `protobuf:"bytes,18,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	DeviceModel                 string                      `protobuf:"bytes,19,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	Frameworks                  map[string]*Version         `protobuf:"bytes,20,rep,name=frameworks" json:"frameworks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LocaleLanguage              string                      `protobuf:"bytes,21,opt,name=locale_language,json=localeLanguage" json:"locale_language,omitempty"`
	LocaleRegion                string                      `protobuf:"bytes,22,opt,name=locale_region,json=localeRegion" json:"locale_region,omitempty"`
	LocaleScript                string                      `protobuf:"bytes,23,opt,name=locale_script,json=localeScript" json:"locale_script,omitempty"`
	IsWifiEnabled               bool                        `protobuf:"varint,24,opt,name=is_wifi_enabled,json=isWifiEnabled" json:"is_wifi_enabled,omitempty"`
	IsCellularEnabled           bool                        `protobuf:"varint,25,opt,name=is_cellular_enabled,json=isCellularEnabled" json:"is_cellular_enabled,omitempty"`
	ScreenWidth                 int32                       `protobuf:"varint,26,opt,name=screen_width,json=screenWidth" json:"screen_width,omitempty"`
	ScreenHeight                int32                       `protobuf:"varint,27,opt,name=screen_height,json=screenHeight" json:"screen_height,omitempty"`
	CarrierName                 string                      `protobuf:"bytes,28,opt,name=carrier_name,json=carrierName" json:"carrier_name,omitempty"`
	Radio                       string                      `protobuf:"bytes,29,opt,name=radio" json:"radio,omitempty"`
	TimeZone                    string                      `protobuf:"bytes,30,opt,name=time_zone,json=timeZone" json:"time_zone,omitempty"`
	Platform                    Platform                    `protobuf:"varint,31,opt,name=platform,enum=rover.audience.v1.Platform" json:"platform,omitempty"`
	IsBackgroundEnabled         bool                        `protobuf:"varint,32,opt,name=is_background_enabled,json=isBackgroundEnabled" json:"is_background_enabled,omitempty"`
	IsLocationMonitoringEnabled bool                        `protobuf:"varint,33,opt,name=is_location_monitoring_enabled,json=isLocationMonitoringEnabled" json:"is_location_monitoring_enabled,omitempty"`
	IsBluetoothEnabled          bool                        `protobuf:"varint,34,opt,name=is_bluetooth_enabled,json=isBluetoothEnabled" json:"is_bluetooth_enabled,omitempty"`
	AdvertisingId               string                      `protobuf:"bytes,35,opt,name=advertising_id,json=advertisingId" json:"advertising_id,omitempty"`
	Ip                          string                      `protobuf:"bytes,36,opt,name=ip" json:"ip,omitempty"`
	RegionMonitoringMode        Device_RegionMonitoringMode `protobuf:"varint,37,opt,name=region_monitoring_mode,json=regionMonitoringMode,enum=rover.audience.v1.Device_RegionMonitoringMode" json:"region_monitoring_mode,omitempty"`
}

func (m *UpdateDeviceRequest) Reset()                    { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()               {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *UpdateDeviceRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *UpdateDeviceRequest) GetPushEnvironment() string {
	if m != nil {
		return m.PushEnvironment
	}
	return ""
}

func (m *UpdateDeviceRequest) GetPushTokenKey() string {
	if m != nil {
		return m.PushTokenKey
	}
	return ""
}

func (m *UpdateDeviceRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *UpdateDeviceRequest) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *UpdateDeviceRequest) GetAppBuild() string {
	if m != nil {
		return m.AppBuild
	}
	return ""
}

func (m *UpdateDeviceRequest) GetAppNamespace() string {
	if m != nil {
		return m.AppNamespace
	}
	return ""
}

func (m *UpdateDeviceRequest) GetDeviceManufacturer() string {
	if m != nil {
		return m.DeviceManufacturer
	}
	return ""
}

func (m *UpdateDeviceRequest) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *UpdateDeviceRequest) GetOsVersion() *Version {
	if m != nil {
		return m.OsVersion
	}
	return nil
}

func (m *UpdateDeviceRequest) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *UpdateDeviceRequest) GetFrameworks() map[string]*Version {
	if m != nil {
		return m.Frameworks
	}
	return nil
}

func (m *UpdateDeviceRequest) GetLocaleLanguage() string {
	if m != nil {
		return m.LocaleLanguage
	}
	return ""
}

func (m *UpdateDeviceRequest) GetLocaleRegion() string {
	if m != nil {
		return m.LocaleRegion
	}
	return ""
}

func (m *UpdateDeviceRequest) GetLocaleScript() string {
	if m != nil {
		return m.LocaleScript
	}
	return ""
}

func (m *UpdateDeviceRequest) GetIsWifiEnabled() bool {
	if m != nil {
		return m.IsWifiEnabled
	}
	return false
}

func (m *UpdateDeviceRequest) GetIsCellularEnabled() bool {
	if m != nil {
		return m.IsCellularEnabled
	}
	return false
}

func (m *UpdateDeviceRequest) GetScreenWidth() int32 {
	if m != nil {
		return m.ScreenWidth
	}
	return 0
}

func (m *UpdateDeviceRequest) GetScreenHeight() int32 {
	if m != nil {
		return m.ScreenHeight
	}
	return 0
}

func (m *UpdateDeviceRequest) GetCarrierName() string {
	if m != nil {
		return m.CarrierName
	}
	return ""
}

func (m *UpdateDeviceRequest) GetRadio() string {
	if m != nil {
		return m.Radio
	}
	return ""
}

func (m *UpdateDeviceRequest) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *UpdateDeviceRequest) GetPlatform() Platform {
	if m != nil {
		return m.Platform
	}
	return Platform_UNDEFINED
}

func (m *UpdateDeviceRequest) GetIsBackgroundEnabled() bool {
	if m != nil {
		return m.IsBackgroundEnabled
	}
	return false
}

func (m *UpdateDeviceRequest) GetIsLocationMonitoringEnabled() bool {
	if m != nil {
		return m.IsLocationMonitoringEnabled
	}
	return false
}

func (m *UpdateDeviceRequest) GetIsBluetoothEnabled() bool {
	if m != nil {
		return m.IsBluetoothEnabled
	}
	return false
}

func (m *UpdateDeviceRequest) GetAdvertisingId() string {
	if m != nil {
		return m.AdvertisingId
	}
	return ""
}

func (m *UpdateDeviceRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *UpdateDeviceRequest) GetRegionMonitoringMode() Device_RegionMonitoringMode {
	if m != nil {
		return m.RegionMonitoringMode
	}
	return Device_UNDEFINED
}

type UpdateDeviceResponse struct {
}

func (m *UpdateDeviceResponse) Reset()                    { *m = UpdateDeviceResponse{} }
func (m *UpdateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceResponse) ProtoMessage()               {}
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

// Devices represent a single device that the Rover sdk is installed on. The
// currently supported platforms are iOS,  Android, and Web. A device is the
// last state that the sdk reported to the server. Only the device itself is
// allowed to update its state no one elses.
type Device struct {
	// db id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// device id: unique per account
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	// the account_id the device belongs to
	AccountId int32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// the profile id the device belongs to
	// hex encoded 12 bytes value
	ProfileId    string                     `protobuf:"bytes,4,opt,name=profile_id,json=profileId" json:"profile_id,omitempty"`
	CreatedAt    *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt    *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	IsTestDevice bool                       `protobuf:"varint,7,opt,name=is_test_device,json=isTestDevice" json:"is_test_device,omitempty"`
	// A string equal to either "development" or "production" which indicates the
	// envrionment the app was built on and used by the server to determine which
	// APNS API to use.
	PushEnvironment string `protobuf:"bytes,10,opt,name=push_environment,json=pushEnvironment" json:"push_environment,omitempty"`
	// the token key value
	PushTokenKey            string                     `protobuf:"bytes,11,opt,name=push_token_key,json=pushTokenKey" json:"push_token_key,omitempty"`
	PushTokenIsActive       bool                       `protobuf:"varint,12,opt,name=push_token_is_active,json=pushTokenIsActive" json:"push_token_is_active,omitempty"`
	PushTokenCreatedAt      *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=push_token_created_at,json=pushTokenCreatedAt" json:"push_token_created_at,omitempty"`
	PushTokenUpdatedAt      *google_protobuf.Timestamp `protobuf:"bytes,14,opt,name=push_token_updated_at,json=pushTokenUpdatedAt" json:"push_token_updated_at,omitempty"`
	PushTokenUnregisteredAt *google_protobuf.Timestamp `protobuf:"bytes,15,opt,name=push_token_unregistered_at,json=pushTokenUnregisteredAt" json:"push_token_unregistered_at,omitempty"`
	// The name of the application. E.g. "Air Miles"
	AppName string `protobuf:"bytes,16,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	// The version of the application. E.g. "1.0"
	AppVersion string `protobuf:"bytes,17,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	// The build number of the application. E.g. "55". On iOS the build number
	// increases each time a build is submitted to the app store for testing.
	// For the same version number there are often multiple builds.
	AppBuild string `protobuf:"bytes,18,opt,name=app_build,json=appBuild" json:"app_build,omitempty"`
	// The app developer's unique namespace. E.g. "com.airmiles".
	AppNamespace string `protobuf:"bytes,19,opt,name=app_namespace,json=appNamespace" json:"app_namespace,omitempty"`
	// For iOS this will also be Apple and on Android could be
	// Samsung, LG etc.
	DeviceManufacturer string `protobuf:"bytes,20,opt,name=device_manufacturer,json=deviceManufacturer" json:"device_manufacturer,omitempty"`
	// E.g. "iPhone9,2" or "Galaxy4"
	DeviceModel string `protobuf:"bytes,23,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	// Either "iOS" or "Android"
	OsName string `protobuf:"bytes,21,opt,name=os_name,json=osName" json:"os_name,omitempty"`
	// The version of iOS or Android running on the device.
	OsVersion *Version `protobuf:"bytes,22,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	// An dictionary of Rover framework names mapped to versions.
	//  E.g. { "RoverEvents": "1.2.1", "RoverPush": "1.0.3" }
	Frameworks map[string]*Version `protobuf:"bytes,24,rep,name=frameworks" json:"frameworks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// E.g. "en"
	LocaleLanguage string `protobuf:"bytes,25,opt,name=locale_language,json=localeLanguage" json:"locale_language,omitempty"`
	// E.g. "US"
	LocaleRegion string `protobuf:"bytes,26,opt,name=locale_region,json=localeRegion" json:"locale_region,omitempty"`
	// Used mostly in Chinese languages... another 2-character code.
	LocaleScript string `protobuf:"bytes,27,opt,name=locale_script,json=localeScript" json:"locale_script,omitempty"`
	// Boolean indicates if WiFi is turned on and has signal.
	IsWifiEnabled bool `protobuf:"varint,28,opt,name=is_wifi_enabled,json=isWifiEnabled" json:"is_wifi_enabled,omitempty"`
	// Boolean indicates if cell radio is on and has signal.
	IsCellularEnabled bool `protobuf:"varint,29,opt,name=is_cellular_enabled,json=isCellularEnabled" json:"is_cellular_enabled,omitempty"`
	// Resolution of the screen in points or DPI
	ScreenWidth int32 `protobuf:"varint,30,opt,name=screen_width,json=screenWidth" json:"screen_width,omitempty"`
	// Resolution of the screen in points or DPI
	ScreenHeight int32 `protobuf:"varint,31,opt,name=screen_height,json=screenHeight" json:"screen_height,omitempty"`
	// The name of the cellular provider. E.g. "Rogers" or "Verizon".
	CarrierName string `protobuf:"bytes,32,opt,name=carrier_name,json=carrierName" json:"carrier_name,omitempty"`
	// The type of cell radio. E.g. "3G" or "LTE".
	Radio string `protobuf:"bytes,33,opt,name=radio" json:"radio,omitempty"`
	// The current device time zone. E.g. "America/Toronto".
	TimeZone                    string   `protobuf:"bytes,34,opt,name=time_zone,json=timeZone" json:"time_zone,omitempty"`
	Platform                    Platform `protobuf:"varint,35,opt,name=platform,enum=rover.audience.v1.Platform" json:"platform,omitempty"`
	IsBackgroundEnabled         bool     `protobuf:"varint,36,opt,name=is_background_enabled,json=isBackgroundEnabled" json:"is_background_enabled,omitempty"`
	IsLocationMonitoringEnabled bool     `protobuf:"varint,37,opt,name=is_location_monitoring_enabled,json=isLocationMonitoringEnabled" json:"is_location_monitoring_enabled,omitempty"`
	IsBluetoothEnabled          bool     `protobuf:"varint,38,opt,name=is_bluetooth_enabled,json=isBluetoothEnabled" json:"is_bluetooth_enabled,omitempty"`
	AdvertisingId               string   `protobuf:"bytes,39,opt,name=advertising_id,json=advertisingId" json:"advertising_id,omitempty"`
	// ip address
	Ip string `protobuf:"bytes,40,opt,name=ip" json:"ip,omitempty"`
	// Location
	LocationAccuracy                   int32                       `protobuf:"varint,41,opt,name=location_accuracy,json=locationAccuracy" json:"location_accuracy,omitempty"`
	LocationLatitude                   float64                     `protobuf:"fixed64,42,opt,name=location_latitude,json=locationLatitude" json:"location_latitude,omitempty"`
	LocationLongitude                  float64                     `protobuf:"fixed64,43,opt,name=location_longitude,json=locationLongitude" json:"location_longitude,omitempty"`
	LocationRegion                     string                      `protobuf:"bytes,44,opt,name=location_region,json=locationRegion" json:"location_region,omitempty"`
	LocationCity                       string                      `protobuf:"bytes,45,opt,name=location_city,json=locationCity" json:"location_city,omitempty"`
	LocationStreet                     string                      `protobuf:"bytes,46,opt,name=location_street,json=locationStreet" json:"location_street,omitempty"`
	RegionMonitoringMode               Device_RegionMonitoringMode `protobuf:"varint,47,opt,name=region_monitoring_mode,json=regionMonitoringMode,enum=rover.audience.v1.Device_RegionMonitoringMode" json:"region_monitoring_mode,omitempty"`
	IbeaconMonitoringRegionsUpdatedAt  *google_protobuf.Timestamp  `protobuf:"bytes,48,opt,name=ibeacon_monitoring_regions_updated_at,json=ibeaconMonitoringRegionsUpdatedAt" json:"ibeacon_monitoring_regions_updated_at,omitempty"`
	IbeaconMonitoringRegions           []*IBeaconRegion            `protobuf:"bytes,49,rep,name=ibeacon_monitoring_regions,json=ibeaconMonitoringRegions" json:"ibeacon_monitoring_regions,omitempty"`
	GeofenceMonitoringRegionsUpdatedAt *google_protobuf.Timestamp  `protobuf:"bytes,50,opt,name=geofence_monitoring_regions_updated_at,json=geofenceMonitoringRegionsUpdatedAt" json:"geofence_monitoring_regions_updated_at,omitempty"`
	GeofenceMonitoringRegions          []*GeofenceRegion           `protobuf:"bytes,51,rep,name=geofence_monitoring_regions,json=geofenceMonitoringRegions" json:"geofence_monitoring_regions,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *Device) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Device) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Device) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Device) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

func (m *Device) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Device) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Device) GetIsTestDevice() bool {
	if m != nil {
		return m.IsTestDevice
	}
	return false
}

func (m *Device) GetPushEnvironment() string {
	if m != nil {
		return m.PushEnvironment
	}
	return ""
}

func (m *Device) GetPushTokenKey() string {
	if m != nil {
		return m.PushTokenKey
	}
	return ""
}

func (m *Device) GetPushTokenIsActive() bool {
	if m != nil {
		return m.PushTokenIsActive
	}
	return false
}

func (m *Device) GetPushTokenCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.PushTokenCreatedAt
	}
	return nil
}

func (m *Device) GetPushTokenUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.PushTokenUpdatedAt
	}
	return nil
}

func (m *Device) GetPushTokenUnregisteredAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.PushTokenUnregisteredAt
	}
	return nil
}

func (m *Device) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *Device) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Device) GetAppBuild() string {
	if m != nil {
		return m.AppBuild
	}
	return ""
}

func (m *Device) GetAppNamespace() string {
	if m != nil {
		return m.AppNamespace
	}
	return ""
}

func (m *Device) GetDeviceManufacturer() string {
	if m != nil {
		return m.DeviceManufacturer
	}
	return ""
}

func (m *Device) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *Device) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *Device) GetOsVersion() *Version {
	if m != nil {
		return m.OsVersion
	}
	return nil
}

func (m *Device) GetFrameworks() map[string]*Version {
	if m != nil {
		return m.Frameworks
	}
	return nil
}

func (m *Device) GetLocaleLanguage() string {
	if m != nil {
		return m.LocaleLanguage
	}
	return ""
}

func (m *Device) GetLocaleRegion() string {
	if m != nil {
		return m.LocaleRegion
	}
	return ""
}

func (m *Device) GetLocaleScript() string {
	if m != nil {
		return m.LocaleScript
	}
	return ""
}

func (m *Device) GetIsWifiEnabled() bool {
	if m != nil {
		return m.IsWifiEnabled
	}
	return false
}

func (m *Device) GetIsCellularEnabled() bool {
	if m != nil {
		return m.IsCellularEnabled
	}
	return false
}

func (m *Device) GetScreenWidth() int32 {
	if m != nil {
		return m.ScreenWidth
	}
	return 0
}

func (m *Device) GetScreenHeight() int32 {
	if m != nil {
		return m.ScreenHeight
	}
	return 0
}

func (m *Device) GetCarrierName() string {
	if m != nil {
		return m.CarrierName
	}
	return ""
}

func (m *Device) GetRadio() string {
	if m != nil {
		return m.Radio
	}
	return ""
}

func (m *Device) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *Device) GetPlatform() Platform {
	if m != nil {
		return m.Platform
	}
	return Platform_UNDEFINED
}

func (m *Device) GetIsBackgroundEnabled() bool {
	if m != nil {
		return m.IsBackgroundEnabled
	}
	return false
}

func (m *Device) GetIsLocationMonitoringEnabled() bool {
	if m != nil {
		return m.IsLocationMonitoringEnabled
	}
	return false
}

func (m *Device) GetIsBluetoothEnabled() bool {
	if m != nil {
		return m.IsBluetoothEnabled
	}
	return false
}

func (m *Device) GetAdvertisingId() string {
	if m != nil {
		return m.AdvertisingId
	}
	return ""
}

func (m *Device) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Device) GetLocationAccuracy() int32 {
	if m != nil {
		return m.LocationAccuracy
	}
	return 0
}

func (m *Device) GetLocationLatitude() float64 {
	if m != nil {
		return m.LocationLatitude
	}
	return 0
}

func (m *Device) GetLocationLongitude() float64 {
	if m != nil {
		return m.LocationLongitude
	}
	return 0
}

func (m *Device) GetLocationRegion() string {
	if m != nil {
		return m.LocationRegion
	}
	return ""
}

func (m *Device) GetLocationCity() string {
	if m != nil {
		return m.LocationCity
	}
	return ""
}

func (m *Device) GetLocationStreet() string {
	if m != nil {
		return m.LocationStreet
	}
	return ""
}

func (m *Device) GetRegionMonitoringMode() Device_RegionMonitoringMode {
	if m != nil {
		return m.RegionMonitoringMode
	}
	return Device_UNDEFINED
}

func (m *Device) GetIbeaconMonitoringRegionsUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.IbeaconMonitoringRegionsUpdatedAt
	}
	return nil
}

func (m *Device) GetIbeaconMonitoringRegions() []*IBeaconRegion {
	if m != nil {
		return m.IbeaconMonitoringRegions
	}
	return nil
}

func (m *Device) GetGeofenceMonitoringRegionsUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.GeofenceMonitoringRegionsUpdatedAt
	}
	return nil
}

func (m *Device) GetGeofenceMonitoringRegions() []*GeofenceRegion {
	if m != nil {
		return m.GeofenceMonitoringRegions
	}
	return nil
}

type IBeaconRegion struct {
	Uuid  string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Major int32  `protobuf:"varint,2,opt,name=major" json:"major,omitempty"`
	Minor int32  `protobuf:"varint,3,opt,name=minor" json:"minor,omitempty"`
}

func (m *IBeaconRegion) Reset()                    { *m = IBeaconRegion{} }
func (m *IBeaconRegion) String() string            { return proto.CompactTextString(m) }
func (*IBeaconRegion) ProtoMessage()               {}
func (*IBeaconRegion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *IBeaconRegion) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *IBeaconRegion) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *IBeaconRegion) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

type GeofenceRegion struct {
	Id        string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude" json:"longitude,omitempty"`
	Radius    int32   `protobuf:"varint,4,opt,name=radius" json:"radius,omitempty"`
}

func (m *GeofenceRegion) Reset()                    { *m = GeofenceRegion{} }
func (m *GeofenceRegion) String() string            { return proto.CompactTextString(m) }
func (*GeofenceRegion) ProtoMessage()               {}
func (*GeofenceRegion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *GeofenceRegion) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GeofenceRegion) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GeofenceRegion) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *GeofenceRegion) GetRadius() int32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

// ValueUpdates allows bulk updates as adding/removing tags in the same call
type ValueUpdates struct {
	Values []*ValueUpdate `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *ValueUpdates) Reset()                    { *m = ValueUpdates{} }
func (m *ValueUpdates) String() string            { return proto.CompactTextString(m) }
func (*ValueUpdates) ProtoMessage()               {}
func (*ValueUpdates) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *ValueUpdates) GetValues() []*ValueUpdate {
	if m != nil {
		return m.Values
	}
	return nil
}

// ValueUpdate represents a change that needs to be applied to already existing value
type ValueUpdate struct {
	UpdateType ValueUpdate_UpdateType `protobuf:"varint,1,opt,name=update_type,json=updateType,enum=rover.audience.v1.ValueUpdate_UpdateType" json:"update_type,omitempty"`
	Value      *Value                 `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ValueUpdate) Reset()                    { *m = ValueUpdate{} }
func (m *ValueUpdate) String() string            { return proto.CompactTextString(m) }
func (*ValueUpdate) ProtoMessage()               {}
func (*ValueUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *ValueUpdate) GetUpdateType() ValueUpdate_UpdateType {
	if m != nil {
		return m.UpdateType
	}
	return ValueUpdate_SET
}

func (m *ValueUpdate) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Value represents supported value types the system accepts
type Value struct {
	// Types that are valid to be assigned to ValueType:
	//	*Value_BooleanValue
	//	*Value_IntegerValue
	//	*Value_DoubleValue
	//	*Value_StringValue
	//	*Value_StringArrayValue
	//	*Value_NullValue
	//	*Value_TimestampValue
	ValueType isValue_ValueType `protobuf_oneof:"value_type"`
}

func (m *Value) Reset()                    { *m = Value{} }
func (m *Value) String() string            { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()               {}
func (*Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

type isValue_ValueType interface {
	isValue_ValueType()
}

type Value_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,1,opt,name=boolean_value,json=booleanValue,oneof"`
}
type Value_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,2,opt,name=integer_value,json=integerValue,oneof"`
}
type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,oneof"`
}
type Value_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,oneof"`
}
type Value_StringArrayValue struct {
	StringArrayValue *Value_StringArray `protobuf:"bytes,5,opt,name=string_array_value,json=stringArrayValue,oneof"`
}
type Value_NullValue struct {
	NullValue Null `protobuf:"varint,7,opt,name=null_value,json=nullValue,enum=rover.audience.v1.Null,oneof"`
}
type Value_TimestampValue struct {
	TimestampValue *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=timestamp_value,json=timestampValue,oneof"`
}

func (*Value_BooleanValue) isValue_ValueType()     {}
func (*Value_IntegerValue) isValue_ValueType()     {}
func (*Value_DoubleValue) isValue_ValueType()      {}
func (*Value_StringValue) isValue_ValueType()      {}
func (*Value_StringArrayValue) isValue_ValueType() {}
func (*Value_NullValue) isValue_ValueType()        {}
func (*Value_TimestampValue) isValue_ValueType()   {}

func (m *Value) GetValueType() isValue_ValueType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

func (m *Value) GetBooleanValue() bool {
	if x, ok := m.GetValueType().(*Value_BooleanValue); ok {
		return x.BooleanValue
	}
	return false
}

func (m *Value) GetIntegerValue() int64 {
	if x, ok := m.GetValueType().(*Value_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (m *Value) GetDoubleValue() float64 {
	if x, ok := m.GetValueType().(*Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *Value) GetStringValue() string {
	if x, ok := m.GetValueType().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Value) GetStringArrayValue() *Value_StringArray {
	if x, ok := m.GetValueType().(*Value_StringArrayValue); ok {
		return x.StringArrayValue
	}
	return nil
}

func (m *Value) GetNullValue() Null {
	if x, ok := m.GetValueType().(*Value_NullValue); ok {
		return x.NullValue
	}
	return Null_NULL
}

func (m *Value) GetTimestampValue() *google_protobuf.Timestamp {
	if x, ok := m.GetValueType().(*Value_TimestampValue); ok {
		return x.TimestampValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Value_OneofMarshaler, _Value_OneofUnmarshaler, _Value_OneofSizer, []interface{}{
		(*Value_BooleanValue)(nil),
		(*Value_IntegerValue)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_StringArrayValue)(nil),
		(*Value_NullValue)(nil),
		(*Value_TimestampValue)(nil),
	}
}

func _Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Value)
	// value_type
	switch x := m.ValueType.(type) {
	case *Value_BooleanValue:
		t := uint64(0)
		if x.BooleanValue {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Value_IntegerValue:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntegerValue))
	case *Value_DoubleValue:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.DoubleValue))
	case *Value_StringValue:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case *Value_StringArrayValue:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringArrayValue); err != nil {
			return err
		}
	case *Value_NullValue:
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.NullValue))
	case *Value_TimestampValue:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimestampValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Value.ValueType has unexpected type %T", x)
	}
	return nil
}

func _Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Value)
	switch tag {
	case 1: // value_type.boolean_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValueType = &Value_BooleanValue{x != 0}
		return true, err
	case 2: // value_type.integer_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValueType = &Value_IntegerValue{int64(x)}
		return true, err
	case 3: // value_type.double_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.ValueType = &Value_DoubleValue{math.Float64frombits(x)}
		return true, err
	case 4: // value_type.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ValueType = &Value_StringValue{x}
		return true, err
	case 5: // value_type.string_array_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Value_StringArray)
		err := b.DecodeMessage(msg)
		m.ValueType = &Value_StringArrayValue{msg}
		return true, err
	case 7: // value_type.null_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValueType = &Value_NullValue{Null(x)}
		return true, err
	case 8: // value_type.timestamp_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf.Timestamp)
		err := b.DecodeMessage(msg)
		m.ValueType = &Value_TimestampValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Value)
	// value_type
	switch x := m.ValueType.(type) {
	case *Value_BooleanValue:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += 1
	case *Value_IntegerValue:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.IntegerValue))
	case *Value_DoubleValue:
		n += proto.SizeVarint(3<<3 | proto.WireFixed64)
		n += 8
	case *Value_StringValue:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case *Value_StringArrayValue:
		s := proto.Size(x.StringArrayValue)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Value_NullValue:
		n += proto.SizeVarint(7<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.NullValue))
	case *Value_TimestampValue:
		s := proto.Size(x.TimestampValue)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Value_StringArray struct {
	Values []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *Value_StringArray) Reset()                    { *m = Value_StringArray{} }
func (m *Value_StringArray) String() string            { return proto.CompactTextString(m) }
func (*Value_StringArray) ProtoMessage()               {}
func (*Value_StringArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57, 0} }

func (m *Value_StringArray) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// SchemaAttribute describes type information about an attribute
type SchemaAttribute struct {
	AccountId int32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// attribute id
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// attribute key
	Attribute string `protobuf:"bytes,3,opt,name=attribute" json:"attribute,omitempty"`
	// attribute label
	Label string `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	// attribute type descriptor, ie string/array[string]
	// see Value for all possible types
	AttributeType string `protobuf:"bytes,5,opt,name=attribute_type,json=attributeType" json:"attribute_type,omitempty"`
	// attribute path if nested
	Path string `protobuf:"bytes,6,opt,name=path" json:"path,omitempty"`
	// attribute creation time
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *SchemaAttribute) Reset()                    { *m = SchemaAttribute{} }
func (m *SchemaAttribute) String() string            { return proto.CompactTextString(m) }
func (*SchemaAttribute) ProtoMessage()               {}
func (*SchemaAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *SchemaAttribute) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *SchemaAttribute) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SchemaAttribute) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *SchemaAttribute) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *SchemaAttribute) GetAttributeType() string {
	if m != nil {
		return m.AttributeType
	}
	return ""
}

func (m *SchemaAttribute) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SchemaAttribute) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Version struct {
	Major int32 `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor int32 `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	// optional
	Revision int32 `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *Version) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *Version) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *Version) GetRevision() int32 {
	if m != nil {
		return m.Revision
	}
	return 0
}

type CreateDynamicSegmentRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	Title       string                     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *CreateDynamicSegmentRequest) Reset()                    { *m = CreateDynamicSegmentRequest{} }
func (m *CreateDynamicSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDynamicSegmentRequest) ProtoMessage()               {}
func (*CreateDynamicSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *CreateDynamicSegmentRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *CreateDynamicSegmentRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type CreateDynamicSegmentResponse struct {
	Segment *DynamicSegment `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
}

func (m *CreateDynamicSegmentResponse) Reset()                    { *m = CreateDynamicSegmentResponse{} }
func (m *CreateDynamicSegmentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDynamicSegmentResponse) ProtoMessage()               {}
func (*CreateDynamicSegmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *CreateDynamicSegmentResponse) GetSegment() *DynamicSegment {
	if m != nil {
		return m.Segment
	}
	return nil
}

type GetDynamicSegmentByIdRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	SegmentId   string                     `protobuf:"bytes,2,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
}

func (m *GetDynamicSegmentByIdRequest) Reset()                    { *m = GetDynamicSegmentByIdRequest{} }
func (m *GetDynamicSegmentByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDynamicSegmentByIdRequest) ProtoMessage()               {}
func (*GetDynamicSegmentByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *GetDynamicSegmentByIdRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *GetDynamicSegmentByIdRequest) GetSegmentId() string {
	if m != nil {
		return m.SegmentId
	}
	return ""
}

type GetDynamicSegmentByIdResponse struct {
	Segment *DynamicSegment `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
}

func (m *GetDynamicSegmentByIdResponse) Reset()                    { *m = GetDynamicSegmentByIdResponse{} }
func (m *GetDynamicSegmentByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDynamicSegmentByIdResponse) ProtoMessage()               {}
func (*GetDynamicSegmentByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *GetDynamicSegmentByIdResponse) GetSegment() *DynamicSegment {
	if m != nil {
		return m.Segment
	}
	return nil
}

type UpdateDynamicSegmentTitleRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	SegmentId   string                     `protobuf:"bytes,2,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
	Title       string                     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
}

func (m *UpdateDynamicSegmentTitleRequest) Reset()         { *m = UpdateDynamicSegmentTitleRequest{} }
func (m *UpdateDynamicSegmentTitleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDynamicSegmentTitleRequest) ProtoMessage()    {}
func (*UpdateDynamicSegmentTitleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{64}
}

func (m *UpdateDynamicSegmentTitleRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDynamicSegmentTitleRequest) GetSegmentId() string {
	if m != nil {
		return m.SegmentId
	}
	return ""
}

func (m *UpdateDynamicSegmentTitleRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type UpdateDynamicSegmentTitleResponse struct {
}

func (m *UpdateDynamicSegmentTitleResponse) Reset()         { *m = UpdateDynamicSegmentTitleResponse{} }
func (m *UpdateDynamicSegmentTitleResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDynamicSegmentTitleResponse) ProtoMessage()    {}
func (*UpdateDynamicSegmentTitleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65}
}

type UpdateDynamicSegmentPredicatesRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	SegmentId   string                     `protobuf:"bytes,2,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
	Predicates  *PredicateAggregate        `protobuf:"bytes,3,opt,name=predicates" json:"predicates,omitempty"`
}

func (m *UpdateDynamicSegmentPredicatesRequest) Reset()         { *m = UpdateDynamicSegmentPredicatesRequest{} }
func (m *UpdateDynamicSegmentPredicatesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDynamicSegmentPredicatesRequest) ProtoMessage()    {}
func (*UpdateDynamicSegmentPredicatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{66}
}

func (m *UpdateDynamicSegmentPredicatesRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateDynamicSegmentPredicatesRequest) GetSegmentId() string {
	if m != nil {
		return m.SegmentId
	}
	return ""
}

func (m *UpdateDynamicSegmentPredicatesRequest) GetPredicates() *PredicateAggregate {
	if m != nil {
		return m.Predicates
	}
	return nil
}

type UpdateDynamicSegmentPredicatesResponse struct {
}

func (m *UpdateDynamicSegmentPredicatesResponse) Reset() {
	*m = UpdateDynamicSegmentPredicatesResponse{}
}
func (m *UpdateDynamicSegmentPredicatesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDynamicSegmentPredicatesResponse) ProtoMessage()    {}
func (*UpdateDynamicSegmentPredicatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{67}
}

type ArchiveDynamicSegmentByIdRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	SegmentId   string                     `protobuf:"bytes,2,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
}

func (m *ArchiveDynamicSegmentByIdRequest) Reset()         { *m = ArchiveDynamicSegmentByIdRequest{} }
func (m *ArchiveDynamicSegmentByIdRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveDynamicSegmentByIdRequest) ProtoMessage()    {}
func (*ArchiveDynamicSegmentByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{68}
}

func (m *ArchiveDynamicSegmentByIdRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ArchiveDynamicSegmentByIdRequest) GetSegmentId() string {
	if m != nil {
		return m.SegmentId
	}
	return ""
}

type ArchiveDynamicSegmentByIdResponse struct {
}

func (m *ArchiveDynamicSegmentByIdResponse) Reset()         { *m = ArchiveDynamicSegmentByIdResponse{} }
func (m *ArchiveDynamicSegmentByIdResponse) String() string { return proto.CompactTextString(m) }
func (*ArchiveDynamicSegmentByIdResponse) ProtoMessage()    {}
func (*ArchiveDynamicSegmentByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{69}
}

type ListDynamicSegmentsRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
}

func (m *ListDynamicSegmentsRequest) Reset()                    { *m = ListDynamicSegmentsRequest{} }
func (m *ListDynamicSegmentsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDynamicSegmentsRequest) ProtoMessage()               {}
func (*ListDynamicSegmentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *ListDynamicSegmentsRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

type ListDynamicSegmentsResponse struct {
	Segments []*DynamicSegment `protobuf:"bytes,1,rep,name=segments" json:"segments,omitempty"`
}

func (m *ListDynamicSegmentsResponse) Reset()                    { *m = ListDynamicSegmentsResponse{} }
func (m *ListDynamicSegmentsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDynamicSegmentsResponse) ProtoMessage()               {}
func (*ListDynamicSegmentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *ListDynamicSegmentsResponse) GetSegments() []*DynamicSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

type DynamicSegment struct {
	Id        string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId int32                      `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	// Setment title
	Title      string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	IsArchived bool   `protobuf:"varint,6,opt,name=is_archived,json=isArchived" json:"is_archived,omitempty"`
	// number of entries in the segment
	SegmentSize int64               `protobuf:"varint,7,opt,name=segment_size,json=segmentSize" json:"segment_size,omitempty"`
	Predicates  *PredicateAggregate `protobuf:"bytes,8,opt,name=predicates" json:"predicates,omitempty"`
}

func (m *DynamicSegment) Reset()                    { *m = DynamicSegment{} }
func (m *DynamicSegment) String() string            { return proto.CompactTextString(m) }
func (*DynamicSegment) ProtoMessage()               {}
func (*DynamicSegment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *DynamicSegment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DynamicSegment) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *DynamicSegment) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *DynamicSegment) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *DynamicSegment) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DynamicSegment) GetIsArchived() bool {
	if m != nil {
		return m.IsArchived
	}
	return false
}

func (m *DynamicSegment) GetSegmentSize() int64 {
	if m != nil {
		return m.SegmentSize
	}
	return 0
}

func (m *DynamicSegment) GetPredicates() *PredicateAggregate {
	if m != nil {
		return m.Predicates
	}
	return nil
}

type StringPredicate struct {
	Op            StringPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.audience.v1.StringPredicate_Op" json:"op,omitempty"`
	AttributeName string             `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         string             `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *StringPredicate) Reset()                    { *m = StringPredicate{} }
func (m *StringPredicate) String() string            { return proto.CompactTextString(m) }
func (*StringPredicate) ProtoMessage()               {}
func (*StringPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *StringPredicate) GetOp() StringPredicate_Op {
	if m != nil {
		return m.Op
	}
	return StringPredicate_IS_UNSET
}

func (m *StringPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *StringPredicate) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type BoolPredicate struct {
	Op            BoolPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.audience.v1.BoolPredicate_Op" json:"op,omitempty"`
	AttributeName string           `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         bool             `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *BoolPredicate) Reset()                    { *m = BoolPredicate{} }
func (m *BoolPredicate) String() string            { return proto.CompactTextString(m) }
func (*BoolPredicate) ProtoMessage()               {}
func (*BoolPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *BoolPredicate) GetOp() BoolPredicate_Op {
	if m != nil {
		return m.Op
	}
	return BoolPredicate_IS_UNSET
}

func (m *BoolPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *BoolPredicate) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type NumberPredicate struct {
	Op            NumberPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.audience.v1.NumberPredicate_Op" json:"op,omitempty"`
	AttributeName string             `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         int64              `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Value2        int64              `protobuf:"varint,4,opt,name=value2" json:"value2,omitempty"`
}

func (m *NumberPredicate) Reset()                    { *m = NumberPredicate{} }
func (m *NumberPredicate) String() string            { return proto.CompactTextString(m) }
func (*NumberPredicate) ProtoMessage()               {}
func (*NumberPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *NumberPredicate) GetOp() NumberPredicate_Op {
	if m != nil {
		return m.Op
	}
	return NumberPredicate_IS_UNSET
}

func (m *NumberPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *NumberPredicate) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *NumberPredicate) GetValue2() int64 {
	if m != nil {
		return m.Value2
	}
	return 0
}

type DatePredicate struct {
	Op            DatePredicate_Op           `protobuf:"varint,1,opt,name=op,enum=rover.audience.v1.DatePredicate_Op" json:"op,omitempty"`
	AttributeName string                     `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Value2        *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=value2" json:"value2,omitempty"`
}

func (m *DatePredicate) Reset()                    { *m = DatePredicate{} }
func (m *DatePredicate) String() string            { return proto.CompactTextString(m) }
func (*DatePredicate) ProtoMessage()               {}
func (*DatePredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *DatePredicate) GetOp() DatePredicate_Op {
	if m != nil {
		return m.Op
	}
	return DatePredicate_IS_UNSET
}

func (m *DatePredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *DatePredicate) GetValue() *google_protobuf.Timestamp {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DatePredicate) GetValue2() *google_protobuf.Timestamp {
	if m != nil {
		return m.Value2
	}
	return nil
}

type GeofencePredicate struct {
	Op            GeofencePredicate_Op        `protobuf:"varint,1,opt,name=op,enum=rover.audience.v1.GeofencePredicate_Op" json:"op,omitempty"`
	AttributeName string                      `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         *GeofencePredicate_Location `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *GeofencePredicate) Reset()                    { *m = GeofencePredicate{} }
func (m *GeofencePredicate) String() string            { return proto.CompactTextString(m) }
func (*GeofencePredicate) ProtoMessage()               {}
func (*GeofencePredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *GeofencePredicate) GetOp() GeofencePredicate_Op {
	if m != nil {
		return m.Op
	}
	return GeofencePredicate_IS_UNSET
}

func (m *GeofencePredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *GeofencePredicate) GetValue() *GeofencePredicate_Location {
	if m != nil {
		return m.Value
	}
	return nil
}

type GeofencePredicate_Location struct {
	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Radius    int32   `protobuf:"varint,3,opt,name=radius" json:"radius,omitempty"`
}

func (m *GeofencePredicate_Location) Reset()                    { *m = GeofencePredicate_Location{} }
func (m *GeofencePredicate_Location) String() string            { return proto.CompactTextString(m) }
func (*GeofencePredicate_Location) ProtoMessage()               {}
func (*GeofencePredicate_Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77, 0} }

func (m *GeofencePredicate_Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *GeofencePredicate_Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GeofencePredicate_Location) GetRadius() int32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type VersionPredicate struct {
	Op            VersionPredicate_Op `protobuf:"varint,1,opt,name=op,enum=rover.audience.v1.VersionPredicate_Op" json:"op,omitempty"`
	AttributeName string              `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	Value         *Version            `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Value2        *Version            `protobuf:"bytes,4,opt,name=value2" json:"value2,omitempty"`
}

func (m *VersionPredicate) Reset()                    { *m = VersionPredicate{} }
func (m *VersionPredicate) String() string            { return proto.CompactTextString(m) }
func (*VersionPredicate) ProtoMessage()               {}
func (*VersionPredicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *VersionPredicate) GetOp() VersionPredicate_Op {
	if m != nil {
		return m.Op
	}
	return VersionPredicate_IS_UNSET
}

func (m *VersionPredicate) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *VersionPredicate) GetValue() *Version {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *VersionPredicate) GetValue2() *Version {
	if m != nil {
		return m.Value2
	}
	return nil
}

type PredicateAggregate struct {
	Condition  PredicateAggregate_Condition `protobuf:"varint,1,opt,name=condition,enum=rover.audience.v1.PredicateAggregate_Condition" json:"condition,omitempty"`
	Predicates []*Predicate                 `protobuf:"bytes,2,rep,name=predicates" json:"predicates,omitempty"`
}

func (m *PredicateAggregate) Reset()                    { *m = PredicateAggregate{} }
func (m *PredicateAggregate) String() string            { return proto.CompactTextString(m) }
func (*PredicateAggregate) ProtoMessage()               {}
func (*PredicateAggregate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *PredicateAggregate) GetCondition() PredicateAggregate_Condition {
	if m != nil {
		return m.Condition
	}
	return PredicateAggregate_ANY
}

func (m *PredicateAggregate) GetPredicates() []*Predicate {
	if m != nil {
		return m.Predicates
	}
	return nil
}

type Predicate struct {
	// Types that are valid to be assigned to Value:
	//	*Predicate_StringPredicate
	//	*Predicate_BoolPredicate
	//	*Predicate_NumberPredicate
	//	*Predicate_DatePredicate
	//	*Predicate_VersionPredicate
	//	*Predicate_GeofencePredicate
	Value isPredicate_Value `protobuf_oneof:"value"`
}

func (m *Predicate) Reset()                    { *m = Predicate{} }
func (m *Predicate) String() string            { return proto.CompactTextString(m) }
func (*Predicate) ProtoMessage()               {}
func (*Predicate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

type isPredicate_Value interface {
	isPredicate_Value()
}

type Predicate_StringPredicate struct {
	StringPredicate *StringPredicate `protobuf:"bytes,1,opt,name=string_predicate,json=stringPredicate,oneof"`
}
type Predicate_BoolPredicate struct {
	BoolPredicate *BoolPredicate `protobuf:"bytes,2,opt,name=bool_predicate,json=boolPredicate,oneof"`
}
type Predicate_NumberPredicate struct {
	NumberPredicate *NumberPredicate `protobuf:"bytes,3,opt,name=number_predicate,json=numberPredicate,oneof"`
}
type Predicate_DatePredicate struct {
	DatePredicate *DatePredicate `protobuf:"bytes,4,opt,name=date_predicate,json=datePredicate,oneof"`
}
type Predicate_VersionPredicate struct {
	VersionPredicate *VersionPredicate `protobuf:"bytes,5,opt,name=version_predicate,json=versionPredicate,oneof"`
}
type Predicate_GeofencePredicate struct {
	GeofencePredicate *GeofencePredicate `protobuf:"bytes,6,opt,name=geofence_predicate,json=geofencePredicate,oneof"`
}

func (*Predicate_StringPredicate) isPredicate_Value()   {}
func (*Predicate_BoolPredicate) isPredicate_Value()     {}
func (*Predicate_NumberPredicate) isPredicate_Value()   {}
func (*Predicate_DatePredicate) isPredicate_Value()     {}
func (*Predicate_VersionPredicate) isPredicate_Value()  {}
func (*Predicate_GeofencePredicate) isPredicate_Value() {}

func (m *Predicate) GetValue() isPredicate_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Predicate) GetStringPredicate() *StringPredicate {
	if x, ok := m.GetValue().(*Predicate_StringPredicate); ok {
		return x.StringPredicate
	}
	return nil
}

func (m *Predicate) GetBoolPredicate() *BoolPredicate {
	if x, ok := m.GetValue().(*Predicate_BoolPredicate); ok {
		return x.BoolPredicate
	}
	return nil
}

func (m *Predicate) GetNumberPredicate() *NumberPredicate {
	if x, ok := m.GetValue().(*Predicate_NumberPredicate); ok {
		return x.NumberPredicate
	}
	return nil
}

func (m *Predicate) GetDatePredicate() *DatePredicate {
	if x, ok := m.GetValue().(*Predicate_DatePredicate); ok {
		return x.DatePredicate
	}
	return nil
}

func (m *Predicate) GetVersionPredicate() *VersionPredicate {
	if x, ok := m.GetValue().(*Predicate_VersionPredicate); ok {
		return x.VersionPredicate
	}
	return nil
}

func (m *Predicate) GetGeofencePredicate() *GeofencePredicate {
	if x, ok := m.GetValue().(*Predicate_GeofencePredicate); ok {
		return x.GeofencePredicate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Predicate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Predicate_OneofMarshaler, _Predicate_OneofUnmarshaler, _Predicate_OneofSizer, []interface{}{
		(*Predicate_StringPredicate)(nil),
		(*Predicate_BoolPredicate)(nil),
		(*Predicate_NumberPredicate)(nil),
		(*Predicate_DatePredicate)(nil),
		(*Predicate_VersionPredicate)(nil),
		(*Predicate_GeofencePredicate)(nil),
	}
}

func _Predicate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Predicate)
	// value
	switch x := m.Value.(type) {
	case *Predicate_StringPredicate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringPredicate); err != nil {
			return err
		}
	case *Predicate_BoolPredicate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BoolPredicate); err != nil {
			return err
		}
	case *Predicate_NumberPredicate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NumberPredicate); err != nil {
			return err
		}
	case *Predicate_DatePredicate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DatePredicate); err != nil {
			return err
		}
	case *Predicate_VersionPredicate:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VersionPredicate); err != nil {
			return err
		}
	case *Predicate_GeofencePredicate:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GeofencePredicate); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Predicate.Value has unexpected type %T", x)
	}
	return nil
}

func _Predicate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Predicate)
	switch tag {
	case 1: // value.string_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StringPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_StringPredicate{msg}
		return true, err
	case 2: // value.bool_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BoolPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_BoolPredicate{msg}
		return true, err
	case 3: // value.number_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NumberPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_NumberPredicate{msg}
		return true, err
	case 4: // value.date_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatePredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_DatePredicate{msg}
		return true, err
	case 5: // value.version_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VersionPredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_VersionPredicate{msg}
		return true, err
	case 6: // value.geofence_predicate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GeofencePredicate)
		err := b.DecodeMessage(msg)
		m.Value = &Predicate_GeofencePredicate{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Predicate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Predicate)
	// value
	switch x := m.Value.(type) {
	case *Predicate_StringPredicate:
		s := proto.Size(x.StringPredicate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_BoolPredicate:
		s := proto.Size(x.BoolPredicate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_NumberPredicate:
		s := proto.Size(x.NumberPredicate)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_DatePredicate:
		s := proto.Size(x.DatePredicate)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_VersionPredicate:
		s := proto.Size(x.VersionPredicate)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_GeofencePredicate:
		s := proto.Size(x.GeofencePredicate)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*GetProfileRequest)(nil), "rover.audience.v1.GetProfileRequest")
	proto.RegisterType((*GetProfileResponse)(nil), "rover.audience.v1.GetProfileResponse")
	proto.RegisterType((*CreateProfileRequest)(nil), "rover.audience.v1.CreateProfileRequest")
	proto.RegisterType((*CreateProfileResponse)(nil), "rover.audience.v1.CreateProfileResponse")
	proto.RegisterType((*DeleteProfileRequest)(nil), "rover.audience.v1.DeleteProfileRequest")
	proto.RegisterType((*DeleteProfileResponse)(nil), "rover.audience.v1.DeleteProfileResponse")
	proto.RegisterType((*UpdateProfileRequest)(nil), "rover.audience.v1.UpdateProfileRequest")
	proto.RegisterType((*UpdateProfileResponse)(nil), "rover.audience.v1.UpdateProfileResponse")
	proto.RegisterType((*UpdateProfileIdentifierRequest)(nil), "rover.audience.v1.UpdateProfileIdentifierRequest")
	proto.RegisterType((*UpdateProfileIdentifierResponse)(nil), "rover.audience.v1.UpdateProfileIdentifierResponse")
	proto.RegisterType((*GetProfileByDeviceIdRequest)(nil), "rover.audience.v1.GetProfileByDeviceIdRequest")
	proto.RegisterType((*GetProfileByDeviceIdResponse)(nil), "rover.audience.v1.GetProfileByDeviceIdResponse")
	proto.RegisterType((*GetProfileByIdentifierRequest)(nil), "rover.audience.v1.GetProfileByIdentifierRequest")
	proto.RegisterType((*GetProfileByIdentifierResponse)(nil), "rover.audience.v1.GetProfileByIdentifierResponse")
	proto.RegisterType((*ListProfilesByIdsRequest)(nil), "rover.audience.v1.ListProfilesByIdsRequest")
	proto.RegisterType((*ListProfilesByIdsResponse)(nil), "rover.audience.v1.ListProfilesByIdsResponse")
	proto.RegisterType((*ListProfilesByIdentifiersRequest)(nil), "rover.audience.v1.ListProfilesByIdentifiersRequest")
	proto.RegisterType((*ListProfilesByIdentifiersResponse)(nil), "rover.audience.v1.ListProfilesByIdentifiersResponse")
	proto.RegisterType((*GetProfileSchemaRequest)(nil), "rover.audience.v1.GetProfileSchemaRequest")
	proto.RegisterType((*GetProfileSchemaResponse)(nil), "rover.audience.v1.GetProfileSchemaResponse")
	proto.RegisterType((*Profile)(nil), "rover.audience.v1.Profile")
	proto.RegisterType((*ProfileSchema)(nil), "rover.audience.v1.ProfileSchema")
	proto.RegisterType((*GetDeviceRequest)(nil), "rover.audience.v1.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "rover.audience.v1.GetDeviceResponse")
	proto.RegisterType((*GetDeviceByPushTokenRequest)(nil), "rover.audience.v1.GetDeviceByPushTokenRequest")
	proto.RegisterType((*GetDeviceByPushTokenResponse)(nil), "rover.audience.v1.GetDeviceByPushTokenResponse")
	proto.RegisterType((*CreateDeviceRequest)(nil), "rover.audience.v1.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceResponse)(nil), "rover.audience.v1.CreateDeviceResponse")
	proto.RegisterType((*UpdateDevicePushTokenRequest)(nil), "rover.audience.v1.UpdateDevicePushTokenRequest")
	proto.RegisterType((*UpdateDevicePushTokenResponse)(nil), "rover.audience.v1.UpdateDevicePushTokenResponse")
	proto.RegisterType((*UpdateDeviceUnregisterPushTokenRequest)(nil), "rover.audience.v1.UpdateDeviceUnregisterPushTokenRequest")
	proto.RegisterType((*UpdateDeviceUnregisterPushTokenResponse)(nil), "rover.audience.v1.UpdateDeviceUnregisterPushTokenResponse")
	proto.RegisterType((*UpdateDeviceLocationRequest)(nil), "rover.audience.v1.UpdateDeviceLocationRequest")
	proto.RegisterType((*UpdateDeviceLocationResponse)(nil), "rover.audience.v1.UpdateDeviceLocationResponse")
	proto.RegisterType((*UpdateDeviceGeofenceMonitoringRequest)(nil), "rover.audience.v1.UpdateDeviceGeofenceMonitoringRequest")
	proto.RegisterType((*UpdateDeviceGeofenceMonitoringResponse)(nil), "rover.audience.v1.UpdateDeviceGeofenceMonitoringResponse")
	proto.RegisterType((*UpdateDeviceIBeaconMonitoringRequest)(nil), "rover.audience.v1.UpdateDeviceIBeaconMonitoringRequest")
	proto.RegisterType((*UpdateDeviceIBeaconMonitoringResponse)(nil), "rover.audience.v1.UpdateDeviceIBeaconMonitoringResponse")
	proto.RegisterType((*UpdateDeviceTestPropertyRequest)(nil), "rover.audience.v1.UpdateDeviceTestPropertyRequest")
	proto.RegisterType((*UpdateDeviceTestPropertyResponse)(nil), "rover.audience.v1.UpdateDeviceTestPropertyResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "rover.audience.v1.DeleteDeviceRequest")
	proto.RegisterType((*DeleteDeviceResponse)(nil), "rover.audience.v1.DeleteDeviceResponse")
	proto.RegisterType((*SetDeviceProfileRequest)(nil), "rover.audience.v1.SetDeviceProfileRequest")
	proto.RegisterType((*SetDeviceProfileResponse)(nil), "rover.audience.v1.SetDeviceProfileResponse")
	proto.RegisterType((*ListDevicesByProfileIdRequest)(nil), "rover.audience.v1.ListDevicesByProfileIdRequest")
	proto.RegisterType((*ListDevicesByProfileIdResponse)(nil), "rover.audience.v1.ListDevicesByProfileIdResponse")
	proto.RegisterType((*ListDevicesByProfileIdentifierRequest)(nil), "rover.audience.v1.ListDevicesByProfileIdentifierRequest")
	proto.RegisterType((*ListDevicesByProfileIdentifierResponse)(nil), "rover.audience.v1.ListDevicesByProfileIdentifierResponse")
	proto.RegisterType((*GetDeviceSchemaRequest)(nil), "rover.audience.v1.GetDeviceSchemaRequest")
	proto.RegisterType((*GetDeviceSchemaResponse)(nil), "rover.audience.v1.GetDeviceSchemaResponse")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "rover.audience.v1.UpdateDeviceRequest")
	proto.RegisterType((*UpdateDeviceResponse)(nil), "rover.audience.v1.UpdateDeviceResponse")
	proto.RegisterType((*Device)(nil), "rover.audience.v1.Device")
	proto.RegisterType((*IBeaconRegion)(nil), "rover.audience.v1.IBeaconRegion")
	proto.RegisterType((*GeofenceRegion)(nil), "rover.audience.v1.GeofenceRegion")
	proto.RegisterType((*ValueUpdates)(nil), "rover.audience.v1.ValueUpdates")
	proto.RegisterType((*ValueUpdate)(nil), "rover.audience.v1.ValueUpdate")
	proto.RegisterType((*Value)(nil), "rover.audience.v1.Value")
	proto.RegisterType((*Value_StringArray)(nil), "rover.audience.v1.Value.StringArray")
	proto.RegisterType((*SchemaAttribute)(nil), "rover.audience.v1.SchemaAttribute")
	proto.RegisterType((*Version)(nil), "rover.audience.v1.Version")
	proto.RegisterType((*CreateDynamicSegmentRequest)(nil), "rover.audience.v1.CreateDynamicSegmentRequest")
	proto.RegisterType((*CreateDynamicSegmentResponse)(nil), "rover.audience.v1.CreateDynamicSegmentResponse")
	proto.RegisterType((*GetDynamicSegmentByIdRequest)(nil), "rover.audience.v1.GetDynamicSegmentByIdRequest")
	proto.RegisterType((*GetDynamicSegmentByIdResponse)(nil), "rover.audience.v1.GetDynamicSegmentByIdResponse")
	proto.RegisterType((*UpdateDynamicSegmentTitleRequest)(nil), "rover.audience.v1.UpdateDynamicSegmentTitleRequest")
	proto.RegisterType((*UpdateDynamicSegmentTitleResponse)(nil), "rover.audience.v1.UpdateDynamicSegmentTitleResponse")
	proto.RegisterType((*UpdateDynamicSegmentPredicatesRequest)(nil), "rover.audience.v1.UpdateDynamicSegmentPredicatesRequest")
	proto.RegisterType((*UpdateDynamicSegmentPredicatesResponse)(nil), "rover.audience.v1.UpdateDynamicSegmentPredicatesResponse")
	proto.RegisterType((*ArchiveDynamicSegmentByIdRequest)(nil), "rover.audience.v1.ArchiveDynamicSegmentByIdRequest")
	proto.RegisterType((*ArchiveDynamicSegmentByIdResponse)(nil), "rover.audience.v1.ArchiveDynamicSegmentByIdResponse")
	proto.RegisterType((*ListDynamicSegmentsRequest)(nil), "rover.audience.v1.ListDynamicSegmentsRequest")
	proto.RegisterType((*ListDynamicSegmentsResponse)(nil), "rover.audience.v1.ListDynamicSegmentsResponse")
	proto.RegisterType((*DynamicSegment)(nil), "rover.audience.v1.DynamicSegment")
	proto.RegisterType((*StringPredicate)(nil), "rover.audience.v1.StringPredicate")
	proto.RegisterType((*BoolPredicate)(nil), "rover.audience.v1.BoolPredicate")
	proto.RegisterType((*NumberPredicate)(nil), "rover.audience.v1.NumberPredicate")
	proto.RegisterType((*DatePredicate)(nil), "rover.audience.v1.DatePredicate")
	proto.RegisterType((*GeofencePredicate)(nil), "rover.audience.v1.GeofencePredicate")
	proto.RegisterType((*GeofencePredicate_Location)(nil), "rover.audience.v1.GeofencePredicate.Location")
	proto.RegisterType((*VersionPredicate)(nil), "rover.audience.v1.VersionPredicate")
	proto.RegisterType((*PredicateAggregate)(nil), "rover.audience.v1.PredicateAggregate")
	proto.RegisterType((*Predicate)(nil), "rover.audience.v1.Predicate")
	proto.RegisterEnum("rover.audience.v1.Platform", Platform_name, Platform_value)
	proto.RegisterEnum("rover.audience.v1.Null", Null_name, Null_value)
	proto.RegisterEnum("rover.audience.v1.Device_RegionMonitoringMode", Device_RegionMonitoringMode_name, Device_RegionMonitoringMode_value)
	proto.RegisterEnum("rover.audience.v1.ValueUpdate_UpdateType", ValueUpdate_UpdateType_name, ValueUpdate_UpdateType_value)
	proto.RegisterEnum("rover.audience.v1.StringPredicate_Op", StringPredicate_Op_name, StringPredicate_Op_value)
	proto.RegisterEnum("rover.audience.v1.BoolPredicate_Op", BoolPredicate_Op_name, BoolPredicate_Op_value)
	proto.RegisterEnum("rover.audience.v1.NumberPredicate_Op", NumberPredicate_Op_name, NumberPredicate_Op_value)
	proto.RegisterEnum("rover.audience.v1.DatePredicate_Op", DatePredicate_Op_name, DatePredicate_Op_value)
	proto.RegisterEnum("rover.audience.v1.GeofencePredicate_Op", GeofencePredicate_Op_name, GeofencePredicate_Op_value)
	proto.RegisterEnum("rover.audience.v1.VersionPredicate_Op", VersionPredicate_Op_name, VersionPredicate_Op_value)
	proto.RegisterEnum("rover.audience.v1.PredicateAggregate_Condition", PredicateAggregate_Condition_name, PredicateAggregate_Condition_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Audience service

type AudienceClient interface {
	// CreateProfile creates a new empty profile under a given account.
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*GetProfileResponse, error)
	CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*CreateProfileResponse, error)
	//  DeleteProfile deletes a profile from db and all segments
	DeleteProfile(ctx context.Context, in *DeleteProfileRequest, opts ...grpc.CallOption) (*DeleteProfileResponse, error)
	// UpdateProfile updates profile with provided subset of attributes
	UpdateProfile(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*UpdateProfileResponse, error)
	UpdateProfileIdentifier(ctx context.Context, in *UpdateProfileIdentifierRequest, opts ...grpc.CallOption) (*UpdateProfileIdentifierResponse, error)
	// GetProfileByDeviceId returns a profile which is associated to the device id
	GetProfileByDeviceId(ctx context.Context, in *GetProfileByDeviceIdRequest, opts ...grpc.CallOption) (*GetProfileByDeviceIdResponse, error)
	GetProfileByIdentifier(ctx context.Context, in *GetProfileByIdentifierRequest, opts ...grpc.CallOption) (*GetProfileByIdentifierResponse, error)
	ListProfilesByIds(ctx context.Context, in *ListProfilesByIdsRequest, opts ...grpc.CallOption) (*ListProfilesByIdsResponse, error)
	ListProfilesByIdentifiers(ctx context.Context, in *ListProfilesByIdentifiersRequest, opts ...grpc.CallOption) (*ListProfilesByIdentifiersResponse, error)
	// GetProfileSchema returns the currently tracked profiles schema by account id
	GetProfileSchema(ctx context.Context, in *GetProfileSchemaRequest, opts ...grpc.CallOption) (*GetProfileSchemaResponse, error)
	// GetDevice returns the device for a given device id
	GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	GetDeviceByPushToken(ctx context.Context, in *GetDeviceByPushTokenRequest, opts ...grpc.CallOption) (*GetDeviceByPushTokenResponse, error)
	CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error)
	// Device Updates
	UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error)
	UpdateDevicePushToken(ctx context.Context, in *UpdateDevicePushTokenRequest, opts ...grpc.CallOption) (*UpdateDevicePushTokenResponse, error)
	UpdateDeviceUnregisterPushToken(ctx context.Context, in *UpdateDeviceUnregisterPushTokenRequest, opts ...grpc.CallOption) (*UpdateDeviceUnregisterPushTokenResponse, error)
	UpdateDeviceLocation(ctx context.Context, in *UpdateDeviceLocationRequest, opts ...grpc.CallOption) (*UpdateDeviceLocationResponse, error)
	UpdateDeviceGeofenceMonitoring(ctx context.Context, in *UpdateDeviceGeofenceMonitoringRequest, opts ...grpc.CallOption) (*UpdateDeviceGeofenceMonitoringResponse, error)
	UpdateDeviceIBeaconMonitoring(ctx context.Context, in *UpdateDeviceIBeaconMonitoringRequest, opts ...grpc.CallOption) (*UpdateDeviceIBeaconMonitoringResponse, error)
	// Test devices
	UpdateDeviceTestProperty(ctx context.Context, in *UpdateDeviceTestPropertyRequest, opts ...grpc.CallOption) (*UpdateDeviceTestPropertyResponse, error)
	// Lists
	ListDevicesByProfileId(ctx context.Context, in *ListDevicesByProfileIdRequest, opts ...grpc.CallOption) (*ListDevicesByProfileIdResponse, error)
	ListDevicesByProfileIdentifier(ctx context.Context, in *ListDevicesByProfileIdentifierRequest, opts ...grpc.CallOption) (*ListDevicesByProfileIdentifierResponse, error)
	// SetDeviceProfile sets the profile the device belongs to
	SetDeviceProfile(ctx context.Context, in *SetDeviceProfileRequest, opts ...grpc.CallOption) (*SetDeviceProfileResponse, error)
	// DeleteDevice deletes device from the database and removes it from any segments
	DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error)
	// GetDeviceSchema returns description of device attributes
	GetDeviceSchema(ctx context.Context, in *GetDeviceSchemaRequest, opts ...grpc.CallOption) (*GetDeviceSchemaResponse, error)
	// CreateDynamicSegment creates a new static segment by account_id and a title
	CreateDynamicSegment(ctx context.Context, in *CreateDynamicSegmentRequest, opts ...grpc.CallOption) (*CreateDynamicSegmentResponse, error)
	// GetDynamicSegmentById returns a single static segment by id
	GetDynamicSegmentById(ctx context.Context, in *GetDynamicSegmentByIdRequest, opts ...grpc.CallOption) (*GetDynamicSegmentByIdResponse, error)
	UpdateDynamicSegmentTitle(ctx context.Context, in *UpdateDynamicSegmentTitleRequest, opts ...grpc.CallOption) (*UpdateDynamicSegmentTitleResponse, error)
	UpdateDynamicSegmentPredicates(ctx context.Context, in *UpdateDynamicSegmentPredicatesRequest, opts ...grpc.CallOption) (*UpdateDynamicSegmentPredicatesResponse, error)
	// ArchiveDynamicSegmentById archive a segment given an id
	ArchiveDynamicSegmentById(ctx context.Context, in *ArchiveDynamicSegmentByIdRequest, opts ...grpc.CallOption) (*ArchiveDynamicSegmentByIdResponse, error)
	// ListDynamicSegments returns a list of static segments by account_id.
	ListDynamicSegments(ctx context.Context, in *ListDynamicSegmentsRequest, opts ...grpc.CallOption) (*ListDynamicSegmentsResponse, error)
}

type audienceClient struct {
	cc *grpc.ClientConn
}

func NewAudienceClient(cc *grpc.ClientConn) AudienceClient {
	return &audienceClient{cc}
}

func (c *audienceClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*GetProfileResponse, error) {
	out := new(GetProfileResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*CreateProfileResponse, error) {
	out := new(CreateProfileResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/CreateProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) DeleteProfile(ctx context.Context, in *DeleteProfileRequest, opts ...grpc.CallOption) (*DeleteProfileResponse, error) {
	out := new(DeleteProfileResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/DeleteProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateProfile(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*UpdateProfileResponse, error) {
	out := new(UpdateProfileResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateProfileIdentifier(ctx context.Context, in *UpdateProfileIdentifierRequest, opts ...grpc.CallOption) (*UpdateProfileIdentifierResponse, error) {
	out := new(UpdateProfileIdentifierResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateProfileIdentifier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) GetProfileByDeviceId(ctx context.Context, in *GetProfileByDeviceIdRequest, opts ...grpc.CallOption) (*GetProfileByDeviceIdResponse, error) {
	out := new(GetProfileByDeviceIdResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetProfileByDeviceId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) GetProfileByIdentifier(ctx context.Context, in *GetProfileByIdentifierRequest, opts ...grpc.CallOption) (*GetProfileByIdentifierResponse, error) {
	out := new(GetProfileByIdentifierResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetProfileByIdentifier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) ListProfilesByIds(ctx context.Context, in *ListProfilesByIdsRequest, opts ...grpc.CallOption) (*ListProfilesByIdsResponse, error) {
	out := new(ListProfilesByIdsResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/ListProfilesByIds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) ListProfilesByIdentifiers(ctx context.Context, in *ListProfilesByIdentifiersRequest, opts ...grpc.CallOption) (*ListProfilesByIdentifiersResponse, error) {
	out := new(ListProfilesByIdentifiersResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/ListProfilesByIdentifiers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) GetProfileSchema(ctx context.Context, in *GetProfileSchemaRequest, opts ...grpc.CallOption) (*GetProfileSchemaResponse, error) {
	out := new(GetProfileSchemaResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetProfileSchema", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) GetDeviceByPushToken(ctx context.Context, in *GetDeviceByPushTokenRequest, opts ...grpc.CallOption) (*GetDeviceByPushTokenResponse, error) {
	out := new(GetDeviceByPushTokenResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetDeviceByPushToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error) {
	out := new(CreateDeviceResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/CreateDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error) {
	out := new(UpdateDeviceResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDevicePushToken(ctx context.Context, in *UpdateDevicePushTokenRequest, opts ...grpc.CallOption) (*UpdateDevicePushTokenResponse, error) {
	out := new(UpdateDevicePushTokenResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDevicePushToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDeviceUnregisterPushToken(ctx context.Context, in *UpdateDeviceUnregisterPushTokenRequest, opts ...grpc.CallOption) (*UpdateDeviceUnregisterPushTokenResponse, error) {
	out := new(UpdateDeviceUnregisterPushTokenResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDeviceUnregisterPushToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDeviceLocation(ctx context.Context, in *UpdateDeviceLocationRequest, opts ...grpc.CallOption) (*UpdateDeviceLocationResponse, error) {
	out := new(UpdateDeviceLocationResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDeviceLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDeviceGeofenceMonitoring(ctx context.Context, in *UpdateDeviceGeofenceMonitoringRequest, opts ...grpc.CallOption) (*UpdateDeviceGeofenceMonitoringResponse, error) {
	out := new(UpdateDeviceGeofenceMonitoringResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDeviceGeofenceMonitoring", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDeviceIBeaconMonitoring(ctx context.Context, in *UpdateDeviceIBeaconMonitoringRequest, opts ...grpc.CallOption) (*UpdateDeviceIBeaconMonitoringResponse, error) {
	out := new(UpdateDeviceIBeaconMonitoringResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDeviceIBeaconMonitoring", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDeviceTestProperty(ctx context.Context, in *UpdateDeviceTestPropertyRequest, opts ...grpc.CallOption) (*UpdateDeviceTestPropertyResponse, error) {
	out := new(UpdateDeviceTestPropertyResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDeviceTestProperty", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) ListDevicesByProfileId(ctx context.Context, in *ListDevicesByProfileIdRequest, opts ...grpc.CallOption) (*ListDevicesByProfileIdResponse, error) {
	out := new(ListDevicesByProfileIdResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/ListDevicesByProfileId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) ListDevicesByProfileIdentifier(ctx context.Context, in *ListDevicesByProfileIdentifierRequest, opts ...grpc.CallOption) (*ListDevicesByProfileIdentifierResponse, error) {
	out := new(ListDevicesByProfileIdentifierResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/ListDevicesByProfileIdentifier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) SetDeviceProfile(ctx context.Context, in *SetDeviceProfileRequest, opts ...grpc.CallOption) (*SetDeviceProfileResponse, error) {
	out := new(SetDeviceProfileResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/SetDeviceProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error) {
	out := new(DeleteDeviceResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/DeleteDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) GetDeviceSchema(ctx context.Context, in *GetDeviceSchemaRequest, opts ...grpc.CallOption) (*GetDeviceSchemaResponse, error) {
	out := new(GetDeviceSchemaResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetDeviceSchema", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) CreateDynamicSegment(ctx context.Context, in *CreateDynamicSegmentRequest, opts ...grpc.CallOption) (*CreateDynamicSegmentResponse, error) {
	out := new(CreateDynamicSegmentResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/CreateDynamicSegment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) GetDynamicSegmentById(ctx context.Context, in *GetDynamicSegmentByIdRequest, opts ...grpc.CallOption) (*GetDynamicSegmentByIdResponse, error) {
	out := new(GetDynamicSegmentByIdResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/GetDynamicSegmentById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDynamicSegmentTitle(ctx context.Context, in *UpdateDynamicSegmentTitleRequest, opts ...grpc.CallOption) (*UpdateDynamicSegmentTitleResponse, error) {
	out := new(UpdateDynamicSegmentTitleResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDynamicSegmentTitle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) UpdateDynamicSegmentPredicates(ctx context.Context, in *UpdateDynamicSegmentPredicatesRequest, opts ...grpc.CallOption) (*UpdateDynamicSegmentPredicatesResponse, error) {
	out := new(UpdateDynamicSegmentPredicatesResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/UpdateDynamicSegmentPredicates", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) ArchiveDynamicSegmentById(ctx context.Context, in *ArchiveDynamicSegmentByIdRequest, opts ...grpc.CallOption) (*ArchiveDynamicSegmentByIdResponse, error) {
	out := new(ArchiveDynamicSegmentByIdResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/ArchiveDynamicSegmentById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audienceClient) ListDynamicSegments(ctx context.Context, in *ListDynamicSegmentsRequest, opts ...grpc.CallOption) (*ListDynamicSegmentsResponse, error) {
	out := new(ListDynamicSegmentsResponse)
	err := grpc.Invoke(ctx, "/rover.audience.v1.Audience/ListDynamicSegments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Audience service

type AudienceServer interface {
	// CreateProfile creates a new empty profile under a given account.
	GetProfile(context.Context, *GetProfileRequest) (*GetProfileResponse, error)
	CreateProfile(context.Context, *CreateProfileRequest) (*CreateProfileResponse, error)
	//  DeleteProfile deletes a profile from db and all segments
	DeleteProfile(context.Context, *DeleteProfileRequest) (*DeleteProfileResponse, error)
	// UpdateProfile updates profile with provided subset of attributes
	UpdateProfile(context.Context, *UpdateProfileRequest) (*UpdateProfileResponse, error)
	UpdateProfileIdentifier(context.Context, *UpdateProfileIdentifierRequest) (*UpdateProfileIdentifierResponse, error)
	// GetProfileByDeviceId returns a profile which is associated to the device id
	GetProfileByDeviceId(context.Context, *GetProfileByDeviceIdRequest) (*GetProfileByDeviceIdResponse, error)
	GetProfileByIdentifier(context.Context, *GetProfileByIdentifierRequest) (*GetProfileByIdentifierResponse, error)
	ListProfilesByIds(context.Context, *ListProfilesByIdsRequest) (*ListProfilesByIdsResponse, error)
	ListProfilesByIdentifiers(context.Context, *ListProfilesByIdentifiersRequest) (*ListProfilesByIdentifiersResponse, error)
	// GetProfileSchema returns the currently tracked profiles schema by account id
	GetProfileSchema(context.Context, *GetProfileSchemaRequest) (*GetProfileSchemaResponse, error)
	// GetDevice returns the device for a given device id
	GetDevice(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	GetDeviceByPushToken(context.Context, *GetDeviceByPushTokenRequest) (*GetDeviceByPushTokenResponse, error)
	CreateDevice(context.Context, *CreateDeviceRequest) (*CreateDeviceResponse, error)
	// Device Updates
	UpdateDevice(context.Context, *UpdateDeviceRequest) (*UpdateDeviceResponse, error)
	UpdateDevicePushToken(context.Context, *UpdateDevicePushTokenRequest) (*UpdateDevicePushTokenResponse, error)
	UpdateDeviceUnregisterPushToken(context.Context, *UpdateDeviceUnregisterPushTokenRequest) (*UpdateDeviceUnregisterPushTokenResponse, error)
	UpdateDeviceLocation(context.Context, *UpdateDeviceLocationRequest) (*UpdateDeviceLocationResponse, error)
	UpdateDeviceGeofenceMonitoring(context.Context, *UpdateDeviceGeofenceMonitoringRequest) (*UpdateDeviceGeofenceMonitoringResponse, error)
	UpdateDeviceIBeaconMonitoring(context.Context, *UpdateDeviceIBeaconMonitoringRequest) (*UpdateDeviceIBeaconMonitoringResponse, error)
	// Test devices
	UpdateDeviceTestProperty(context.Context, *UpdateDeviceTestPropertyRequest) (*UpdateDeviceTestPropertyResponse, error)
	// Lists
	ListDevicesByProfileId(context.Context, *ListDevicesByProfileIdRequest) (*ListDevicesByProfileIdResponse, error)
	ListDevicesByProfileIdentifier(context.Context, *ListDevicesByProfileIdentifierRequest) (*ListDevicesByProfileIdentifierResponse, error)
	// SetDeviceProfile sets the profile the device belongs to
	SetDeviceProfile(context.Context, *SetDeviceProfileRequest) (*SetDeviceProfileResponse, error)
	// DeleteDevice deletes device from the database and removes it from any segments
	DeleteDevice(context.Context, *DeleteDeviceRequest) (*DeleteDeviceResponse, error)
	// GetDeviceSchema returns description of device attributes
	GetDeviceSchema(context.Context, *GetDeviceSchemaRequest) (*GetDeviceSchemaResponse, error)
	// CreateDynamicSegment creates a new static segment by account_id and a title
	CreateDynamicSegment(context.Context, *CreateDynamicSegmentRequest) (*CreateDynamicSegmentResponse, error)
	// GetDynamicSegmentById returns a single static segment by id
	GetDynamicSegmentById(context.Context, *GetDynamicSegmentByIdRequest) (*GetDynamicSegmentByIdResponse, error)
	UpdateDynamicSegmentTitle(context.Context, *UpdateDynamicSegmentTitleRequest) (*UpdateDynamicSegmentTitleResponse, error)
	UpdateDynamicSegmentPredicates(context.Context, *UpdateDynamicSegmentPredicatesRequest) (*UpdateDynamicSegmentPredicatesResponse, error)
	// ArchiveDynamicSegmentById archive a segment given an id
	ArchiveDynamicSegmentById(context.Context, *ArchiveDynamicSegmentByIdRequest) (*ArchiveDynamicSegmentByIdResponse, error)
	// ListDynamicSegments returns a list of static segments by account_id.
	ListDynamicSegments(context.Context, *ListDynamicSegmentsRequest) (*ListDynamicSegmentsResponse, error)
}

func RegisterAudienceServer(s *grpc.Server, srv AudienceServer) {
	s.RegisterService(&_Audience_serviceDesc, srv)
}

func _Audience_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetProfile(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_CreateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).CreateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/CreateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).CreateProfile(ctx, req.(*CreateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_DeleteProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).DeleteProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/DeleteProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).DeleteProfile(ctx, req.(*DeleteProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateProfile(ctx, req.(*UpdateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateProfileIdentifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfileIdentifierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateProfileIdentifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateProfileIdentifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateProfileIdentifier(ctx, req.(*UpdateProfileIdentifierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_GetProfileByDeviceId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileByDeviceIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetProfileByDeviceId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetProfileByDeviceId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetProfileByDeviceId(ctx, req.(*GetProfileByDeviceIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_GetProfileByIdentifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileByIdentifierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetProfileByIdentifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetProfileByIdentifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetProfileByIdentifier(ctx, req.(*GetProfileByIdentifierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_ListProfilesByIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProfilesByIdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).ListProfilesByIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/ListProfilesByIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).ListProfilesByIds(ctx, req.(*ListProfilesByIdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_ListProfilesByIdentifiers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProfilesByIdentifiersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).ListProfilesByIdentifiers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/ListProfilesByIdentifiers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).ListProfilesByIdentifiers(ctx, req.(*ListProfilesByIdentifiersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_GetProfileSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetProfileSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetProfileSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetProfileSchema(ctx, req.(*GetProfileSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetDevice(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_GetDeviceByPushToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceByPushTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetDeviceByPushToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetDeviceByPushToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetDeviceByPushToken(ctx, req.(*GetDeviceByPushTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_CreateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).CreateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/CreateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).CreateDevice(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDevice(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDevicePushToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDevicePushTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDevicePushToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDevicePushToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDevicePushToken(ctx, req.(*UpdateDevicePushTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDeviceUnregisterPushToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceUnregisterPushTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDeviceUnregisterPushToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDeviceUnregisterPushToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDeviceUnregisterPushToken(ctx, req.(*UpdateDeviceUnregisterPushTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDeviceLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDeviceLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDeviceLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDeviceLocation(ctx, req.(*UpdateDeviceLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDeviceGeofenceMonitoring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceGeofenceMonitoringRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDeviceGeofenceMonitoring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDeviceGeofenceMonitoring",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDeviceGeofenceMonitoring(ctx, req.(*UpdateDeviceGeofenceMonitoringRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDeviceIBeaconMonitoring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceIBeaconMonitoringRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDeviceIBeaconMonitoring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDeviceIBeaconMonitoring",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDeviceIBeaconMonitoring(ctx, req.(*UpdateDeviceIBeaconMonitoringRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDeviceTestProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceTestPropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDeviceTestProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDeviceTestProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDeviceTestProperty(ctx, req.(*UpdateDeviceTestPropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_ListDevicesByProfileId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesByProfileIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).ListDevicesByProfileId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/ListDevicesByProfileId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).ListDevicesByProfileId(ctx, req.(*ListDevicesByProfileIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_ListDevicesByProfileIdentifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesByProfileIdentifierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).ListDevicesByProfileIdentifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/ListDevicesByProfileIdentifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).ListDevicesByProfileIdentifier(ctx, req.(*ListDevicesByProfileIdentifierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_SetDeviceProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).SetDeviceProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/SetDeviceProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).SetDeviceProfile(ctx, req.(*SetDeviceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_DeleteDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).DeleteDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/DeleteDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).DeleteDevice(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_GetDeviceSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetDeviceSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetDeviceSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetDeviceSchema(ctx, req.(*GetDeviceSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_CreateDynamicSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDynamicSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).CreateDynamicSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/CreateDynamicSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).CreateDynamicSegment(ctx, req.(*CreateDynamicSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_GetDynamicSegmentById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDynamicSegmentByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).GetDynamicSegmentById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/GetDynamicSegmentById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).GetDynamicSegmentById(ctx, req.(*GetDynamicSegmentByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDynamicSegmentTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDynamicSegmentTitleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDynamicSegmentTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDynamicSegmentTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDynamicSegmentTitle(ctx, req.(*UpdateDynamicSegmentTitleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_UpdateDynamicSegmentPredicates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDynamicSegmentPredicatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).UpdateDynamicSegmentPredicates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/UpdateDynamicSegmentPredicates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).UpdateDynamicSegmentPredicates(ctx, req.(*UpdateDynamicSegmentPredicatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_ArchiveDynamicSegmentById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveDynamicSegmentByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).ArchiveDynamicSegmentById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/ArchiveDynamicSegmentById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).ArchiveDynamicSegmentById(ctx, req.(*ArchiveDynamicSegmentByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audience_ListDynamicSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDynamicSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudienceServer).ListDynamicSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.audience.v1.Audience/ListDynamicSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudienceServer).ListDynamicSegments(ctx, req.(*ListDynamicSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Audience_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rover.audience.v1.Audience",
	HandlerType: (*AudienceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProfile",
			Handler:    _Audience_GetProfile_Handler,
		},
		{
			MethodName: "CreateProfile",
			Handler:    _Audience_CreateProfile_Handler,
		},
		{
			MethodName: "DeleteProfile",
			Handler:    _Audience_DeleteProfile_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _Audience_UpdateProfile_Handler,
		},
		{
			MethodName: "UpdateProfileIdentifier",
			Handler:    _Audience_UpdateProfileIdentifier_Handler,
		},
		{
			MethodName: "GetProfileByDeviceId",
			Handler:    _Audience_GetProfileByDeviceId_Handler,
		},
		{
			MethodName: "GetProfileByIdentifier",
			Handler:    _Audience_GetProfileByIdentifier_Handler,
		},
		{
			MethodName: "ListProfilesByIds",
			Handler:    _Audience_ListProfilesByIds_Handler,
		},
		{
			MethodName: "ListProfilesByIdentifiers",
			Handler:    _Audience_ListProfilesByIdentifiers_Handler,
		},
		{
			MethodName: "GetProfileSchema",
			Handler:    _Audience_GetProfileSchema_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _Audience_GetDevice_Handler,
		},
		{
			MethodName: "GetDeviceByPushToken",
			Handler:    _Audience_GetDeviceByPushToken_Handler,
		},
		{
			MethodName: "CreateDevice",
			Handler:    _Audience_CreateDevice_Handler,
		},
		{
			MethodName: "UpdateDevice",
			Handler:    _Audience_UpdateDevice_Handler,
		},
		{
			MethodName: "UpdateDevicePushToken",
			Handler:    _Audience_UpdateDevicePushToken_Handler,
		},
		{
			MethodName: "UpdateDeviceUnregisterPushToken",
			Handler:    _Audience_UpdateDeviceUnregisterPushToken_Handler,
		},
		{
			MethodName: "UpdateDeviceLocation",
			Handler:    _Audience_UpdateDeviceLocation_Handler,
		},
		{
			MethodName: "UpdateDeviceGeofenceMonitoring",
			Handler:    _Audience_UpdateDeviceGeofenceMonitoring_Handler,
		},
		{
			MethodName: "UpdateDeviceIBeaconMonitoring",
			Handler:    _Audience_UpdateDeviceIBeaconMonitoring_Handler,
		},
		{
			MethodName: "UpdateDeviceTestProperty",
			Handler:    _Audience_UpdateDeviceTestProperty_Handler,
		},
		{
			MethodName: "ListDevicesByProfileId",
			Handler:    _Audience_ListDevicesByProfileId_Handler,
		},
		{
			MethodName: "ListDevicesByProfileIdentifier",
			Handler:    _Audience_ListDevicesByProfileIdentifier_Handler,
		},
		{
			MethodName: "SetDeviceProfile",
			Handler:    _Audience_SetDeviceProfile_Handler,
		},
		{
			MethodName: "DeleteDevice",
			Handler:    _Audience_DeleteDevice_Handler,
		},
		{
			MethodName: "GetDeviceSchema",
			Handler:    _Audience_GetDeviceSchema_Handler,
		},
		{
			MethodName: "CreateDynamicSegment",
			Handler:    _Audience_CreateDynamicSegment_Handler,
		},
		{
			MethodName: "GetDynamicSegmentById",
			Handler:    _Audience_GetDynamicSegmentById_Handler,
		},
		{
			MethodName: "UpdateDynamicSegmentTitle",
			Handler:    _Audience_UpdateDynamicSegmentTitle_Handler,
		},
		{
			MethodName: "UpdateDynamicSegmentPredicates",
			Handler:    _Audience_UpdateDynamicSegmentPredicates_Handler,
		},
		{
			MethodName: "ArchiveDynamicSegmentById",
			Handler:    _Audience_ArchiveDynamicSegmentById_Handler,
		},
		{
			MethodName: "ListDynamicSegments",
			Handler:    _Audience_ListDynamicSegments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "audience/v1/audience.proto",
}

func init() { proto.RegisterFile("audience/v1/audience.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 4074 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x3c, 0x4d, 0x73, 0x1b, 0x47,
	0x76, 0x1c, 0x80, 0x1f, 0xc0, 0x03, 0x3f, 0xc0, 0x26, 0x25, 0x8e, 0x40, 0x8a, 0x1f, 0x43, 0x51,
	0x5f, 0xb6, 0x41, 0x89, 0xda, 0xb5, 0x65, 0x7b, 0x7d, 0x00, 0x49, 0x48, 0x84, 0x43, 0x81, 0xf6,
	0x00, 0x14, 0xe3, 0xb5, 0x77, 0x51, 0x43, 0xa0, 0x09, 0x4e, 0x04, 0xce, 0xc0, 0x33, 0x03, 0x3a,
	0x54, 0x65, 0x53, 0x5b, 0x4e, 0xb2, 0x95, 0xca, 0x29, 0xb5, 0xb5, 0x49, 0xe5, 0xb2, 0xb9, 0xe4,
	0x98, 0xaf, 0x53, 0xae, 0xa9, 0xbd, 0x27, 0xd7, 0xe4, 0x47, 0xe4, 0x96, 0xca, 0x21, 0xd7, 0xd4,
	0x74, 0xf7, 0x7c, 0xa2, 0x67, 0x06, 0x10, 0x11, 0xfa, 0x46, 0xbc, 0x7e, 0x5f, 0xfd, 0xfa, 0x75,
	0xbf, 0xd7, 0xaf, 0xe7, 0x11, 0x0a, 0x4a, 0xaf, 0xa5, 0x62, 0xad, 0x89, 0xb7, 0x2f, 0x9f, 0x6e,
	0x3b, 0x7f, 0x17, 0xbb, 0x86, 0x6e, 0xe9, 0x68, 0xde, 0xd0, 0x2f, 0xb1, 0x51, 0x74, 0xa1, 0x97,
	0x4f, 0x0b, 0x6b, 0x6d, 0x5d, 0x6f, 0x77, 0xf0, 0x36, 0x41, 0x38, 0xed, 0x9d, 0x6d, 0x5b, 0xea,
	0x05, 0x36, 0x2d, 0xe5, 0xa2, 0x4b, 0x69, 0x0a, 0x48, 0xe9, 0x59, 0xe7, 0x94, 0x97, 0x75, 0x4e,
	0x61, 0xd2, 0xb7, 0x30, 0xff, 0x12, 0x5b, 0x5f, 0x18, 0xfa, 0x99, 0xda, 0xc1, 0x32, 0xfe, 0xb6,
	0x87, 0x4d, 0x0b, 0x7d, 0x06, 0xd3, 0x36, 0x4a, 0xa3, 0xa9, 0x6b, 0x16, 0xfe, 0x43, 0x4b, 0x14,
	0xd6, 0x85, 0x87, 0xb9, 0x9d, 0x42, 0xd1, 0x91, 0x69, 0x9d, 0x17, 0x2f, 0x9f, 0x16, 0x4b, 0x3d,
	0xeb, 0x7c, 0x8f, 0x62, 0xc8, 0x39, 0xc5, 0xfb, 0x81, 0xee, 0x02, 0x74, 0x29, 0xc3, 0x86, 0xda,
	0x12, 0x53, 0xeb, 0xc2, 0xc3, 0xac, 0x9c, 0x65, 0x90, 0x4a, 0x4b, 0xfa, 0x1c, 0x90, 0x5f, 0xa4,
	0xd9, 0xd5, 0x35, 0x13, 0xa3, 0x1f, 0xc1, 0x14, 0x43, 0xe9, 0x13, 0xe7, 0x4e, 0xb1, 0xe8, 0x10,
	0x39, 0xa8, 0xd2, 0x31, 0x2c, 0xee, 0x19, 0x58, 0xb1, 0xf0, 0x48, 0x67, 0x20, 0xbd, 0x82, 0x5b,
	0x21, 0xb6, 0xd7, 0xd2, 0xd2, 0x82, 0xc5, 0x7d, 0xdc, 0xc1, 0x23, 0xd6, 0x32, 0xc9, 0xce, 0x4b,
	0x70, 0x2b, 0x24, 0x95, 0x4e, 0x42, 0xfa, 0xc7, 0x14, 0x2c, 0x1e, 0x77, 0x5b, 0xca, 0xcd, 0xea,
	0x83, 0x4e, 0x00, 0x14, 0xcb, 0x32, 0xd4, 0xd3, 0x9e, 0x85, 0x4d, 0x71, 0x62, 0x3d, 0xfd, 0x30,
	0xb7, 0xf3, 0x11, 0xc7, 0x7c, 0x3c, 0xd5, 0x8a, 0x25, 0x97, 0xb2, 0xac, 0x59, 0xc6, 0x95, 0xec,
	0x63, 0x55, 0xf8, 0x39, 0xcc, 0x85, 0x86, 0x51, 0x1e, 0xd2, 0x6f, 0xf0, 0x15, 0x99, 0x40, 0x56,
	0xb6, 0xff, 0x44, 0x3f, 0x86, 0x89, 0x4b, 0xa5, 0xd3, 0xc3, 0x44, 0xaf, 0xdc, 0xce, 0x1a, 0x47,
	0xf0, 0x6b, 0x7b, 0x9c, 0x4a, 0x37, 0x65, 0x8a, 0xfd, 0x49, 0xea, 0xb9, 0x60, 0x1b, 0x32, 0xa4,
	0x13, 0x33, 0xe4, 0xdf, 0x0a, 0xb0, 0x1a, 0x18, 0xa9, 0xb4, 0xb0, 0x66, 0xa9, 0x67, 0x2a, 0x36,
	0x6e, 0xc6, 0xa4, 0xab, 0x00, 0xaa, 0x2b, 0x52, 0x4c, 0x93, 0x61, 0x1f, 0x44, 0xda, 0x80, 0xb5,
	0x48, 0xfd, 0xd8, 0x1c, 0xae, 0x60, 0xd9, 0xdb, 0x8d, 0xbb, 0x57, 0xfb, 0xf8, 0x52, 0x6d, 0xe2,
	0x4a, 0x6b, 0x44, 0xfa, 0x2f, 0x43, 0xb6, 0x45, 0x38, 0x7a, 0xea, 0x67, 0x5a, 0x4c, 0x84, 0x54,
	0x87, 0x15, 0xbe, 0xe8, 0x6b, 0x6d, 0xb6, 0x3f, 0x86, 0xbb, 0x7e, 0xae, 0x23, 0x5f, 0x92, 0xa0,
	0xcd, 0x53, 0x7d, 0x36, 0x7f, 0x0d, 0xab, 0x51, 0xf2, 0xaf, 0x35, 0xaf, 0xb7, 0x20, 0x1e, 0xaa,
	0xa6, 0xc3, 0xd8, 0xb4, 0x39, 0x9b, 0x23, 0x9a, 0xd2, 0x1a, 0xe4, 0x3c, 0x2f, 0x33, 0xc5, 0xd4,
	0x7a, 0xda, 0x9e, 0x93, 0xeb, 0x66, 0xa6, 0x54, 0x83, 0x3b, 0x1c, 0xd9, 0x6c, 0x3a, 0x1f, 0x42,
	0x86, 0xa1, 0x52, 0xd2, 0xf8, 0xf9, 0xb8, 0xb8, 0xd2, 0xaf, 0x05, 0x58, 0x0f, 0x73, 0x75, 0x6c,
	0x35, 0xaa, 0x99, 0x6d, 0xc3, 0x82, 0x37, 0x33, 0x97, 0x39, 0x9b, 0x21, 0xea, 0x86, 0x77, 0x85,
	0x29, 0x7d, 0x0d, 0x1b, 0x31, 0x3a, 0x5d, 0x73, 0xc6, 0xbf, 0x0f, 0x4b, 0x9e, 0x6b, 0xd4, 0x9a,
	0xe7, 0xf8, 0x42, 0x19, 0x51, 0xc0, 0xaa, 0x83, 0xd8, 0xcf, 0x99, 0x69, 0xfb, 0x1c, 0x26, 0x4d,
	0x02, 0x61, 0x4c, 0xd7, 0xa3, 0x75, 0x65, 0x94, 0x0c, 0x5f, 0xfa, 0x9f, 0x14, 0x4c, 0xb1, 0x11,
	0x34, 0x0b, 0x29, 0xb5, 0xc5, 0x0e, 0xd4, 0x94, 0xda, 0xb2, 0x4f, 0x26, 0xa5, 0xd9, 0xd4, 0x7b,
	0x9a, 0xe5, 0x6c, 0xed, 0x09, 0x39, 0xcb, 0x20, 0xc9, 0x27, 0x13, 0xfa, 0x3c, 0x10, 0x0c, 0xc6,
	0x89, 0x11, 0x1f, 0x47, 0x2b, 0x16, 0x77, 0xfe, 0xa3, 0x8f, 0x01, 0x9a, 0x24, 0x5a, 0xb7, 0x1a,
	0x8a, 0x25, 0x4e, 0x30, 0xcb, 0xd1, 0x6c, 0xa8, 0xe8, 0x64, 0x43, 0xc5, 0xba, 0x93, 0x0d, 0xc9,
	0x59, 0x86, 0x5d, 0xb2, 0x6c, 0xd2, 0x1e, 0x39, 0x20, 0x09, 0xe9, 0x64, 0x32, 0x29, 0xc3, 0x2e,
	0x59, 0x85, 0x93, 0x41, 0xa2, 0x4e, 0x31, 0x18, 0x75, 0xc4, 0xa8, 0xa8, 0xe3, 0x0f, 0x37, 0x35,
	0x98, 0x09, 0x2c, 0x07, 0xda, 0x0d, 0xd8, 0x0a, 0x88, 0xad, 0x24, 0x0e, 0x27, 0x8a, 0xee, 0x2a,
	0xe5, 0xb7, 0x91, 0xa4, 0x41, 0xfe, 0x25, 0xb6, 0xe8, 0x11, 0x7b, 0x13, 0x67, 0xfb, 0x0b, 0x92,
	0x57, 0x3a, 0xf2, 0x98, 0x27, 0x3e, 0x85, 0x49, 0x8a, 0xc0, 0x44, 0xdd, 0xe1, 0x4c, 0x82, 0x91,
	0x30, 0x44, 0xe9, 0x7b, 0x81, 0xc4, 0x27, 0x0a, 0xdd, 0xbd, 0xfa, 0xa2, 0x67, 0x9e, 0xd7, 0xf5,
	0x37, 0x58, 0x1b, 0xd1, 0x1c, 0xee, 0xc1, 0x6c, 0xb7, 0x67, 0x9e, 0x37, 0x2c, 0x9b, 0x67, 0xc3,
	0x5e, 0x3c, 0x3a, 0x91, 0xe9, 0xae, 0x23, 0xe8, 0xf7, 0xf0, 0x95, 0xf4, 0x25, 0x09, 0x54, 0x1c,
	0x1d, 0xde, 0x7d, 0x5e, 0x7f, 0x29, 0xc0, 0x02, 0x4d, 0x31, 0x47, 0xba, 0x26, 0x09, 0xf9, 0x42,
	0x60, 0xc9, 0xd2, 0xa1, 0x25, 0xbb, 0xed, 0xe4, 0xd2, 0xc1, 0x55, 0x93, 0xfe, 0x4d, 0x80, 0x15,
	0x9a, 0x45, 0xd0, 0x81, 0x51, 0xaf, 0x41, 0x9c, 0x1f, 0x71, 0x16, 0x28, 0xdd, 0xbf, 0x40, 0xe8,
	0x11, 0xe4, 0x09, 0x16, 0xd6, 0x2e, 0x55, 0x43, 0xd7, 0x2e, 0xb0, 0x66, 0x89, 0xe3, 0x04, 0x6f,
	0xce, 0x86, 0x97, 0x3d, 0xb0, 0xb4, 0x06, 0x77, 0x23, 0x26, 0xc3, 0xa6, 0xfb, 0xa7, 0x02, 0xdc,
	0xf7, 0x63, 0x1c, 0x6b, 0x06, 0x6e, 0xab, 0xa6, 0x85, 0x8d, 0x9b, 0x9c, 0xb8, 0xf4, 0x08, 0x1e,
	0x24, 0x6a, 0xc1, 0x34, 0xfe, 0x3e, 0x05, 0xcb, 0x7e, 0xdc, 0x43, 0xbd, 0xa9, 0x58, 0xaa, 0x7e,
	0x23, 0xeb, 0xf3, 0x1e, 0xcc, 0x77, 0x98, 0xb8, 0x86, 0xd2, 0x6c, 0xf6, 0x0c, 0xa5, 0x49, 0x97,
	0x68, 0x42, 0xce, 0x3b, 0x03, 0x25, 0x06, 0x0f, 0x20, 0x77, 0x14, 0x4b, 0xb5, 0x7a, 0x2d, 0x4c,
	0xd6, 0x49, 0xf0, 0x90, 0x0f, 0x19, 0x1c, 0x7d, 0x00, 0xc8, 0x43, 0xd6, 0xb5, 0x36, 0xc5, 0x9e,
	0x20, 0xd8, 0x2e, 0x9b, 0x43, 0x67, 0x40, 0x5a, 0x0d, 0x3a, 0xa9, 0x67, 0x03, 0x66, 0xa4, 0xdf,
	0x09, 0xb0, 0xe5, 0x47, 0x78, 0x89, 0xf5, 0x33, 0x7b, 0x6f, 0xbe, 0xd2, 0x35, 0xd5, 0xd2, 0x0d,
	0x55, 0x6b, 0xdf, 0x84, 0xb9, 0x3e, 0x85, 0x29, 0x7b, 0x1d, 0x75, 0xcd, 0x14, 0xd3, 0xe4, 0x1c,
	0xdf, 0xe0, 0x1c, 0x15, 0x8e, 0x6a, 0x32, 0xc1, 0x94, 0x1d, 0x0a, 0xe9, 0x61, 0xd0, 0x31, 0x79,
	0x33, 0x60, 0x93, 0xfd, 0x57, 0x01, 0xee, 0xf9, 0x51, 0x2b, 0xbb, 0x58, 0x69, 0xea, 0xda, 0xcd,
	0xce, 0xf5, 0x93, 0xf0, 0x5c, 0x79, 0x89, 0x07, 0xd3, 0x2c, 0x3c, 0xd5, 0x07, 0xc1, 0xc5, 0xe2,
	0xe8, 0xcf, 0x66, 0xfa, 0x77, 0x82, 0x73, 0xc5, 0xa1, 0x98, 0x75, 0x4c, 0x92, 0xb7, 0x2e, 0x36,
	0xac, 0xab, 0x1b, 0x3a, 0x9f, 0x54, 0xb3, 0x61, 0x61, 0xd3, 0x6a, 0xb0, 0x10, 0x60, 0x3b, 0x7f,
	0x46, 0x9e, 0x56, 0x4d, 0x5b, 0x15, 0xaa, 0x94, 0x24, 0xc1, 0x7a, 0xb4, 0x92, 0x6c, 0x26, 0xdf,
	0xc2, 0x02, 0xbd, 0xae, 0xdf, 0x5c, 0x90, 0xbe, 0xed, 0xd4, 0x25, 0x42, 0x27, 0xfe, 0x6f, 0x04,
	0x58, 0xaa, 0x39, 0x01, 0x6f, 0xb4, 0x35, 0x82, 0x58, 0x63, 0x06, 0xa3, 0x57, 0x3a, 0x5c, 0xd0,
	0x28, 0x80, 0xd8, 0xaf, 0x15, 0x53, 0xf9, 0x17, 0x70, 0xd7, 0xce, 0xdb, 0xe9, 0xa0, 0xb9, 0x7b,
	0xe5, 0x5e, 0x78, 0x6f, 0xa6, 0xd6, 0x72, 0x0c, 0xab, 0x51, 0xe2, 0x59, 0x8e, 0xf0, 0x0c, 0xa6,
	0xe8, 0x3c, 0x4d, 0x51, 0x20, 0xbb, 0x21, 0x26, 0x49, 0x70, 0x30, 0xa5, 0x5f, 0x09, 0xb0, 0xc5,
	0xe7, 0x7b, 0xc3, 0x97, 0xda, 0x9f, 0xc1, 0xfd, 0x24, 0x3d, 0xae, 0x33, 0xcf, 0x13, 0xb8, 0xed,
	0x26, 0x58, 0x23, 0xbd, 0x17, 0xfd, 0x8c, 0xdc, 0xb8, 0x82, 0x8c, 0x99, 0xa2, 0xc1, 0xac, 0x5a,
	0x78, 0xa7, 0xac, 0xfa, 0xcf, 0x72, 0xb0, 0xe0, 0xdf, 0xd8, 0x37, 0xb1, 0x49, 0x78, 0xb9, 0x0e,
	0x70, 0x73, 0x1d, 0x4e, 0xf2, 0x94, 0xe3, 0x24, 0x4f, 0x77, 0x20, 0xa3, 0x74, 0xbb, 0x0d, 0x4d,
	0xb9, 0xc0, 0xe2, 0x34, 0x19, 0x9f, 0x52, 0xba, 0xdd, 0xaa, 0x72, 0x81, 0xd1, 0x1a, 0xe4, 0xec,
	0xa1, 0x4b, 0x6c, 0x98, 0xaa, 0xae, 0x89, 0x33, 0xd4, 0x2f, 0x94, 0x6e, 0xf7, 0x35, 0x85, 0xd8,
	0x9a, 0xda, 0x08, 0xa7, 0x3d, 0xb5, 0xd3, 0x12, 0x67, 0xa9, 0xa6, 0x4a, 0xb7, 0xbb, 0x6b, 0xff,
	0x46, 0x9b, 0x30, 0xe3, 0x30, 0x36, 0xbb, 0x4a, 0x13, 0x8b, 0x73, 0x54, 0x3a, 0xe3, 0x4e, 0x60,
	0xf6, 0x0d, 0x9d, 0xcd, 0xf5, 0x42, 0xd1, 0x7a, 0x67, 0x4a, 0xd3, 0xea, 0x19, 0xd8, 0x10, 0xf3,
	0x04, 0x15, 0xd1, 0xa1, 0x57, 0xbe, 0x11, 0xb4, 0x04, 0x53, 0xba, 0x49, 0xb5, 0x9d, 0x27, 0x48,
	0x93, 0xba, 0x49, 0x94, 0xfd, 0x18, 0x40, 0x37, 0x5d, 0x5d, 0x51, 0x64, 0x65, 0x85, 0xe9, 0x2e,
	0x67, 0x75, 0xd3, 0x99, 0xc6, 0x06, 0x4c, 0x3b, 0x4a, 0xe8, 0x2d, 0xdc, 0x11, 0x17, 0x08, 0xe3,
	0x1c, 0x93, 0x6e, 0x83, 0xd0, 0x6b, 0x80, 0x33, 0x43, 0xb9, 0xc0, 0xdf, 0xe9, 0xc6, 0x1b, 0x53,
	0x5c, 0x24, 0xee, 0xf2, 0x61, 0x64, 0xf5, 0x32, 0xe0, 0x0e, 0xc5, 0x17, 0x2e, 0x21, 0xbb, 0xbc,
	0x7a, 0x9c, 0xd0, 0x03, 0x98, 0xb3, 0x93, 0x99, 0x0e, 0x6e, 0x74, 0x14, 0xad, 0xdd, 0x53, 0xda,
	0x58, 0xbc, 0x45, 0xa4, 0xcf, 0x52, 0xf0, 0x21, 0x83, 0xda, 0xd6, 0x64, 0x88, 0x34, 0x48, 0x8a,
	0xb7, 0xa9, 0x35, 0x29, 0x90, 0x06, 0x50, 0x1f, 0x92, 0xd9, 0x34, 0xd4, 0xae, 0x25, 0x2e, 0xf9,
	0x91, 0x6a, 0x04, 0x86, 0xee, 0xc3, 0x9c, 0x6a, 0x36, 0xbe, 0x53, 0xcf, 0xd4, 0x06, 0xd6, 0x94,
	0xd3, 0x0e, 0x6e, 0x89, 0x22, 0x09, 0x5a, 0x33, 0xaa, 0x79, 0xa2, 0x9e, 0xa9, 0x65, 0x0a, 0x44,
	0x45, 0x58, 0x50, 0xcd, 0x46, 0x13, 0x77, 0x3a, 0xbd, 0x8e, 0x62, 0xb8, 0xb8, 0x77, 0x08, 0xee,
	0xbc, 0x6a, 0xee, 0xb1, 0x11, 0x07, 0x7f, 0x03, 0xa6, 0xcd, 0xa6, 0x81, 0xb1, 0xd6, 0xf8, 0x4e,
	0x6d, 0x59, 0xe7, 0x62, 0x81, 0xa4, 0x81, 0x39, 0x0a, 0x3b, 0xb1, 0x41, 0xb6, 0x7e, 0x0c, 0xe5,
	0x1c, 0xab, 0xed, 0x73, 0x4b, 0x5c, 0x26, 0x38, 0x8c, 0xee, 0x80, 0xc0, 0x6c, 0x3e, 0x4d, 0xc5,
	0x30, 0x54, 0x6c, 0xd0, 0x65, 0x5e, 0xa1, 0xab, 0xc1, 0x60, 0x64, 0xad, 0x17, 0x61, 0xc2, 0x50,
	0x5a, 0xaa, 0x2e, 0xde, 0x25, 0x63, 0xf4, 0x87, 0xed, 0x8d, 0x96, 0x7a, 0x81, 0x1b, 0x6f, 0x75,
	0x0d, 0x8b, 0xab, 0xd4, 0x1b, 0x6d, 0xc0, 0x4f, 0x75, 0x0d, 0xa3, 0x8f, 0x20, 0xd3, 0xed, 0x28,
	0xd6, 0x99, 0x6e, 0x5c, 0x88, 0x6b, 0xeb, 0xc2, 0xc3, 0xd9, 0x9d, 0x65, 0x5e, 0xbd, 0x81, 0xa1,
	0xc8, 0x2e, 0x32, 0xda, 0x81, 0x5b, 0xaa, 0xd9, 0x38, 0x55, 0x9a, 0x6f, 0xda, 0x86, 0xde, 0xd3,
	0x5a, 0xae, 0x21, 0xd6, 0x89, 0x21, 0x16, 0x54, 0x73, 0xd7, 0x1d, 0x73, 0x4c, 0xb1, 0x07, 0xab,
	0xaa, 0xd9, 0x70, 0xf3, 0xd7, 0x0b, 0x37, 0x71, 0x71, 0x89, 0x37, 0x08, 0xf1, 0xb2, 0x6a, 0x3a,
	0x99, 0xaa, 0x97, 0xdc, 0x38, 0x4c, 0x9e, 0xc0, 0xa2, 0x2d, 0xb8, 0xd3, 0xc3, 0x96, 0xae, 0x5b,
	0xe7, 0x2e, 0xa9, 0x44, 0x48, 0x91, 0x6a, 0xee, 0x3a, 0x43, 0x0e, 0xc5, 0x16, 0xcc, 0x2a, 0xad,
	0x4b, 0x6c, 0x58, 0xaa, 0x69, 0xcb, 0x52, 0x5b, 0xe2, 0x26, 0xb1, 0xc2, 0x8c, 0x0f, 0x5a, 0x69,
	0x91, 0x5a, 0x4e, 0x57, 0xbc, 0xc7, 0x6a, 0x39, 0x5d, 0xd4, 0x82, 0xdb, 0xd4, 0xa7, 0xfc, 0x8a,
	0xda, 0x3b, 0x41, 0xdc, 0x22, 0x86, 0x2a, 0x46, 0x1e, 0xe1, 0x45, 0xea, 0x77, 0x9e, 0xee, 0xf6,
	0x66, 0x91, 0x17, 0x0d, 0x0e, 0xb4, 0xf0, 0x15, 0xcc, 0x85, 0x36, 0x02, 0xa7, 0x60, 0xf2, 0x24,
	0x58, 0x30, 0x89, 0xdb, 0xbf, 0xbe, 0x92, 0xc9, 0x6d, 0xe7, 0x41, 0x23, 0x94, 0xc8, 0xfc, 0x76,
	0x11, 0x26, 0x29, 0xa8, 0xaf, 0x7e, 0x95, 0x94, 0x88, 0xf8, 0x8a, 0x5b, 0xe9, 0x70, 0x71, 0x2b,
	0x98, 0x0c, 0x8c, 0x87, 0x6f, 0xd9, 0x3f, 0x48, 0x3d, 0x8a, 0x93, 0x89, 0x4e, 0xf5, 0x67, 0xa2,
	0xa3, 0x8f, 0x1e, 0xdb, 0xb0, 0xe8, 0xc3, 0x52, 0xcd, 0x86, 0xd2, 0xb4, 0xd4, 0x4b, 0x1a, 0x49,
	0x32, 0xf2, 0xbc, 0x8b, 0x5b, 0x31, 0x4b, 0x64, 0x00, 0xbd, 0x82, 0x5b, 0x3e, 0x02, 0x9f, 0xa1,
	0x66, 0x12, 0x67, 0x8b, 0x5c, 0x6e, 0x7b, 0xae, 0xc5, 0x82, 0xec, 0x7c, 0xc6, 0x9b, 0x1d, 0x82,
	0xdd, 0xb1, 0x6b, 0xc5, 0x13, 0x28, 0xf8, 0xd9, 0xb9, 0xb7, 0x6e, 0xca, 0x73, 0x2e, 0x91, 0xe7,
	0x92, 0xc7, 0xd3, 0x47, 0x5b, 0xb2, 0x02, 0x51, 0x36, 0x1f, 0x1b, 0x65, 0xe7, 0xe3, 0xa3, 0x2c,
	0x4a, 0x8a, 0xb2, 0x0b, 0x83, 0x47, 0xd9, 0xc5, 0xc8, 0x28, 0x1b, 0x8e, 0x88, 0x4b, 0xfd, 0x11,
	0xd1, 0x17, 0x88, 0x6f, 0xc5, 0x04, 0xe2, 0xdb, 0xc3, 0x04, 0xe2, 0x4a, 0x20, 0xca, 0x8a, 0x24,
	0xca, 0x3e, 0x8a, 0x3e, 0x7d, 0x86, 0x0c, 0xac, 0x77, 0x06, 0x0b, 0xac, 0x85, 0x41, 0x02, 0xeb,
	0xf2, 0x60, 0x81, 0x75, 0x65, 0x88, 0xc0, 0x7a, 0x77, 0xd0, 0xc0, 0xba, 0x3a, 0x40, 0x60, 0x5d,
	0x1b, 0x20, 0xb0, 0xae, 0xc7, 0x04, 0xd6, 0x8d, 0xc8, 0xc0, 0x2a, 0xc5, 0x04, 0xd6, 0xcd, 0x91,
	0x04, 0xd6, 0x7b, 0xd7, 0x09, 0xac, 0x5b, 0xef, 0x1e, 0x58, 0xef, 0x0f, 0x11, 0x58, 0x1f, 0x44,
	0x07, 0xd6, 0x87, 0x6e, 0x60, 0xe5, 0x56, 0xc7, 0x1e, 0x0d, 0x53, 0x1d, 0x7b, 0x3c, 0x54, 0x75,
	0xec, 0xbd, 0x88, 0xea, 0x98, 0xb3, 0x19, 0x08, 0x3a, 0xf3, 0xf2, 0xf7, 0xbd, 0xcd, 0x40, 0x0b,
	0x65, 0x7e, 0x3f, 0x27, 0x88, 0x4d, 0xd5, 0xba, 0x12, 0x3f, 0xf0, 0xfc, 0xdc, 0x06, 0xee, 0xa9,
	0xd6, 0x55, 0x80, 0x9b, 0x69, 0x19, 0x18, 0x5b, 0x62, 0x31, 0xc8, 0xad, 0x46, 0xa0, 0x31, 0x89,
	0xc5, 0xf6, 0xe8, 0x12, 0x0b, 0xd4, 0x81, 0x2d, 0xf5, 0x94, 0x14, 0x88, 0xfc, 0x62, 0x58, 0x29,
	0xc9, 0x1f, 0x12, 0x9e, 0x24, 0x1e, 0xdf, 0x1b, 0x8c, 0x91, 0xbf, 0xd2, 0x44, 0xd8, 0x78, 0x11,
	0xe2, 0xe7, 0x50, 0x88, 0x96, 0x26, 0x3e, 0x1d, 0xb0, 0xd2, 0x25, 0x46, 0x09, 0x42, 0x1a, 0xdc,
	0x6f, 0xb3, 0xca, 0x5e, 0xc2, 0x74, 0x76, 0x12, 0xa7, 0x23, 0xb5, 0x39, 0x35, 0xc2, 0xd0, 0x7c,
	0x14, 0x58, 0x8e, 0x91, 0x27, 0x3e, 0x1b, 0xb4, 0x4c, 0x79, 0x27, 0x52, 0xd6, 0xff, 0x67, 0xe6,
	0xf7, 0x13, 0x58, 0xe4, 0x79, 0x0a, 0x9a, 0x81, 0xec, 0x71, 0x75, 0xbf, 0xfc, 0xa2, 0x52, 0x2d,
	0xef, 0xe7, 0xc7, 0x50, 0x16, 0x26, 0xe4, 0xa3, 0xd7, 0x65, 0x39, 0x2f, 0x20, 0x80, 0xc9, 0x97,
	0x95, 0x57, 0xbb, 0xa5, 0xc3, 0x7c, 0x4a, 0x3a, 0x82, 0x99, 0xc0, 0xb2, 0x20, 0x04, 0xe3, 0xbd,
	0x9e, 0x9b, 0x27, 0x92, 0xbf, 0xed, 0x23, 0xf1, 0x42, 0xf9, 0x03, 0xdd, 0x60, 0x8f, 0x9c, 0xf4,
	0x07, 0x81, 0xaa, 0x9a, 0x6e, 0xb0, 0xec, 0x90, 0xfe, 0x90, 0x0c, 0x98, 0x0d, 0x9a, 0xa5, 0x2f,
	0xef, 0x2c, 0x40, 0xc6, 0xdd, 0xdc, 0x29, 0xb2, 0x5d, 0xdd, 0xdf, 0x68, 0x05, 0xb2, 0xde, 0x5e,
	0x4e, 0x93, 0x41, 0x0f, 0x80, 0x6e, 0xc3, 0xa4, 0x7d, 0x1a, 0xf7, 0x4c, 0x92, 0x71, 0x4e, 0xc8,
	0xec, 0x97, 0xf4, 0x02, 0xa6, 0xfd, 0x5f, 0xae, 0xa0, 0x0f, 0x61, 0x92, 0xd8, 0xc7, 0x29, 0x6a,
	0xac, 0xc6, 0x7f, 0xea, 0x22, 0x33, 0x6c, 0xe9, 0x5f, 0x04, 0xc8, 0xf9, 0xe0, 0xe8, 0x73, 0xc8,
	0x51, 0x67, 0x6b, 0x58, 0x57, 0x5d, 0xfa, 0xb4, 0x35, 0xcb, 0x0d, 0xc6, 0x3e, 0x22, 0x76, 0xfd,
	0xad, 0x5f, 0x75, 0xb1, 0xcc, 0x32, 0x59, 0xfb, 0xef, 0x61, 0xdf, 0x41, 0xa5, 0xc7, 0x00, 0x1e,
	0x27, 0x34, 0x05, 0xe9, 0x5a, 0xb9, 0x9e, 0x1f, 0xb3, 0xff, 0x28, 0xed, 0xef, 0xe7, 0xd3, 0xf6,
	0x22, 0xca, 0xe5, 0x57, 0x47, 0xaf, 0xcb, 0xf9, 0x71, 0xe9, 0xef, 0xd3, 0x30, 0x41, 0x88, 0xd1,
	0x16, 0xcc, 0x9c, 0xea, 0x7a, 0x07, 0x2b, 0x5a, 0x83, 0x4a, 0xb3, 0x75, 0xce, 0x1c, 0x8c, 0xc9,
	0xd3, 0x0c, 0xec, 0xa2, 0xa9, 0x9a, 0x85, 0xdb, 0xd8, 0x68, 0x78, 0x4a, 0xa5, 0x6d, 0x34, 0x06,
	0xa6, 0x68, 0x9b, 0x30, 0xdd, 0xd2, 0x7b, 0xa7, 0x1d, 0xcc, 0xb0, 0xc8, 0x82, 0x1c, 0x8c, 0xc9,
	0x39, 0x0a, 0x75, 0x91, 0x4c, 0x8b, 0x6c, 0x18, 0x8a, 0x44, 0x2e, 0x03, 0x36, 0x12, 0x85, 0x52,
	0xa4, 0x3a, 0x20, 0x86, 0xa4, 0x18, 0x86, 0x72, 0xc5, 0x50, 0xe9, 0xc5, 0xe0, 0x5e, 0x94, 0x29,
	0x8a, 0x35, 0x42, 0x52, 0xb2, 0x29, 0x0e, 0xc6, 0xe4, 0xbc, 0xe9, 0xfd, 0xa4, 0x5c, 0x9f, 0x03,
	0x68, 0xbd, 0x4e, 0x87, 0x71, 0x9b, 0x22, 0xcb, 0xb3, 0xc4, 0xe1, 0x56, 0xed, 0x75, 0x3a, 0x07,
	0x63, 0x72, 0xd6, 0x46, 0xa6, 0x94, 0x65, 0x98, 0x73, 0xbf, 0x0d, 0x64, 0xe4, 0x99, 0xa4, 0xb3,
	0xe4, 0x60, 0x4c, 0x9e, 0x75, 0x89, 0x08, 0x9b, 0xc2, 0x16, 0xe4, 0x7c, 0x3a, 0xda, 0xfe, 0xe9,
	0xf3, 0xbb, 0xac, 0xe3, 0x57, 0xbb, 0xd3, 0x00, 0xe4, 0x2f, 0xe2, 0x46, 0xd2, 0x7f, 0x09, 0x30,
	0x17, 0x2a, 0xa9, 0x85, 0xae, 0x5b, 0x42, 0xf8, 0xba, 0x45, 0xb7, 0x50, 0xca, 0xdd, 0x42, 0x2b,
	0x90, 0x75, 0x6b, 0x70, 0x4e, 0x95, 0xd8, 0x05, 0xd8, 0x1b, 0xb3, 0xa3, 0x9c, 0xe2, 0x0e, 0xbb,
	0x97, 0xd1, 0x1f, 0x24, 0x80, 0x3b, 0x28, 0xd4, 0x9f, 0x27, 0x58, 0x00, 0x77, 0xa0, 0xc4, 0xd3,
	0x10, 0x8c, 0x77, 0x15, 0xeb, 0x9c, 0xdc, 0xbc, 0xb2, 0x32, 0xf9, 0x3b, 0x74, 0x9d, 0x9b, 0x1a,
	0xe2, 0x3a, 0x27, 0x7d, 0x09, 0x53, 0x4e, 0x66, 0xeb, 0x9e, 0x22, 0x02, 0xf7, 0x14, 0x49, 0xf9,
	0x4e, 0x11, 0xfb, 0x8c, 0x30, 0xf0, 0xa5, 0x4a, 0xd2, 0x67, 0x7a, 0xbc, 0xb8, 0xbf, 0x25, 0x03,
	0x96, 0xd9, 0x2b, 0xed, 0x95, 0xa6, 0x5c, 0xa8, 0xcd, 0x1a, 0x6e, 0xdb, 0xb7, 0xb5, 0x11, 0x55,
	0x1e, 0x17, 0x61, 0xc2, 0x52, 0xad, 0x0e, 0x66, 0xd6, 0xa6, 0x3f, 0xa4, 0xaf, 0x61, 0x85, 0x2f,
	0x93, 0x95, 0x52, 0x3f, 0x85, 0x29, 0x93, 0x82, 0x98, 0x3c, 0x5e, 0xb8, 0x08, 0xd1, 0x3a, 0x14,
	0xd2, 0x1f, 0xd1, 0xc7, 0xf5, 0xc0, 0xe8, 0xee, 0xd5, 0x28, 0x0b, 0xf7, 0x4c, 0x92, 0xaf, 0x70,
	0xcf, 0x20, 0x95, 0x96, 0xf4, 0x0d, 0xf9, 0x5a, 0x8c, 0x27, 0x7d, 0x14, 0x73, 0xfb, 0x6b, 0xc1,
	0x7d, 0xf8, 0x09, 0x60, 0xd4, 0x6d, 0xb3, 0xde, 0xc8, 0x04, 0xbd, 0x15, 0x4d, 0xfb, 0x57, 0x74,
	0x13, 0x36, 0x62, 0xf4, 0x62, 0xd5, 0x93, 0x7f, 0xf7, 0x9e, 0x4c, 0x03, 0x58, 0x5f, 0x18, 0xb8,
	0xa5, 0x36, 0xc9, 0x57, 0x92, 0x37, 0x32, 0x85, 0x32, 0x40, 0xd7, 0x15, 0x49, 0xe6, 0x91, 0xdb,
	0xd9, 0xe2, 0x7e, 0x2b, 0xc4, 0x90, 0x4a, 0xed, 0xb6, 0x81, 0xdb, 0x76, 0x6c, 0xf3, 0x11, 0xfa,
	0x9e, 0x4f, 0x23, 0x67, 0xc3, 0x26, 0xfe, 0x4b, 0x01, 0xd6, 0x4b, 0x46, 0xf3, 0x5c, 0xbd, 0xc4,
	0x3f, 0x94, 0x5f, 0x6e, 0xc2, 0x46, 0x8c, 0x06, 0x4c, 0xcf, 0xaf, 0xa1, 0x40, 0x5e, 0x65, 0x02,
	0x18, 0x23, 0x5a, 0x14, 0xe9, 0x1b, 0x58, 0xe6, 0x32, 0x67, 0xfb, 0xe2, 0x33, 0xc8, 0x30, 0x6d,
	0x9d, 0x3c, 0x63, 0x80, 0x8d, 0xe1, 0x92, 0x48, 0xff, 0x99, 0x82, 0xd9, 0xe0, 0xe0, 0xb0, 0x5f,
	0x98, 0x05, 0x8f, 0xe5, 0xf4, 0xbb, 0x57, 0xd9, 0xc6, 0x87, 0xa9, 0xb2, 0xb9, 0xdb, 0x69, 0xc2,
	0xb7, 0x9d, 0xd0, 0x1a, 0xe4, 0x54, 0xb3, 0xa1, 0xd0, 0x05, 0x6b, 0x91, 0xe8, 0x91, 0x91, 0x41,
	0x35, 0xd9, 0x12, 0xd2, 0x1b, 0x3c, 0x5b, 0x6d, 0x53, 0x7d, 0x4b, 0xa3, 0x75, 0x5a, 0xce, 0x31,
	0x58, 0x4d, 0x7d, 0x8b, 0x43, 0x5e, 0x9e, 0x79, 0x57, 0x2f, 0xff, 0x8b, 0x14, 0xcc, 0xd1, 0xa8,
	0xec, 0x22, 0xa2, 0x1f, 0x43, 0x4a, 0xef, 0xb2, 0x04, 0x8e, 0xc7, 0x32, 0x84, 0x5f, 0x3c, 0xea,
	0xca, 0x29, 0xbd, 0x1b, 0x8c, 0x99, 0xa4, 0x60, 0x90, 0x0a, 0xc5, 0x4c, 0xa7, 0x64, 0xe0, 0x25,
	0x48, 0x59, 0x27, 0x83, 0xfb, 0x5e, 0x80, 0xd4, 0x51, 0x17, 0x4d, 0x43, 0xa6, 0x52, 0x6b, 0x1c,
	0x57, 0x69, 0xfe, 0x06, 0x30, 0x59, 0xa9, 0x35, 0xec, 0xbf, 0x05, 0x36, 0x52, 0xfe, 0xf2, 0xd8,
	0xce, 0xc4, 0x51, 0x1e, 0xa6, 0x2b, 0xb5, 0x46, 0xf5, 0xa8, 0xce, 0x20, 0x69, 0x34, 0x07, 0xb9,
	0x5a, 0xbd, 0x24, 0xd7, 0x6b, 0x8d, 0x93, 0x4a, 0xfd, 0x20, 0x3f, 0x6e, 0xa7, 0xf4, 0xe5, 0xea,
	0x3e, 0xfb, 0x39, 0x61, 0xd3, 0xef, 0x1d, 0x55, 0xeb, 0xa5, 0x4a, 0xb5, 0x96, 0x9f, 0x44, 0x8b,
	0x90, 0xdf, 0x3f, 0x2a, 0x53, 0x0e, 0x0c, 0x9c, 0x9f, 0x92, 0xfe, 0x59, 0x80, 0x99, 0x5d, 0x5d,
	0xef, 0x78, 0xa6, 0x78, 0xe6, 0x33, 0xc5, 0x26, 0xc7, 0x14, 0x01, 0xec, 0xeb, 0x18, 0x22, 0xe3,
	0x18, 0xe2, 0xfd, 0x61, 0xec, 0x20, 0xfd, 0x26, 0x05, 0x73, 0xd5, 0xde, 0xc5, 0x29, 0x36, 0x06,
	0x5f, 0xbe, 0x10, 0xfe, 0x75, 0xb4, 0x4e, 0x33, 0xad, 0xdd, 0x64, 0x6e, 0x87, 0x6c, 0x8f, 0x34,
	0x4b, 0xe6, 0x76, 0xa4, 0xde, 0x35, 0x57, 0x75, 0x01, 0xe6, 0x2a, 0xb5, 0xc6, 0x4b, 0xb9, 0x5c,
	0xaa, 0x97, 0xe5, 0x46, 0xfd, 0xa0, 0x54, 0xcd, 0x8f, 0x33, 0xb4, 0xc3, 0x72, 0xad, 0x46, 0x21,
	0x13, 0x68, 0x16, 0xa0, 0x52, 0x6b, 0xec, 0x96, 0xeb, 0x27, 0xe5, 0x72, 0x35, 0x3f, 0x29, 0xfd,
	0x77, 0x0a, 0x66, 0xf6, 0xc9, 0x77, 0xec, 0x83, 0x2e, 0x64, 0x00, 0x7b, 0x48, 0x93, 0x3c, 0xf1,
	0x9b, 0x24, 0xfe, 0x68, 0x60, 0xe6, 0xda, 0x09, 0x98, 0x2b, 0x9e, 0xc4, 0x31, 0xe5, 0x6f, 0x85,
	0x1f, 0xc4, 0x96, 0x8c, 0x6d, 0xe9, 0x45, 0xbd, 0x2c, 0xe7, 0xa7, 0xec, 0x5d, 0x45, 0x46, 0x5f,
	0x1c, 0xc9, 0xe5, 0x7c, 0xc6, 0xbe, 0x28, 0x57, 0x6a, 0x8d, 0xa3, 0x6a, 0x3e, 0x2b, 0xfd, 0x47,
	0x0a, 0xe6, 0x9d, 0xcb, 0xac, 0x67, 0xf7, 0x8f, 0x7c, 0x76, 0x7f, 0x10, 0x53, 0x15, 0x78, 0x57,
	0xdb, 0xef, 0x05, 0x6d, 0xff, 0xc1, 0x40, 0x22, 0xdc, 0xaf, 0xbd, 0x28, 0x6d, 0xe1, 0x1b, 0xc8,
	0x38, 0xa0, 0xe0, 0xa5, 0x5a, 0x08, 0x5f, 0xaa, 0xe3, 0xae, 0xe3, 0xde, 0x85, 0x3b, 0x1d, 0xb8,
	0x70, 0x7f, 0x96, 0xb0, 0x6e, 0xd4, 0xe0, 0x47, 0xc7, 0xf5, 0x5a, 0x65, 0xbf, 0x9c, 0x4f, 0x31,
	0x13, 0xdb, 0xc7, 0x56, 0xa5, 0x9a, 0x4f, 0x4b, 0x7f, 0x9e, 0x86, 0x3c, 0xbb, 0x15, 0x78, 0x66,
	0xfd, 0xd0, 0x67, 0xd6, 0xfb, 0xd1, 0xa5, 0x8f, 0x91, 0x79, 0x74, 0x52, 0x71, 0x85, 0xe3, 0xd1,
	0xd1, 0x24, 0x8e, 0x47, 0xff, 0xd3, 0x0f, 0xe4, 0xd1, 0x2b, 0x20, 0x86, 0xc8, 0x1a, 0x47, 0x32,
	0x63, 0x3a, 0x85, 0xee, 0xc0, 0x2d, 0x3f, 0xbd, 0x37, 0x94, 0x91, 0x7e, 0x27, 0x00, 0xea, 0x8f,
	0xa7, 0xe8, 0x15, 0x64, 0x9b, 0xba, 0xd6, 0x52, 0x6d, 0xff, 0x61, 0x6b, 0xb2, 0x3d, 0x50, 0x24,
	0x2e, 0xee, 0x39, 0x64, 0xb2, 0xc7, 0x01, 0xfd, 0x24, 0x10, 0xd9, 0x69, 0xc3, 0xc0, 0x4a, 0x1c,
	0xbf, 0x40, 0x40, 0xbf, 0x0b, 0x59, 0x97, 0x2b, 0x29, 0x80, 0x54, 0xbf, 0x62, 0x95, 0x90, 0xc3,
	0xc3, 0xbc, 0x20, 0xfd, 0x6f, 0x1a, 0xb2, 0x9e, 0x1b, 0x1d, 0x01, 0xab, 0x13, 0x34, 0x5c, 0x0e,
	0x2c, 0xef, 0x93, 0x92, 0xe3, 0xfe, 0xc1, 0x98, 0x3c, 0x67, 0x86, 0x52, 0x87, 0x0a, 0xcc, 0x9e,
	0xea, 0x7a, 0xc7, 0xc7, 0x2e, 0x15, 0xd9, 0x44, 0x10, 0x88, 0x9d, 0x07, 0x63, 0x32, 0x29, 0xc6,
	0x04, 0x74, 0xd3, 0x48, 0xa4, 0xf2, 0x31, 0x4b, 0x47, 0xea, 0x16, 0x0a, 0x6a, 0xb6, 0x6e, 0x5a,
	0x28, 0x2e, 0x56, 0x60, 0x96, 0x94, 0xa7, 0x3c, 0x76, 0xe3, 0x91, 0xba, 0x05, 0xc2, 0x81, 0xad,
	0x5b, 0x2b, 0x10, 0x4d, 0x64, 0x98, 0x67, 0xef, 0x55, 0x3e, 0x6e, 0xb4, 0x40, 0xb3, 0x39, 0xc0,
	0x6e, 0x3c, 0x18, 0x93, 0xf3, 0x97, 0xe1, 0x2d, 0x7d, 0x0c, 0xc8, 0x2d, 0xac, 0x7a, 0x4c, 0x27,
	0x23, 0xab, 0x3e, 0x7d, 0xc7, 0xda, 0xc1, 0x98, 0x3c, 0xdf, 0x0e, 0x03, 0x77, 0xa7, 0xd8, 0x56,
	0x7e, 0x5c, 0x84, 0x8c, 0xf3, 0xa8, 0x12, 0x2e, 0x77, 0x02, 0x4c, 0xbe, 0x3a, 0xda, 0xad, 0x1c,
	0x96, 0xf3, 0x82, 0xed, 0x29, 0x27, 0xe5, 0xdd, 0x7c, 0xea, 0x71, 0x1e, 0xc6, 0xab, 0xbd, 0x4e,
	0x07, 0x65, 0x60, 0xbc, 0x7a, 0x7c, 0x78, 0x98, 0x1f, 0xdb, 0xf9, 0x87, 0xbb, 0x90, 0x29, 0x31,
	0x0d, 0xd0, 0x57, 0x00, 0x5e, 0x0b, 0x09, 0xe2, 0x2b, 0x18, 0x6a, 0x14, 0x2d, 0x6c, 0x25, 0x60,
	0xb1, 0xbb, 0xc2, 0x29, 0xcc, 0x04, 0xda, 0x29, 0x11, 0x2f, 0x70, 0xf0, 0xfa, 0x38, 0x0b, 0x0f,
	0x93, 0x11, 0x3d, 0x19, 0x81, 0x6e, 0x47, 0xae, 0x0c, 0x5e, 0x17, 0x26, 0x57, 0x06, 0xb7, 0x71,
	0xd2, 0x96, 0x11, 0x68, 0xa7, 0xe3, 0xca, 0xe0, 0xb5, 0x2f, 0x72, 0x65, 0x70, 0x7b, 0x0a, 0xd1,
	0x2f, 0x05, 0x58, 0x8a, 0xe8, 0xd9, 0x43, 0x4f, 0x93, 0xb8, 0xf4, 0x7d, 0x17, 0x58, 0xd8, 0x19,
	0x86, 0x84, 0xa9, 0xf0, 0x1d, 0x2c, 0xf2, 0xfa, 0xf2, 0x50, 0x31, 0x76, 0xb5, 0xfb, 0x7a, 0x07,
	0x0b, 0xdb, 0x03, 0xe3, 0x33, 0xc1, 0xbf, 0x20, 0x9f, 0x01, 0x72, 0x5a, 0xe7, 0xd0, 0x93, 0x04,
	0x56, 0xfd, 0x13, 0x7f, 0x3a, 0x04, 0x05, 0x13, 0xaf, 0xc1, 0x7c, 0x5f, 0x97, 0x1b, 0x7a, 0x8f,
	0xc3, 0x27, 0xaa, 0x0f, 0xaf, 0xf0, 0xfe, 0x60, 0xc8, 0x4c, 0xde, 0xaf, 0x84, 0xfe, 0xb6, 0x3a,
	0xb7, 0xd9, 0x0c, 0x3d, 0x1b, 0x80, 0x57, 0xb8, 0x5d, 0xae, 0xf0, 0xa3, 0xe1, 0x88, 0x98, 0x22,
	0x6f, 0x48, 0x73, 0x50, 0xb0, 0xe9, 0xe8, 0x71, 0xac, 0xfd, 0x02, 0x1f, 0x69, 0x16, 0xde, 0x1b,
	0x08, 0x97, 0x09, 0x7b, 0x0d, 0x59, 0xf7, 0x93, 0x4c, 0xb4, 0xc9, 0xa7, 0x0c, 0x7c, 0x3e, 0x57,
	0xb8, 0x17, 0x8f, 0x14, 0xf0, 0xda, 0xbe, 0x26, 0x9d, 0x28, 0xaf, 0x8d, 0xea, 0x28, 0x8a, 0xf2,
	0xda, 0xe8, 0xee, 0x9f, 0x06, 0x4c, 0xfb, 0xfb, 0x66, 0xd0, 0xfd, 0xc8, 0x33, 0x2b, 0x38, 0xad,
	0x07, 0x89, 0x78, 0x9e, 0x00, 0xff, 0xd7, 0x4d, 0x5c, 0x01, 0x9c, 0xcf, 0x0e, 0x0b, 0x0f, 0x12,
	0xf1, 0x98, 0x80, 0xb7, 0x4e, 0x83, 0x73, 0xa8, 0x27, 0x06, 0x6d, 0x27, 0x70, 0xe8, 0x33, 0xde,
	0x93, 0xc1, 0x09, 0x98, 0xec, 0xbf, 0x09, 0x7d, 0xc0, 0xcf, 0x69, 0x74, 0x41, 0x1f, 0x27, 0x70,
	0x8d, 0x6e, 0xd1, 0x29, 0x7c, 0xf2, 0x2e, 0xa4, 0x9e, 0x47, 0xf1, 0x5a, 0x4a, 0xb8, 0x1e, 0x15,
	0xd3, 0x7f, 0x53, 0xd8, 0x1e, 0x18, 0x9f, 0x09, 0xfe, 0x2b, 0xb7, 0xaf, 0x3c, 0xaa, 0xd3, 0x03,
	0x3d, 0x4f, 0xe0, 0x19, 0xd9, 0xde, 0x52, 0xf8, 0xf8, 0x1d, 0x28, 0x99, 0x5e, 0xbf, 0x16, 0x82,
	0xcd, 0x53, 0x7d, 0x6d, 0x19, 0xe8, 0xa3, 0x04, 0xe6, 0x51, 0x8d, 0x28, 0x85, 0xe7, 0xc3, 0x13,
	0x32, 0xa5, 0xfe, 0x44, 0x00, 0x31, 0xaa, 0xb9, 0x02, 0xed, 0x24, 0xb0, 0xe5, 0xb4, 0x8b, 0x14,
	0x9e, 0x0d, 0x45, 0xe3, 0x85, 0x2e, 0xfe, 0x07, 0xf2, 0xdc, 0xd0, 0x15, 0xdb, 0xaa, 0xc0, 0x0d,
	0x5d, 0x09, 0xdd, 0x05, 0xb6, 0xc7, 0xc4, 0x7f, 0xa0, 0xcf, 0xf5, 0x98, 0x81, 0x7a, 0x0b, 0xb8,
	0x1e, 0x33, 0x60, 0x37, 0xc0, 0x1b, 0xc8, 0x87, 0x5b, 0x36, 0xb8, 0x91, 0x25, 0xa2, 0xdb, 0x84,
	0x1b, 0x59, 0xa2, 0x7a, 0x40, 0xec, 0x73, 0xd2, 0xdf, 0xce, 0xc2, 0x3d, 0x27, 0x39, 0x2d, 0x36,
	0x85, 0x07, 0x89, 0x78, 0x4c, 0xc0, 0x39, 0xcc, 0x85, 0xba, 0x09, 0xd0, 0xa3, 0xb8, 0x68, 0x11,
	0x8c, 0x92, 0x8f, 0x07, 0x41, 0xf5, 0x8e, 0x1e, 0xde, 0x8b, 0x1b, 0xf7, 0xe8, 0x89, 0x79, 0x0e,
	0xe4, 0x1e, 0x3d, 0xb1, 0x4f, 0x79, 0x6f, 0xe1, 0x16, 0xf7, 0x3d, 0x0c, 0x45, 0x85, 0xc5, 0xa8,
	0xf7, 0x91, 0xc2, 0x93, 0xc1, 0x09, 0x7c, 0xf9, 0x50, 0xe4, 0xab, 0x14, 0x8a, 0xd9, 0x96, 0x91,
	0x6f, 0x6b, 0xdc, 0x7c, 0x28, 0xf1, 0xe1, 0xcb, 0x7f, 0xfe, 0x46, 0x3c, 0x15, 0xc5, 0x9d, 0xbf,
	0xf1, 0x6f, 0x65, 0x71, 0xe7, 0x6f, 0xc2, 0xbb, 0x14, 0x31, 0x50, 0xe4, 0xab, 0x10, 0xd7, 0x40,
	0x49, 0xaf, 0x58, 0x5c, 0x03, 0x25, 0x3e, 0x3c, 0x21, 0x0b, 0x16, 0x38, 0x6f, 0x43, 0xe8, 0x83,
	0xa8, 0x83, 0x82, 0xfb, 0x40, 0x55, 0x28, 0x0e, 0x8a, 0x4e, 0xa5, 0xee, 0xde, 0xfe, 0xe9, 0xa2,
	0xef, 0x3f, 0x22, 0x7d, 0xea, 0xfc, 0x7d, 0x3a, 0x49, 0x8a, 0xac, 0xcf, 0xfe, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0x55, 0xa2, 0x35, 0x3c, 0x30, 0x49, 0x00, 0x00,
}
