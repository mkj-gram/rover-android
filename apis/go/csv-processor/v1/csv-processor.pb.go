// Code generated by protoc-gen-go.
// source: csv-processor/v1/csv-processor.proto
// DO NOT EDIT!

/*
Package csv_processor is a generated protocol buffer package.

It is generated from these files:
	csv-processor/v1/csv-processor.proto

It has these top-level messages:
	GCSObject
	LoadJob
	SegmentLoadJobConfig
	GetLoadJobRequest
	GetLoadJobReply
	CreateLoadJobRequest
	CreateLoadJobReply
*/
package csv_processor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/roverplatform/rover/go/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobType int32

const (
	JobType_SEGMENT JobType = 0
)

var JobType_name = map[int32]string{
	0: "SEGMENT",
}
var JobType_value = map[string]int32{
	"SEGMENT": 0,
}

func (x JobType) String() string {
	return proto.EnumName(JobType_name, int32(x))
}
func (JobType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type JobStatus int32

const (
	JobStatus_UNKNOWN    JobStatus = 0
	JobStatus_ENQUEUED   JobStatus = 1
	JobStatus_PROCESSING JobStatus = 2
	JobStatus_FAILED     JobStatus = 3
	JobStatus_COMPLETED  JobStatus = 4
)

var JobStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "ENQUEUED",
	2: "PROCESSING",
	3: "FAILED",
	4: "COMPLETED",
}
var JobStatus_value = map[string]int32{
	"UNKNOWN":    0,
	"ENQUEUED":   1,
	"PROCESSING": 2,
	"FAILED":     3,
	"COMPLETED":  4,
}

func (x JobStatus) String() string {
	return proto.EnumName(JobStatus_name, int32(x))
}
func (JobStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GCSObject struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Bucket    string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	FileId    string `protobuf:"bytes,3,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
}

func (m *GCSObject) Reset()                    { *m = GCSObject{} }
func (m *GCSObject) String() string            { return proto.CompactTextString(m) }
func (*GCSObject) ProtoMessage()               {}
func (*GCSObject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GCSObject) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GCSObject) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GCSObject) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

type LoadJob struct {
	Id        int32                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AccountId int32                      `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Type      JobType                    `protobuf:"varint,3,opt,name=type,enum=rover.csv_processor.v1.JobType" json:"type,omitempty"`
	Status    JobStatus                  `protobuf:"varint,4,opt,name=status,enum=rover.csv_processor.v1.JobStatus" json:"status,omitempty"`
	Progress  int32                      `protobuf:"varint,5,opt,name=progress" json:"progress,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Optional
	FailedReason string `protobuf:"bytes,7,opt,name=failed_reason,json=failedReason" json:"failed_reason,omitempty"`
}

func (m *LoadJob) Reset()                    { *m = LoadJob{} }
func (m *LoadJob) String() string            { return proto.CompactTextString(m) }
func (*LoadJob) ProtoMessage()               {}
func (*LoadJob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoadJob) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LoadJob) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *LoadJob) GetType() JobType {
	if m != nil {
		return m.Type
	}
	return JobType_SEGMENT
}

func (m *LoadJob) GetStatus() JobStatus {
	if m != nil {
		return m.Status
	}
	return JobStatus_UNKNOWN
}

func (m *LoadJob) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *LoadJob) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *LoadJob) GetFailedReason() string {
	if m != nil {
		return m.FailedReason
	}
	return ""
}

type SegmentLoadJobConfig struct {
	AccountId int32      `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentId string     `protobuf:"bytes,2,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
	Csv       *GCSObject `protobuf:"bytes,3,opt,name=csv" json:"csv,omitempty"`
}

func (m *SegmentLoadJobConfig) Reset()                    { *m = SegmentLoadJobConfig{} }
func (m *SegmentLoadJobConfig) String() string            { return proto.CompactTextString(m) }
func (*SegmentLoadJobConfig) ProtoMessage()               {}
func (*SegmentLoadJobConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SegmentLoadJobConfig) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *SegmentLoadJobConfig) GetSegmentId() string {
	if m != nil {
		return m.SegmentId
	}
	return ""
}

func (m *SegmentLoadJobConfig) GetCsv() *GCSObject {
	if m != nil {
		return m.Csv
	}
	return nil
}

type GetLoadJobRequest struct {
	LoadJobId int32 `protobuf:"varint,1,opt,name=load_job_id,json=loadJobId" json:"load_job_id,omitempty"`
}

func (m *GetLoadJobRequest) Reset()                    { *m = GetLoadJobRequest{} }
func (m *GetLoadJobRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLoadJobRequest) ProtoMessage()               {}
func (*GetLoadJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetLoadJobRequest) GetLoadJobId() int32 {
	if m != nil {
		return m.LoadJobId
	}
	return 0
}

type GetLoadJobReply struct {
	Job *LoadJob `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
}

func (m *GetLoadJobReply) Reset()                    { *m = GetLoadJobReply{} }
func (m *GetLoadJobReply) String() string            { return proto.CompactTextString(m) }
func (*GetLoadJobReply) ProtoMessage()               {}
func (*GetLoadJobReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetLoadJobReply) GetJob() *LoadJob {
	if m != nil {
		return m.Job
	}
	return nil
}

type CreateLoadJobRequest struct {
	Type JobType `protobuf:"varint,1,opt,name=type,enum=rover.csv_processor.v1.JobType" json:"type,omitempty"`
	// Types that are valid to be assigned to JobConfig:
	//	*CreateLoadJobRequest_SegmentLoadJobConfig
	JobConfig isCreateLoadJobRequest_JobConfig `protobuf_oneof:"job_config"`
}

func (m *CreateLoadJobRequest) Reset()                    { *m = CreateLoadJobRequest{} }
func (m *CreateLoadJobRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateLoadJobRequest) ProtoMessage()               {}
func (*CreateLoadJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type isCreateLoadJobRequest_JobConfig interface {
	isCreateLoadJobRequest_JobConfig()
}

type CreateLoadJobRequest_SegmentLoadJobConfig struct {
	SegmentLoadJobConfig *SegmentLoadJobConfig `protobuf:"bytes,2,opt,name=segment_load_job_config,json=segmentLoadJobConfig,oneof"`
}

func (*CreateLoadJobRequest_SegmentLoadJobConfig) isCreateLoadJobRequest_JobConfig() {}

func (m *CreateLoadJobRequest) GetJobConfig() isCreateLoadJobRequest_JobConfig {
	if m != nil {
		return m.JobConfig
	}
	return nil
}

func (m *CreateLoadJobRequest) GetType() JobType {
	if m != nil {
		return m.Type
	}
	return JobType_SEGMENT
}

func (m *CreateLoadJobRequest) GetSegmentLoadJobConfig() *SegmentLoadJobConfig {
	if x, ok := m.GetJobConfig().(*CreateLoadJobRequest_SegmentLoadJobConfig); ok {
		return x.SegmentLoadJobConfig
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateLoadJobRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateLoadJobRequest_OneofMarshaler, _CreateLoadJobRequest_OneofUnmarshaler, _CreateLoadJobRequest_OneofSizer, []interface{}{
		(*CreateLoadJobRequest_SegmentLoadJobConfig)(nil),
	}
}

func _CreateLoadJobRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateLoadJobRequest)
	// job_config
	switch x := m.JobConfig.(type) {
	case *CreateLoadJobRequest_SegmentLoadJobConfig:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SegmentLoadJobConfig); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateLoadJobRequest.JobConfig has unexpected type %T", x)
	}
	return nil
}

func _CreateLoadJobRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateLoadJobRequest)
	switch tag {
	case 2: // job_config.segment_load_job_config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentLoadJobConfig)
		err := b.DecodeMessage(msg)
		m.JobConfig = &CreateLoadJobRequest_SegmentLoadJobConfig{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateLoadJobRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateLoadJobRequest)
	// job_config
	switch x := m.JobConfig.(type) {
	case *CreateLoadJobRequest_SegmentLoadJobConfig:
		s := proto.Size(x.SegmentLoadJobConfig)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateLoadJobReply struct {
	Job *LoadJob `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
}

func (m *CreateLoadJobReply) Reset()                    { *m = CreateLoadJobReply{} }
func (m *CreateLoadJobReply) String() string            { return proto.CompactTextString(m) }
func (*CreateLoadJobReply) ProtoMessage()               {}
func (*CreateLoadJobReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateLoadJobReply) GetJob() *LoadJob {
	if m != nil {
		return m.Job
	}
	return nil
}

func init() {
	proto.RegisterType((*GCSObject)(nil), "rover.csv_processor.v1.GCSObject")
	proto.RegisterType((*LoadJob)(nil), "rover.csv_processor.v1.LoadJob")
	proto.RegisterType((*SegmentLoadJobConfig)(nil), "rover.csv_processor.v1.SegmentLoadJobConfig")
	proto.RegisterType((*GetLoadJobRequest)(nil), "rover.csv_processor.v1.GetLoadJobRequest")
	proto.RegisterType((*GetLoadJobReply)(nil), "rover.csv_processor.v1.GetLoadJobReply")
	proto.RegisterType((*CreateLoadJobRequest)(nil), "rover.csv_processor.v1.CreateLoadJobRequest")
	proto.RegisterType((*CreateLoadJobReply)(nil), "rover.csv_processor.v1.CreateLoadJobReply")
	proto.RegisterEnum("rover.csv_processor.v1.JobType", JobType_name, JobType_value)
	proto.RegisterEnum("rover.csv_processor.v1.JobStatus", JobStatus_name, JobStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CsvProcessor service

type CsvProcessorClient interface {
	GetLoadJob(ctx context.Context, in *GetLoadJobRequest, opts ...grpc.CallOption) (*GetLoadJobReply, error)
	CreateLoadJob(ctx context.Context, in *CreateLoadJobRequest, opts ...grpc.CallOption) (*CreateLoadJobReply, error)
}

type csvProcessorClient struct {
	cc *grpc.ClientConn
}

func NewCsvProcessorClient(cc *grpc.ClientConn) CsvProcessorClient {
	return &csvProcessorClient{cc}
}

func (c *csvProcessorClient) GetLoadJob(ctx context.Context, in *GetLoadJobRequest, opts ...grpc.CallOption) (*GetLoadJobReply, error) {
	out := new(GetLoadJobReply)
	err := grpc.Invoke(ctx, "/rover.csv_processor.v1.CsvProcessor/GetLoadJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *csvProcessorClient) CreateLoadJob(ctx context.Context, in *CreateLoadJobRequest, opts ...grpc.CallOption) (*CreateLoadJobReply, error) {
	out := new(CreateLoadJobReply)
	err := grpc.Invoke(ctx, "/rover.csv_processor.v1.CsvProcessor/CreateLoadJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CsvProcessor service

type CsvProcessorServer interface {
	GetLoadJob(context.Context, *GetLoadJobRequest) (*GetLoadJobReply, error)
	CreateLoadJob(context.Context, *CreateLoadJobRequest) (*CreateLoadJobReply, error)
}

func RegisterCsvProcessorServer(s *grpc.Server, srv CsvProcessorServer) {
	s.RegisterService(&_CsvProcessor_serviceDesc, srv)
}

func _CsvProcessor_GetLoadJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLoadJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CsvProcessorServer).GetLoadJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.csv_processor.v1.CsvProcessor/GetLoadJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CsvProcessorServer).GetLoadJob(ctx, req.(*GetLoadJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CsvProcessor_CreateLoadJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLoadJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CsvProcessorServer).CreateLoadJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.csv_processor.v1.CsvProcessor/CreateLoadJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CsvProcessorServer).CreateLoadJob(ctx, req.(*CreateLoadJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CsvProcessor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rover.csv_processor.v1.CsvProcessor",
	HandlerType: (*CsvProcessorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLoadJob",
			Handler:    _CsvProcessor_GetLoadJob_Handler,
		},
		{
			MethodName: "CreateLoadJob",
			Handler:    _CsvProcessor_CreateLoadJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "csv-processor/v1/csv-processor.proto",
}

func init() { proto.RegisterFile("csv-processor/v1/csv-processor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 631 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x5d, 0x4e, 0xdb, 0x4e,
	0x14, 0xc5, 0xe3, 0x04, 0x12, 0x7c, 0x13, 0xf8, 0xe7, 0x3f, 0x42, 0x60, 0x45, 0xe2, 0xa3, 0x6e,
	0xa5, 0x52, 0xd4, 0x3a, 0x22, 0x3c, 0xa1, 0x3e, 0x81, 0xe3, 0xa6, 0xa6, 0xe0, 0x80, 0x1d, 0x54,
	0xa9, 0x7d, 0x88, 0xfc, 0x31, 0x89, 0x0c, 0x26, 0xe3, 0x7a, 0x26, 0x96, 0xb2, 0x84, 0xee, 0xa3,
	0x0b, 0xe9, 0x4e, 0xba, 0x95, 0xca, 0x63, 0x3b, 0x80, 0x95, 0x54, 0xb4, 0x6f, 0x99, 0x33, 0xe7,
	0xcc, 0xdc, 0xf9, 0xdd, 0x1b, 0xc3, 0x2b, 0x97, 0xc6, 0xef, 0xc2, 0x88, 0xb8, 0x98, 0x52, 0x12,
	0xb5, 0xe3, 0xa3, 0xf6, 0x13, 0x41, 0x09, 0x23, 0xc2, 0x08, 0xda, 0x8a, 0x48, 0x8c, 0x23, 0xc5,
	0xa5, 0xf1, 0xf0, 0x61, 0x2b, 0x3e, 0x6a, 0xed, 0x8d, 0x09, 0x19, 0x07, 0xb8, 0xcd, 0x5d, 0xce,
	0x74, 0xd4, 0x66, 0xfe, 0x3d, 0xa6, 0xcc, 0xbe, 0x0f, 0xd3, 0xa0, 0xfc, 0x15, 0xc4, 0x9e, 0x6a,
	0xf5, 0x9d, 0x5b, 0xec, 0x32, 0xb4, 0x03, 0x10, 0x46, 0x24, 0xf9, 0x39, 0xf4, 0x3d, 0x49, 0xd8,
	0x17, 0x0e, 0x44, 0x53, 0xcc, 0x14, 0xdd, 0x43, 0x5b, 0x50, 0x75, 0xa6, 0xee, 0x1d, 0x66, 0x52,
	0x99, 0x6f, 0x65, 0x2b, 0xb4, 0x0d, 0xb5, 0x91, 0x1f, 0xe0, 0x24, 0x53, 0x49, 0x37, 0x92, 0xa5,
	0xee, 0xc9, 0x3f, 0xca, 0x50, 0xbb, 0x20, 0xb6, 0x77, 0x4e, 0x1c, 0xb4, 0x01, 0xe5, 0xec, 0xcc,
	0x55, 0xb3, 0xec, 0x7b, 0xc9, 0x5d, 0xb6, 0xeb, 0x92, 0xe9, 0x84, 0xdf, 0x55, 0xe6, 0xba, 0x98,
	0x29, 0xba, 0x87, 0x8e, 0x61, 0x85, 0xcd, 0x42, 0xcc, 0x0f, 0xdc, 0xe8, 0xec, 0x29, 0x8b, 0xdf,
	0xa7, 0x9c, 0x13, 0x67, 0x30, 0x0b, 0xb1, 0xc9, 0xcd, 0xe8, 0x04, 0xaa, 0x94, 0xd9, 0x6c, 0x4a,
	0xa5, 0x15, 0x1e, 0x7b, 0xf1, 0x87, 0x98, 0xc5, 0x8d, 0x66, 0x16, 0x40, 0x2d, 0x58, 0x0b, 0x23,
	0x32, 0x8e, 0x30, 0xa5, 0xd2, 0x2a, 0x2f, 0x66, 0xbe, 0x46, 0x27, 0x00, 0x6e, 0x84, 0x6d, 0x86,
	0xbd, 0xa1, 0xcd, 0xa4, 0xea, 0xbe, 0x70, 0x50, 0xef, 0xb4, 0x94, 0x94, 0xac, 0x92, 0x93, 0x55,
	0x06, 0x39, 0x59, 0x53, 0xcc, 0xdc, 0xa7, 0x0c, 0xbd, 0x84, 0xf5, 0x91, 0xed, 0x07, 0xd8, 0x1b,
	0x46, 0xd8, 0xa6, 0x64, 0x22, 0xd5, 0x38, 0xa0, 0x46, 0x2a, 0x9a, 0x5c, 0x93, 0xbf, 0x0b, 0xb0,
	0x69, 0xe1, 0xf1, 0x3d, 0x9e, 0xb0, 0x8c, 0x96, 0x4a, 0x26, 0x23, 0x7f, 0x5c, 0x60, 0x24, 0x14,
	0x19, 0xed, 0x00, 0xd0, 0x34, 0x96, 0x23, 0x14, 0x4d, 0x31, 0x53, 0x38, 0xc2, 0x8a, 0x4b, 0x63,
	0x4e, 0xb0, 0xbe, 0x1c, 0xc5, 0xbc, 0xfb, 0x66, 0xe2, 0x96, 0x8f, 0xe1, 0xff, 0x1e, 0xce, 0xcb,
	0x30, 0xf1, 0xb7, 0x29, 0xa6, 0x0c, 0xed, 0x42, 0x3d, 0x20, 0xb6, 0x37, 0xbc, 0x25, 0xce, 0xa3,
	0x42, 0x82, 0xd4, 0xa4, 0x7b, 0x72, 0x17, 0xfe, 0x7b, 0x1c, 0x0a, 0x83, 0x19, 0x3a, 0x82, 0xca,
	0x2d, 0x71, 0xb8, 0xb5, 0xbe, 0xbc, 0x7d, 0x79, 0x24, 0xf1, 0xca, 0x3f, 0x05, 0xd8, 0x54, 0x39,
	0xb9, 0xc2, 0xf5, 0xf9, 0x2c, 0x08, 0x7f, 0x33, 0x0b, 0x18, 0xb6, 0x73, 0x38, 0xf3, 0xda, 0x5d,
	0x8e, 0x95, 0x93, 0xaa, 0x77, 0xde, 0x2e, 0x3b, 0x67, 0x51, 0x2b, 0x3e, 0x96, 0xcc, 0x4d, 0xba,
	0x40, 0x3f, 0x6b, 0x00, 0x3c, 0x9c, 0x2c, 0xf7, 0x00, 0x15, 0x5e, 0xf0, 0x6f, 0x2c, 0x0e, 0xb7,
	0xa0, 0x96, 0x3d, 0x07, 0xd5, 0xa1, 0x66, 0x69, 0xbd, 0x4b, 0xcd, 0x18, 0x34, 0x4b, 0x87, 0xd7,
	0x20, 0xce, 0x67, 0x37, 0xd9, 0xb9, 0x31, 0x3e, 0x19, 0xfd, 0xcf, 0x46, 0xb3, 0x84, 0x1a, 0xb0,
	0xa6, 0x19, 0xd7, 0x37, 0xda, 0x8d, 0xd6, 0x6d, 0x0a, 0x68, 0x03, 0xe0, 0xca, 0xec, 0xab, 0x9a,
	0x65, 0xe9, 0x46, 0xaf, 0x59, 0x46, 0x00, 0xd5, 0x0f, 0xa7, 0xfa, 0x85, 0xd6, 0x6d, 0x56, 0xd0,
	0x3a, 0x88, 0x6a, 0xff, 0xf2, 0xea, 0x42, 0x1b, 0x68, 0xdd, 0xe6, 0x4a, 0xe7, 0x97, 0x00, 0x0d,
	0x95, 0xc6, 0x57, 0x79, 0x2d, 0xc8, 0x01, 0x78, 0xe8, 0x26, 0x7a, 0xb3, 0x74, 0x70, 0x8a, 0x63,
	0xd2, 0x7a, 0xfd, 0x1c, 0x6b, 0x18, 0xcc, 0xe4, 0x12, 0xba, 0x83, 0xf5, 0x27, 0xa0, 0xd0, 0xd2,
	0x6e, 0x2c, 0x9a, 0x88, 0xd6, 0xe1, 0x33, 0xdd, 0xfc, 0xb2, 0xb3, 0xfd, 0x2f, 0xbb, 0xc5, 0x8f,
	0xe8, 0xfb, 0x27, 0x82, 0x53, 0xe5, 0xff, 0xe2, 0xe3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x10,
	0x06, 0x45, 0x1f, 0x6d, 0x05, 0x00, 0x00,
}
