// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification/v1/notification.proto

/*
Package notification is a generated protocol buffer package.

It is generated from these files:
	notification/v1/notification.proto

It has these top-level messages:
	PushEnvironment
	NotificationTapBehaviorType
	NotificationTapPresentationType
	NotificationAttachmentType
	SendCampaignNotificationRequest
	SendCampaignNotificationResponse
*/
package notification

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import rover_auth_v1 "github.com/roverplatform/rover/apis/go/auth/v1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushEnvironment_Enum int32

const (
	PushEnvironment_UNKNOWN     PushEnvironment_Enum = 0
	PushEnvironment_PRODUCTION  PushEnvironment_Enum = 1
	PushEnvironment_DEVELOPMENT PushEnvironment_Enum = 2
)

var PushEnvironment_Enum_name = map[int32]string{
	0: "UNKNOWN",
	1: "PRODUCTION",
	2: "DEVELOPMENT",
}
var PushEnvironment_Enum_value = map[string]int32{
	"UNKNOWN":     0,
	"PRODUCTION":  1,
	"DEVELOPMENT": 2,
}

func (x PushEnvironment_Enum) String() string {
	return proto.EnumName(PushEnvironment_Enum_name, int32(x))
}
func (PushEnvironment_Enum) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type NotificationTapBehaviorType_Enum int32

const (
	NotificationTapBehaviorType_OPEN_EXPERIENCE NotificationTapBehaviorType_Enum = 0
	NotificationTapBehaviorType_OPEN_APP        NotificationTapBehaviorType_Enum = 1
	NotificationTapBehaviorType_OPEN_DEEP_LINK  NotificationTapBehaviorType_Enum = 2
	NotificationTapBehaviorType_OPEN_WEBSITE    NotificationTapBehaviorType_Enum = 3
)

var NotificationTapBehaviorType_Enum_name = map[int32]string{
	0: "OPEN_EXPERIENCE",
	1: "OPEN_APP",
	2: "OPEN_DEEP_LINK",
	3: "OPEN_WEBSITE",
}
var NotificationTapBehaviorType_Enum_value = map[string]int32{
	"OPEN_EXPERIENCE": 0,
	"OPEN_APP":        1,
	"OPEN_DEEP_LINK":  2,
	"OPEN_WEBSITE":    3,
}

func (x NotificationTapBehaviorType_Enum) String() string {
	return proto.EnumName(NotificationTapBehaviorType_Enum_name, int32(x))
}
func (NotificationTapBehaviorType_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type NotificationTapPresentationType_Enum int32

const (
	NotificationTapPresentationType_UNKNOWN    NotificationTapPresentationType_Enum = 0
	NotificationTapPresentationType_IN_APP     NotificationTapPresentationType_Enum = 1
	NotificationTapPresentationType_IN_BROWSER NotificationTapPresentationType_Enum = 2
)

var NotificationTapPresentationType_Enum_name = map[int32]string{
	0: "UNKNOWN",
	1: "IN_APP",
	2: "IN_BROWSER",
}
var NotificationTapPresentationType_Enum_value = map[string]int32{
	"UNKNOWN":    0,
	"IN_APP":     1,
	"IN_BROWSER": 2,
}

func (x NotificationTapPresentationType_Enum) String() string {
	return proto.EnumName(NotificationTapPresentationType_Enum_name, int32(x))
}
func (NotificationTapPresentationType_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type NotificationAttachmentType_Enum int32

const (
	NotificationAttachmentType_UNKNOWN NotificationAttachmentType_Enum = 0
	NotificationAttachmentType_IMAGE   NotificationAttachmentType_Enum = 1
	NotificationAttachmentType_AUDIO   NotificationAttachmentType_Enum = 2
	NotificationAttachmentType_VIDEO   NotificationAttachmentType_Enum = 3
)

var NotificationAttachmentType_Enum_name = map[int32]string{
	0: "UNKNOWN",
	1: "IMAGE",
	2: "AUDIO",
	3: "VIDEO",
}
var NotificationAttachmentType_Enum_value = map[string]int32{
	"UNKNOWN": 0,
	"IMAGE":   1,
	"AUDIO":   2,
	"VIDEO":   3,
}

func (x NotificationAttachmentType_Enum) String() string {
	return proto.EnumName(NotificationAttachmentType_Enum_name, int32(x))
}
func (NotificationAttachmentType_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type PushEnvironment struct {
}

func (m *PushEnvironment) Reset()                    { *m = PushEnvironment{} }
func (m *PushEnvironment) String() string            { return proto.CompactTextString(m) }
func (*PushEnvironment) ProtoMessage()               {}
func (*PushEnvironment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type NotificationTapBehaviorType struct {
}

func (m *NotificationTapBehaviorType) Reset()                    { *m = NotificationTapBehaviorType{} }
func (m *NotificationTapBehaviorType) String() string            { return proto.CompactTextString(m) }
func (*NotificationTapBehaviorType) ProtoMessage()               {}
func (*NotificationTapBehaviorType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NotificationTapPresentationType struct {
}

func (m *NotificationTapPresentationType) Reset()                    { *m = NotificationTapPresentationType{} }
func (m *NotificationTapPresentationType) String() string            { return proto.CompactTextString(m) }
func (*NotificationTapPresentationType) ProtoMessage()               {}
func (*NotificationTapPresentationType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type NotificationAttachmentType struct {
}

func (m *NotificationAttachmentType) Reset()                    { *m = NotificationAttachmentType{} }
func (m *NotificationAttachmentType) String() string            { return proto.CompactTextString(m) }
func (*NotificationAttachmentType) ProtoMessage()               {}
func (*NotificationAttachmentType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SendCampaignNotificationRequest struct {
	AuthContext                               *rover_auth_v1.AuthContext                 `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId                                int32                                      `protobuf:"varint,2,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	ExperienceId                              string                                     `protobuf:"bytes,3,opt,name=experience_id,json=experienceId" json:"experience_id,omitempty"`
	NotificationAttachmentUrl                 string                                     `protobuf:"bytes,10,opt,name=notification_attachment_url,json=notificationAttachmentUrl" json:"notification_attachment_url,omitempty"`
	NotificationAttachmentType                NotificationAttachmentType_Enum            `protobuf:"varint,11,opt,name=notification_attachment_type,json=notificationAttachmentType,enum=rover.notification.v1.NotificationAttachmentType_Enum" json:"notification_attachment_type,omitempty"`
	NotificationTapBehaviorType               NotificationTapBehaviorType_Enum           `protobuf:"varint,12,opt,name=notification_tap_behavior_type,json=notificationTapBehaviorType,enum=rover.notification.v1.NotificationTapBehaviorType_Enum" json:"notification_tap_behavior_type,omitempty"`
	NotificationTapBehaviorPresentationType   NotificationTapPresentationType_Enum       `protobuf:"varint,13,opt,name=notification_tap_behavior_presentation_type,json=notificationTapBehaviorPresentationType,enum=rover.notification.v1.NotificationTapPresentationType_Enum" json:"notification_tap_behavior_presentation_type,omitempty"`
	NotificationTapBehaviorUrl                string                                     `protobuf:"bytes,14,opt,name=notification_tap_behavior_url,json=notificationTapBehaviorUrl" json:"notification_tap_behavior_url,omitempty"`
	NotificationIosContentAvailable           bool                                       `protobuf:"varint,15,opt,name=notification_ios_content_available,json=notificationIosContentAvailable" json:"notification_ios_content_available,omitempty"`
	NotificationIosMutableContent             bool                                       `protobuf:"varint,16,opt,name=notification_ios_mutable_content,json=notificationIosMutableContent" json:"notification_ios_mutable_content,omitempty"`
	NotificationIosSound                      string                                     `protobuf:"bytes,17,opt,name=notification_ios_sound,json=notificationIosSound" json:"notification_ios_sound,omitempty"`
	NotificationIosCategoryIdentifier         string                                     `protobuf:"bytes,18,opt,name=notification_ios_category_identifier,json=notificationIosCategoryIdentifier" json:"notification_ios_category_identifier,omitempty"`
	NotificationIosThreadIdentifier           string                                     `protobuf:"bytes,19,opt,name=notification_ios_thread_identifier,json=notificationIosThreadIdentifier" json:"notification_ios_thread_identifier,omitempty"`
	NotificationAndroidChannelId              string                                     `protobuf:"bytes,20,opt,name=notification_android_channel_id,json=notificationAndroidChannelId" json:"notification_android_channel_id,omitempty"`
	NotificationAndroidSound                  string                                     `protobuf:"bytes,21,opt,name=notification_android_sound,json=notificationAndroidSound" json:"notification_android_sound,omitempty"`
	NotificationAndroidTag                    string                                     `protobuf:"bytes,22,opt,name=notification_android_tag,json=notificationAndroidTag" json:"notification_android_tag,omitempty"`
	NotificationExpiration                    int32                                      `protobuf:"varint,23,opt,name=notification_expiration,json=notificationExpiration" json:"notification_expiration,omitempty"`
	NotificationAttributes                    map[string]string                          `protobuf:"bytes,24,rep,name=notification_attributes,json=notificationAttributes" json:"notification_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotificationAlertOptionPushNotification   bool                                       `protobuf:"varint,25,opt,name=notification_alert_option_push_notification,json=notificationAlertOptionPushNotification" json:"notification_alert_option_push_notification,omitempty"`
	NotificationAlertOptionNotificationCenter bool                                       `protobuf:"varint,26,opt,name=notification_alert_option_notification_center,json=notificationAlertOptionNotificationCenter" json:"notification_alert_option_notification_center,omitempty"`
	NotificationAlertOptionBadgeNumber        bool                                       `protobuf:"varint,27,opt,name=notification_alert_option_badge_number,json=notificationAlertOptionBadgeNumber" json:"notification_alert_option_badge_number,omitempty"`
	Messages                                  []*SendCampaignNotificationRequest_Message `protobuf:"bytes,30,rep,name=messages" json:"messages,omitempty"`
}

func (m *SendCampaignNotificationRequest) Reset()                    { *m = SendCampaignNotificationRequest{} }
func (m *SendCampaignNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*SendCampaignNotificationRequest) ProtoMessage()               {}
func (*SendCampaignNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SendCampaignNotificationRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *SendCampaignNotificationRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *SendCampaignNotificationRequest) GetExperienceId() string {
	if m != nil {
		return m.ExperienceId
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationAttachmentUrl() string {
	if m != nil {
		return m.NotificationAttachmentUrl
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationAttachmentType() NotificationAttachmentType_Enum {
	if m != nil {
		return m.NotificationAttachmentType
	}
	return NotificationAttachmentType_UNKNOWN
}

func (m *SendCampaignNotificationRequest) GetNotificationTapBehaviorType() NotificationTapBehaviorType_Enum {
	if m != nil {
		return m.NotificationTapBehaviorType
	}
	return NotificationTapBehaviorType_OPEN_EXPERIENCE
}

func (m *SendCampaignNotificationRequest) GetNotificationTapBehaviorPresentationType() NotificationTapPresentationType_Enum {
	if m != nil {
		return m.NotificationTapBehaviorPresentationType
	}
	return NotificationTapPresentationType_UNKNOWN
}

func (m *SendCampaignNotificationRequest) GetNotificationTapBehaviorUrl() string {
	if m != nil {
		return m.NotificationTapBehaviorUrl
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationIosContentAvailable() bool {
	if m != nil {
		return m.NotificationIosContentAvailable
	}
	return false
}

func (m *SendCampaignNotificationRequest) GetNotificationIosMutableContent() bool {
	if m != nil {
		return m.NotificationIosMutableContent
	}
	return false
}

func (m *SendCampaignNotificationRequest) GetNotificationIosSound() string {
	if m != nil {
		return m.NotificationIosSound
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationIosCategoryIdentifier() string {
	if m != nil {
		return m.NotificationIosCategoryIdentifier
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationIosThreadIdentifier() string {
	if m != nil {
		return m.NotificationIosThreadIdentifier
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationAndroidChannelId() string {
	if m != nil {
		return m.NotificationAndroidChannelId
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationAndroidSound() string {
	if m != nil {
		return m.NotificationAndroidSound
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationAndroidTag() string {
	if m != nil {
		return m.NotificationAndroidTag
	}
	return ""
}

func (m *SendCampaignNotificationRequest) GetNotificationExpiration() int32 {
	if m != nil {
		return m.NotificationExpiration
	}
	return 0
}

func (m *SendCampaignNotificationRequest) GetNotificationAttributes() map[string]string {
	if m != nil {
		return m.NotificationAttributes
	}
	return nil
}

func (m *SendCampaignNotificationRequest) GetNotificationAlertOptionPushNotification() bool {
	if m != nil {
		return m.NotificationAlertOptionPushNotification
	}
	return false
}

func (m *SendCampaignNotificationRequest) GetNotificationAlertOptionNotificationCenter() bool {
	if m != nil {
		return m.NotificationAlertOptionNotificationCenter
	}
	return false
}

func (m *SendCampaignNotificationRequest) GetNotificationAlertOptionBadgeNumber() bool {
	if m != nil {
		return m.NotificationAlertOptionBadgeNumber
	}
	return false
}

func (m *SendCampaignNotificationRequest) GetMessages() []*SendCampaignNotificationRequest_Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type SendCampaignNotificationRequest_Message struct {
	NotificationBody           string               `protobuf:"bytes,1,opt,name=notification_body,json=notificationBody" json:"notification_body,omitempty"`
	NotificationTitle          string               `protobuf:"bytes,2,opt,name=notification_title,json=notificationTitle" json:"notification_title,omitempty"`
	DeviceId                   string               `protobuf:"bytes,10,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	DevicePushToken            string               `protobuf:"bytes,11,opt,name=device_push_token,json=devicePushToken" json:"device_push_token,omitempty"`
	DevicePushTokenEnvironment PushEnvironment_Enum `protobuf:"varint,12,opt,name=device_push_token_environment,json=devicePushTokenEnvironment,enum=rover.notification.v1.PushEnvironment_Enum" json:"device_push_token_environment,omitempty"`
	DeviceAppNamespace         string               `protobuf:"bytes,13,opt,name=device_app_namespace,json=deviceAppNamespace" json:"device_app_namespace,omitempty"`
	DeviceBadgeCount           int32                `protobuf:"varint,14,opt,name=device_badge_count,json=deviceBadgeCount" json:"device_badge_count,omitempty"`
}

func (m *SendCampaignNotificationRequest_Message) Reset() {
	*m = SendCampaignNotificationRequest_Message{}
}
func (m *SendCampaignNotificationRequest_Message) String() string { return proto.CompactTextString(m) }
func (*SendCampaignNotificationRequest_Message) ProtoMessage()    {}
func (*SendCampaignNotificationRequest_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 1}
}

func (m *SendCampaignNotificationRequest_Message) GetNotificationBody() string {
	if m != nil {
		return m.NotificationBody
	}
	return ""
}

func (m *SendCampaignNotificationRequest_Message) GetNotificationTitle() string {
	if m != nil {
		return m.NotificationTitle
	}
	return ""
}

func (m *SendCampaignNotificationRequest_Message) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *SendCampaignNotificationRequest_Message) GetDevicePushToken() string {
	if m != nil {
		return m.DevicePushToken
	}
	return ""
}

func (m *SendCampaignNotificationRequest_Message) GetDevicePushTokenEnvironment() PushEnvironment_Enum {
	if m != nil {
		return m.DevicePushTokenEnvironment
	}
	return PushEnvironment_UNKNOWN
}

func (m *SendCampaignNotificationRequest_Message) GetDeviceAppNamespace() string {
	if m != nil {
		return m.DeviceAppNamespace
	}
	return ""
}

func (m *SendCampaignNotificationRequest_Message) GetDeviceBadgeCount() int32 {
	if m != nil {
		return m.DeviceBadgeCount
	}
	return 0
}

type SendCampaignNotificationResponse struct {
}

func (m *SendCampaignNotificationResponse) Reset()         { *m = SendCampaignNotificationResponse{} }
func (m *SendCampaignNotificationResponse) String() string { return proto.CompactTextString(m) }
func (*SendCampaignNotificationResponse) ProtoMessage()    {}
func (*SendCampaignNotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5}
}

func init() {
	proto.RegisterType((*PushEnvironment)(nil), "rover.notification.v1.PushEnvironment")
	proto.RegisterType((*NotificationTapBehaviorType)(nil), "rover.notification.v1.NotificationTapBehaviorType")
	proto.RegisterType((*NotificationTapPresentationType)(nil), "rover.notification.v1.NotificationTapPresentationType")
	proto.RegisterType((*NotificationAttachmentType)(nil), "rover.notification.v1.NotificationAttachmentType")
	proto.RegisterType((*SendCampaignNotificationRequest)(nil), "rover.notification.v1.SendCampaignNotificationRequest")
	proto.RegisterType((*SendCampaignNotificationRequest_Message)(nil), "rover.notification.v1.SendCampaignNotificationRequest.Message")
	proto.RegisterType((*SendCampaignNotificationResponse)(nil), "rover.notification.v1.SendCampaignNotificationResponse")
	proto.RegisterEnum("rover.notification.v1.PushEnvironment_Enum", PushEnvironment_Enum_name, PushEnvironment_Enum_value)
	proto.RegisterEnum("rover.notification.v1.NotificationTapBehaviorType_Enum", NotificationTapBehaviorType_Enum_name, NotificationTapBehaviorType_Enum_value)
	proto.RegisterEnum("rover.notification.v1.NotificationTapPresentationType_Enum", NotificationTapPresentationType_Enum_name, NotificationTapPresentationType_Enum_value)
	proto.RegisterEnum("rover.notification.v1.NotificationAttachmentType_Enum", NotificationAttachmentType_Enum_name, NotificationAttachmentType_Enum_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Notification service

type NotificationClient interface {
	SendCampaignNotification(ctx context.Context, in *SendCampaignNotificationRequest, opts ...grpc.CallOption) (*SendCampaignNotificationResponse, error)
}

type notificationClient struct {
	cc *grpc.ClientConn
}

func NewNotificationClient(cc *grpc.ClientConn) NotificationClient {
	return &notificationClient{cc}
}

func (c *notificationClient) SendCampaignNotification(ctx context.Context, in *SendCampaignNotificationRequest, opts ...grpc.CallOption) (*SendCampaignNotificationResponse, error) {
	out := new(SendCampaignNotificationResponse)
	err := grpc.Invoke(ctx, "/rover.notification.v1.Notification/SendCampaignNotification", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Notification service

type NotificationServer interface {
	SendCampaignNotification(context.Context, *SendCampaignNotificationRequest) (*SendCampaignNotificationResponse, error)
}

func RegisterNotificationServer(s *grpc.Server, srv NotificationServer) {
	s.RegisterService(&_Notification_serviceDesc, srv)
}

func _Notification_SendCampaignNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCampaignNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServer).SendCampaignNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.notification.v1.Notification/SendCampaignNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServer).SendCampaignNotification(ctx, req.(*SendCampaignNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notification_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rover.notification.v1.Notification",
	HandlerType: (*NotificationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendCampaignNotification",
			Handler:    _Notification_SendCampaignNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notification/v1/notification.proto",
}

func init() { proto.RegisterFile("notification/v1/notification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xfd, 0x6e, 0xdb, 0x36,
	0x10, 0x9f, 0x93, 0xa5, 0x8d, 0xcf, 0x6e, 0xe2, 0xb0, 0x69, 0xab, 0x3a, 0xcd, 0xc7, 0xbc, 0x61,
	0x5f, 0x59, 0x9d, 0x25, 0x2b, 0x9a, 0x62, 0xdd, 0x0a, 0xd8, 0x8e, 0x10, 0x08, 0x69, 0x24, 0x83,
	0x71, 0x9a, 0xa1, 0x18, 0xa0, 0xd1, 0x36, 0x67, 0x0b, 0x75, 0x28, 0x4d, 0xa2, 0x8d, 0x04, 0xd8,
	0x1b, 0xec, 0x09, 0x06, 0xec, 0x05, 0xf7, 0x12, 0xc3, 0xf8, 0x21, 0x3b, 0x92, 0x62, 0x61, 0x5d,
	0xff, 0x92, 0xc8, 0xfb, 0xdd, 0xef, 0x8e, 0xf7, 0xc1, 0x23, 0xd4, 0x98, 0xcf, 0xbd, 0x5f, 0xbd,
	0x1e, 0xe1, 0x9e, 0xcf, 0xf6, 0x26, 0xfb, 0x7b, 0xc9, 0x75, 0x3d, 0x08, 0x7d, 0xee, 0xa3, 0x07,
	0xa1, 0x3f, 0xa1, 0x61, 0x3d, 0x25, 0x99, 0xec, 0x57, 0x11, 0x19, 0xf3, 0xa1, 0x54, 0x91, 0x5f,
	0x0d, 0xad, 0x1d, 0xc3, 0x6a, 0x7b, 0x1c, 0x0d, 0x4d, 0x36, 0xf1, 0x42, 0x9f, 0x5d, 0x52, 0xc6,
	0x6b, 0xcf, 0xe0, 0x63, 0x93, 0x8d, 0x2f, 0x51, 0x09, 0xee, 0x9e, 0xdb, 0x27, 0xb6, 0x73, 0x61,
	0x57, 0x3e, 0x42, 0x2b, 0x00, 0x6d, 0xec, 0x1c, 0x9d, 0xb7, 0x3a, 0x96, 0x63, 0x57, 0x0a, 0x68,
	0x15, 0x4a, 0x47, 0xe6, 0x1b, 0xf3, 0xb5, 0xd3, 0x3e, 0x35, 0xed, 0x4e, 0x65, 0xa1, 0xc6, 0x60,
	0xc3, 0x4e, 0xd8, 0xeb, 0x90, 0xa0, 0x49, 0x87, 0x64, 0xe2, 0xf9, 0x61, 0xe7, 0x3a, 0xa0, 0x35,
	0x27, 0x26, 0xbd, 0x0f, 0xab, 0x4e, 0xdb, 0xb4, 0x5d, 0xf3, 0xa7, 0xb6, 0x89, 0x2d, 0xd3, 0x6e,
	0x99, 0x82, 0xbc, 0x0c, 0xcb, 0x6a, 0xb3, 0xd1, 0x6e, 0x0b, 0x6a, 0x04, 0x2b, 0x6a, 0x75, 0x64,
	0x9a, 0x6d, 0xf7, 0xb5, 0x65, 0x9f, 0x54, 0x16, 0x50, 0x05, 0xca, 0x6a, 0xef, 0xc2, 0x6c, 0x9e,
	0x59, 0x1d, 0xb3, 0xb2, 0x58, 0xc3, 0xb0, 0x9d, 0xb1, 0xd7, 0x0e, 0x69, 0x24, 0xfc, 0xd7, 0x4b,
	0x69, 0x73, 0x6f, 0xde, 0x41, 0x00, 0xee, 0x58, 0x53, 0x4b, 0xe2, 0x50, 0xe2, 0xbf, 0x89, 0x9d,
	0x8b, 0x33, 0x13, 0x8b, 0x33, 0x60, 0xa8, 0x26, 0x39, 0x1b, 0x9c, 0x93, 0xde, 0x50, 0xc6, 0x44,
	0xd1, 0xcd, 0x8d, 0x4b, 0x11, 0x96, 0xac, 0xd3, 0xc6, 0xb1, 0x29, 0xd8, 0xc4, 0x6f, 0xe3, 0xfc,
	0xc8, 0x72, 0x84, 0xbb, 0xe2, 0xf7, 0x8d, 0x75, 0x64, 0x3a, 0xc2, 0xcf, 0xbf, 0xd7, 0x60, 0xfb,
	0x8c, 0xb2, 0x7e, 0x8b, 0x5c, 0x06, 0xc4, 0x1b, 0xb0, 0xa4, 0x01, 0x4c, 0x7f, 0x1b, 0xd3, 0x88,
	0xa3, 0x1f, 0xa1, 0x2c, 0x53, 0xe2, 0xf6, 0x7c, 0xc6, 0xe9, 0x15, 0x37, 0x0a, 0x3b, 0x85, 0x2f,
	0x4b, 0x07, 0xd5, 0xba, 0x4e, 0xa3, 0xca, 0xd6, 0x64, 0xbf, 0xde, 0x10, 0xdf, 0x96, 0x46, 0xe0,
	0x12, 0xb9, 0x59, 0xa0, 0x6d, 0x28, 0xf5, 0x62, 0x76, 0xd7, 0xeb, 0x1b, 0x0b, 0x42, 0x7b, 0x09,
	0xc3, 0x74, 0xcb, 0xea, 0xa3, 0x4f, 0xe1, 0x1e, 0xbd, 0x0a, 0x68, 0xe8, 0x51, 0xd6, 0xa3, 0x12,
	0xb2, 0x28, 0x20, 0x45, 0x5c, 0xbe, 0xd9, 0x14, 0xa0, 0x57, 0xb0, 0x91, 0x2c, 0x18, 0x97, 0xcc,
	0x4e, 0xef, 0x8e, 0xc3, 0x91, 0x01, 0x4a, 0xe5, 0x31, 0x9b, 0x1b, 0x9f, 0xf3, 0x70, 0x84, 0xae,
	0xe0, 0x49, 0x9e, 0x3e, 0x17, 0xe1, 0x33, 0x4a, 0x82, 0x60, 0xe5, 0xe0, 0x79, 0x7d, 0x6e, 0x6d,
	0xd6, 0xf3, 0xe3, 0x5e, 0x97, 0x41, 0xc7, 0x55, 0x96, 0x0b, 0x40, 0xbf, 0xc3, 0x56, 0xca, 0x32,
	0x27, 0x81, 0xdb, 0x8d, 0x8b, 0x4f, 0xdb, 0x2e, 0x2b, 0xdb, 0x87, 0xef, 0x61, 0x3b, 0x53, 0xb7,
	0xda, 0x78, 0x2a, 0x30, 0x19, 0x04, 0xfa, 0xb3, 0x00, 0xbb, 0xf9, 0xe6, 0x83, 0x44, 0x51, 0x6a,
	0x5f, 0xee, 0x29, 0x5f, 0x5e, 0xbe, 0x9f, 0x2f, 0xd9, 0x9a, 0xd6, 0xfe, 0x7c, 0x91, 0xe3, 0x4f,
	0x16, 0x8d, 0x1a, 0xb0, 0x99, 0xef, 0x9a, 0xcc, 0xea, 0x8a, 0xca, 0x6a, 0x35, 0x87, 0x4f, 0xa6,
	0xf5, 0x24, 0x7d, 0xe3, 0xb8, 0x9e, 0x1f, 0xe9, 0x3a, 0x15, 0x79, 0x25, 0x13, 0xe2, 0x8d, 0x48,
	0x77, 0x44, 0x8d, 0x55, 0xc1, 0xb3, 0x8c, 0xb7, 0x93, 0x48, 0xcb, 0x8f, 0x5a, 0x1a, 0xd7, 0x98,
	0xc2, 0xd0, 0x31, 0xec, 0xdc, 0x22, 0xbb, 0x1c, 0x73, 0x29, 0x9b, 0x92, 0x1a, 0x15, 0x45, 0xb5,
	0x99, 0xa1, 0x3a, 0xd5, 0xa8, 0x98, 0x11, 0x3d, 0x83, 0x87, 0xb7, 0x88, 0x22, 0x7f, 0xcc, 0xfa,
	0xc6, 0x9a, 0x3a, 0xd1, 0x7a, 0x46, 0xfd, 0x4c, 0xca, 0x90, 0x03, 0x9f, 0xdd, 0x3e, 0x0b, 0xe1,
	0x74, 0xe0, 0x87, 0xd7, 0xa2, 0x2d, 0x04, 0xb1, 0x90, 0xd1, 0xd0, 0x40, 0x8a, 0xe3, 0x93, 0xec,
	0x69, 0x62, 0xa4, 0x35, 0x03, 0xce, 0x0d, 0x0e, 0x1f, 0x86, 0x94, 0xf4, 0x93, 0x74, 0xf7, 0x15,
	0x5d, 0x36, 0x38, 0x1d, 0x85, 0x4b, 0x90, 0x99, 0xb0, 0x9d, 0x6e, 0x20, 0xd6, 0x0f, 0x7d, 0xaf,
	0xef, 0xf6, 0x86, 0x84, 0x31, 0x3a, 0x92, 0x7d, 0xbb, 0xae, 0x98, 0x52, 0x7d, 0xd6, 0xd0, 0xa8,
	0x96, 0x06, 0x89, 0x3e, 0xfe, 0x01, 0xaa, 0x73, 0x69, 0x74, 0x78, 0x1e, 0x28, 0x06, 0x63, 0x0e,
	0x83, 0x0e, 0xd1, 0x0b, 0x30, 0xe6, 0x6a, 0x73, 0x32, 0x30, 0x1e, 0x2a, 0xdd, 0x87, 0x73, 0x74,
	0x3b, 0x64, 0x80, 0x0e, 0xe1, 0x51, 0x4a, 0x53, 0x5c, 0x2e, 0x5e, 0xa8, 0x7e, 0x8d, 0x47, 0xea,
	0x46, 0x4a, 0x29, 0x9a, 0x33, 0x29, 0xfa, 0xa3, 0x90, 0xd1, 0x14, 0x37, 0x47, 0xe8, 0x75, 0xc7,
	0x9c, 0x46, 0x86, 0xb1, 0xb3, 0x28, 0x6e, 0x42, 0x9c, 0xd3, 0x2c, 0xff, 0x71, 0xaf, 0x66, 0x2f,
	0x95, 0x98, 0xd4, 0x64, 0x3c, 0xbc, 0xce, 0x1c, 0x63, 0x26, 0x44, 0x3f, 0x67, 0xba, 0x99, 0x8c,
	0x68, 0xc8, 0x5d, 0x3f, 0x50, 0x8b, 0x40, 0x8c, 0x4a, 0x37, 0x29, 0x36, 0x1e, 0xab, 0x6a, 0x4d,
	0x35, 0x64, 0x43, 0x6a, 0x38, 0x4a, 0x41, 0x8e, 0xd6, 0xa4, 0x13, 0xe8, 0x17, 0x78, 0x9a, 0xcf,
	0x9e, 0x92, 0xf4, 0x44, 0x5d, 0x88, 0xda, 0xa9, 0x2a, 0xfe, 0xaf, 0x72, 0xf8, 0x93, 0xdc, 0x2d,
	0xa5, 0x80, 0x30, 0x7c, 0x9e, 0x6f, 0xa1, 0x4b, 0xfa, 0x03, 0xea, 0x8a, 0x2b, 0xa4, 0x2b, 0xa8,
	0x37, 0x14, 0x75, 0x2d, 0x87, 0xba, 0x29, 0xa1, 0xb6, 0x42, 0xa2, 0xb7, 0xb0, 0x7c, 0x49, 0xa3,
	0x88, 0x0c, 0x44, 0x46, 0xb6, 0x54, 0x46, 0x5e, 0x7d, 0x60, 0x46, 0x4e, 0x35, 0x0d, 0x9e, 0xf1,
	0x55, 0xad, 0xf4, 0xbb, 0x21, 0x93, 0x26, 0x31, 0xf8, 0x17, 0xdf, 0xd1, 0x6b, 0x35, 0x11, 0x8b,
	0x58, 0xfe, 0xa2, 0x75, 0x58, 0x9a, 0x90, 0xd1, 0x98, 0xaa, 0x39, 0x57, 0xc4, 0x7a, 0xf1, 0xfd,
	0xc2, 0x8b, 0x42, 0xf5, 0x9f, 0x05, 0xb8, 0x1b, 0x1b, 0x40, 0xbb, 0xb0, 0x96, 0x0a, 0x43, 0xd7,
	0xef, 0x4f, 0x59, 0x2a, 0x49, 0x41, 0x53, 0xec, 0xa3, 0xa7, 0x80, 0xd2, 0xd7, 0xa4, 0xc7, 0x47,
	0x53, 0xfe, 0x14, 0x4d, 0x47, 0x0a, 0xd0, 0x06, 0x14, 0xfb, 0x74, 0xe2, 0xe9, 0x51, 0xaa, 0xe7,
	0xe2, 0xb2, 0xde, 0x10, 0xed, 0xf7, 0x35, 0xac, 0xc5, 0x42, 0x55, 0x2c, 0xdc, 0x7f, 0x47, 0x99,
	0x9a, 0x7d, 0x45, 0xbc, 0xaa, 0x05, 0xb2, 0x28, 0x3a, 0x72, 0x1b, 0x31, 0xd8, 0xbc, 0x85, 0x75,
	0xe9, 0xcd, 0x53, 0x2c, 0x9e, 0x5b, 0xbb, 0x39, 0xc1, 0xce, 0x3c, 0xdc, 0xe2, 0x41, 0x99, 0x31,
	0x92, 0x00, 0xa0, 0x6f, 0x61, 0x3d, 0xb6, 0x47, 0x82, 0xc0, 0x65, 0x44, 0x24, 0x21, 0x20, 0x3d,
	0x3d, 0x92, 0x8a, 0x18, 0x69, 0x59, 0x23, 0x08, 0xec, 0xa9, 0x04, 0x7d, 0x03, 0xf1, 0x6e, 0x5c,
	0x3a, 0x3d, 0x71, 0x49, 0x70, 0x35, 0x35, 0x96, 0x70, 0x45, 0x4b, 0x54, 0xa1, 0xb4, 0xe4, 0x7e,
	0xad, 0x06, 0x3b, 0xf9, 0x05, 0x10, 0x05, 0x3e, 0x8b, 0xe8, 0xc1, 0x5f, 0x05, 0x28, 0xa7, 0x5a,
	0x42, 0xb4, 0xbf, 0x91, 0xa7, 0x85, 0x9e, 0x7f, 0x58, 0x9d, 0x55, 0x0f, 0xff, 0xb7, 0x9e, 0x76,
	0xaf, 0xb9, 0xf5, 0xf6, 0x49, 0xe6, 0x81, 0xfd, 0x32, 0xb9, 0xee, 0xde, 0x51, 0xcf, 0xe6, 0xef,
	0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x18, 0x0e, 0xc0, 0x87, 0x0b, 0x00, 0x00,
}
