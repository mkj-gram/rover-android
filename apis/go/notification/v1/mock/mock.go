// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/roverplatform/rover/apis/go/notification/v1 (interfaces: NotificationClient)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/roverplatform/rover/apis/go/notification/v1"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockNotificationClient is a mock of NotificationClient interface
type MockNotificationClient struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationClientMockRecorder
}

// MockNotificationClientMockRecorder is the mock recorder for MockNotificationClient
type MockNotificationClientMockRecorder struct {
	mock *MockNotificationClient
}

// NewMockNotificationClient creates a new mock instance
func NewMockNotificationClient(ctrl *gomock.Controller) *MockNotificationClient {
	mock := &MockNotificationClient{ctrl: ctrl}
	mock.recorder = &MockNotificationClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotificationClient) EXPECT() *MockNotificationClientMockRecorder {
	return m.recorder
}

// SendCampaignNotification mocks base method
func (m *MockNotificationClient) SendCampaignNotification(arg0 context.Context, arg1 *v1.SendCampaignNotificationRequest, arg2 ...grpc.CallOption) (*v1.SendCampaignNotificationResponse, error) {
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SendCampaignNotification", varargs...)
	ret0, _ := ret[0].(*v1.SendCampaignNotificationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendCampaignNotification indicates an expected call of SendCampaignNotification
func (mr *MockNotificationClientMockRecorder) SendCampaignNotification(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendCampaignNotification", reflect.TypeOf((*MockNotificationClient)(nil).SendCampaignNotification), varargs...)
}
