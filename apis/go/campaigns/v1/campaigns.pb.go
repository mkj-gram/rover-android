// Code generated by protoc-gen-go. DO NOT EDIT.
// source: campaigns/v1/campaigns.proto

/*
Package campaignspb is a generated protocol buffer package.

It is generated from these files:
	campaigns/v1/campaigns.proto

It has these top-level messages:
	Campaign
	CreateRequest
	CreateResponse
	ListRequest
	ListResponse
	ArchiveRequest
	ArchiveResponse
	DuplicateRequest
	DuplicateResponse
	RenameRequest
	RenameResponse
	PublishRequest
	PublishResponse
	SendTestRequest
	SendTestResponse
	UpdateNotificationSettingsRequest
	UpdateNotificationSettingsResponse
	UpdateScheduledDeliverySettingsRequest
	UpdateScheduledDeliverySettingsResponse
	UpdateAutomatedDeliverySettingsRequest
	UpdateAutomatedDeliverySettingsResponse
	RateLimit
	ScheduledNotificationCampaign
	AutomatedNotificationCampaign
*/
package campaignspb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import rover_auth_v1 "github.com/roverplatform/rover/apis/go/auth/v1"
import rover_protobuf1 "github.com/roverplatform/rover/apis/go/protobuf/predicates"
import google_protobuf "github.com/roverplatform/rover/go/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CampaignType int32

const (
	CampaignType_CAMPAIGN_TYPE_UNDEFINED              CampaignType = 0
	CampaignType_CAMPAIGN_TYPE_SCHEDULED_NOTIFICATION CampaignType = 1
	CampaignType_CAMPAIGN_TYPE_AUTOMATED_NOTIFICATION CampaignType = 2
)

var CampaignType_name = map[int32]string{
	0: "CAMPAIGN_TYPE_UNDEFINED",
	1: "CAMPAIGN_TYPE_SCHEDULED_NOTIFICATION",
	2: "CAMPAIGN_TYPE_AUTOMATED_NOTIFICATION",
}
var CampaignType_value = map[string]int32{
	"CAMPAIGN_TYPE_UNDEFINED":              0,
	"CAMPAIGN_TYPE_SCHEDULED_NOTIFICATION": 1,
	"CAMPAIGN_TYPE_AUTOMATED_NOTIFICATION": 2,
}

func (x CampaignType) String() string {
	return proto.EnumName(CampaignType_name, int32(x))
}
func (CampaignType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CampaignStatus int32

const (
	CampaignStatus_CAMPAIGN_STATUS_UNDEFINED CampaignStatus = 0
	CampaignStatus_CAMPAIGN_STATUS_DRAFT     CampaignStatus = 1
	CampaignStatus_CAMPAIGN_STATUS_PUBLISHED CampaignStatus = 2
	CampaignStatus_CAMPAIGN_STATUS_ARCHIVED  CampaignStatus = 3
)

var CampaignStatus_name = map[int32]string{
	0: "CAMPAIGN_STATUS_UNDEFINED",
	1: "CAMPAIGN_STATUS_DRAFT",
	2: "CAMPAIGN_STATUS_PUBLISHED",
	3: "CAMPAIGN_STATUS_ARCHIVED",
}
var CampaignStatus_value = map[string]int32{
	"CAMPAIGN_STATUS_UNDEFINED": 0,
	"CAMPAIGN_STATUS_DRAFT":     1,
	"CAMPAIGN_STATUS_PUBLISHED": 2,
	"CAMPAIGN_STATUS_ARCHIVED":  3,
}

func (x CampaignStatus) String() string {
	return proto.EnumName(CampaignStatus_name, int32(x))
}
func (CampaignStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SegmentCondition int32

const (
	SegmentCondition_SEGMENT_CONDITION_ANY SegmentCondition = 0
	SegmentCondition_SEGMENT_CONDITION_ALL SegmentCondition = 1
)

var SegmentCondition_name = map[int32]string{
	0: "SEGMENT_CONDITION_ANY",
	1: "SEGMENT_CONDITION_ALL",
}
var SegmentCondition_value = map[string]int32{
	"SEGMENT_CONDITION_ANY": 0,
	"SEGMENT_CONDITION_ALL": 1,
}

func (x SegmentCondition) String() string {
	return proto.EnumName(SegmentCondition_name, int32(x))
}
func (SegmentCondition) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type NotificationAttachmentType int32

const (
	NotificationAttachmentType_NOTIFICATION_ATTACHMENT_TYPE_UNKNOWN NotificationAttachmentType = 0
	NotificationAttachmentType_NOTIFICATION_ATTACHMENT_TYPE_IMAGE   NotificationAttachmentType = 1
	NotificationAttachmentType_NOTIFICATION_ATTACHMENT_TYPE_AUDIO   NotificationAttachmentType = 2
	NotificationAttachmentType_NOTIFICATION_ATTACHMENT_TYPE_VIDEO   NotificationAttachmentType = 3
)

var NotificationAttachmentType_name = map[int32]string{
	0: "NOTIFICATION_ATTACHMENT_TYPE_UNKNOWN",
	1: "NOTIFICATION_ATTACHMENT_TYPE_IMAGE",
	2: "NOTIFICATION_ATTACHMENT_TYPE_AUDIO",
	3: "NOTIFICATION_ATTACHMENT_TYPE_VIDEO",
}
var NotificationAttachmentType_value = map[string]int32{
	"NOTIFICATION_ATTACHMENT_TYPE_UNKNOWN": 0,
	"NOTIFICATION_ATTACHMENT_TYPE_IMAGE":   1,
	"NOTIFICATION_ATTACHMENT_TYPE_AUDIO":   2,
	"NOTIFICATION_ATTACHMENT_TYPE_VIDEO":   3,
}

func (x NotificationAttachmentType) String() string {
	return proto.EnumName(NotificationAttachmentType_name, int32(x))
}
func (NotificationAttachmentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type NotificationTapBehaviorType int32

const (
	NotificationTapBehaviorType_NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_EXPERIENCE NotificationTapBehaviorType = 0
	NotificationTapBehaviorType_NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_APP        NotificationTapBehaviorType = 1
	NotificationTapBehaviorType_NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_DEEP_LINK  NotificationTapBehaviorType = 2
	NotificationTapBehaviorType_NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_WEBSITE    NotificationTapBehaviorType = 3
)

var NotificationTapBehaviorType_name = map[int32]string{
	0: "NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_EXPERIENCE",
	1: "NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_APP",
	2: "NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_DEEP_LINK",
	3: "NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_WEBSITE",
}
var NotificationTapBehaviorType_value = map[string]int32{
	"NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_EXPERIENCE": 0,
	"NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_APP":        1,
	"NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_DEEP_LINK":  2,
	"NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_WEBSITE":    3,
}

func (x NotificationTapBehaviorType) String() string {
	return proto.EnumName(NotificationTapBehaviorType_name, int32(x))
}
func (NotificationTapBehaviorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type NotificationTapPresentationType int32

const (
	NotificationTapPresentationType_NOTIFICATION_TAP_PRESENTATION_TYPE_UNKNOWN    NotificationTapPresentationType = 0
	NotificationTapPresentationType_NOTIFICATION_TAP_PRESENTATION_TYPE_IN_APP     NotificationTapPresentationType = 1
	NotificationTapPresentationType_NOTIFICATION_TAP_PRESENTATION_TYPE_IN_BROWSER NotificationTapPresentationType = 2
)

var NotificationTapPresentationType_name = map[int32]string{
	0: "NOTIFICATION_TAP_PRESENTATION_TYPE_UNKNOWN",
	1: "NOTIFICATION_TAP_PRESENTATION_TYPE_IN_APP",
	2: "NOTIFICATION_TAP_PRESENTATION_TYPE_IN_BROWSER",
}
var NotificationTapPresentationType_value = map[string]int32{
	"NOTIFICATION_TAP_PRESENTATION_TYPE_UNKNOWN":    0,
	"NOTIFICATION_TAP_PRESENTATION_TYPE_IN_APP":     1,
	"NOTIFICATION_TAP_PRESENTATION_TYPE_IN_BROWSER": 2,
}

func (x NotificationTapPresentationType) String() string {
	return proto.EnumName(NotificationTapPresentationType_name, int32(x))
}
func (NotificationTapPresentationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5}
}

type ScheduledType int32

const (
	ScheduledType_SCHEDULED_TYPE_NOW       ScheduledType = 0
	ScheduledType_SCHEDULED_TYPE_SCHEDULED ScheduledType = 1
)

var ScheduledType_name = map[int32]string{
	0: "SCHEDULED_TYPE_NOW",
	1: "SCHEDULED_TYPE_SCHEDULED",
}
var ScheduledType_value = map[string]int32{
	"SCHEDULED_TYPE_NOW":       0,
	"SCHEDULED_TYPE_SCHEDULED": 1,
}

func (x ScheduledType) String() string {
	return proto.EnumName(ScheduledType_name, int32(x))
}
func (ScheduledType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ScheduledDeliveryStatus int32

const (
	ScheduledDeliveryStatus_SCHEDULED_DELIVERY_STATUS_UNKNOWN    ScheduledDeliveryStatus = 0
	ScheduledDeliveryStatus_SCHEDULED_DELIVERY_STATUS_SCHEDULED  ScheduledDeliveryStatus = 1
	ScheduledDeliveryStatus_SCHEDULED_DELIVERY_STATUS_INPROGRESS ScheduledDeliveryStatus = 2
	ScheduledDeliveryStatus_SCHEDULED_DELIVERY_STATUS_FINISHED   ScheduledDeliveryStatus = 3
)

var ScheduledDeliveryStatus_name = map[int32]string{
	0: "SCHEDULED_DELIVERY_STATUS_UNKNOWN",
	1: "SCHEDULED_DELIVERY_STATUS_SCHEDULED",
	2: "SCHEDULED_DELIVERY_STATUS_INPROGRESS",
	3: "SCHEDULED_DELIVERY_STATUS_FINISHED",
}
var ScheduledDeliveryStatus_value = map[string]int32{
	"SCHEDULED_DELIVERY_STATUS_UNKNOWN":    0,
	"SCHEDULED_DELIVERY_STATUS_SCHEDULED":  1,
	"SCHEDULED_DELIVERY_STATUS_INPROGRESS": 2,
	"SCHEDULED_DELIVERY_STATUS_FINISHED":   3,
}

func (x ScheduledDeliveryStatus) String() string {
	return proto.EnumName(ScheduledDeliveryStatus_name, int32(x))
}
func (ScheduledDeliveryStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type RateLimit_Unit int32

const (
	RateLimit_HOUR RateLimit_Unit = 0
	RateLimit_DAY  RateLimit_Unit = 1
)

var RateLimit_Unit_name = map[int32]string{
	0: "HOUR",
	1: "DAY",
}
var RateLimit_Unit_value = map[string]int32{
	"HOUR": 0,
	"DAY":  1,
}

func (x RateLimit_Unit) String() string {
	return proto.EnumName(RateLimit_Unit_name, int32(x))
}
func (RateLimit_Unit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

type Campaign struct {
	// Types that are valid to be assigned to Campaign:
	//	*Campaign_ScheduledNotificationCampaign
	//	*Campaign_AutomatedNotificationCampaign
	Campaign isCampaign_Campaign `protobuf_oneof:"campaign"`
}

func (m *Campaign) Reset()                    { *m = Campaign{} }
func (m *Campaign) String() string            { return proto.CompactTextString(m) }
func (*Campaign) ProtoMessage()               {}
func (*Campaign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isCampaign_Campaign interface {
	isCampaign_Campaign()
}

type Campaign_ScheduledNotificationCampaign struct {
	ScheduledNotificationCampaign *ScheduledNotificationCampaign `protobuf:"bytes,1,opt,name=scheduled_notification_campaign,json=scheduledNotificationCampaign,oneof"`
}
type Campaign_AutomatedNotificationCampaign struct {
	AutomatedNotificationCampaign *AutomatedNotificationCampaign `protobuf:"bytes,2,opt,name=automated_notification_campaign,json=automatedNotificationCampaign,oneof"`
}

func (*Campaign_ScheduledNotificationCampaign) isCampaign_Campaign() {}
func (*Campaign_AutomatedNotificationCampaign) isCampaign_Campaign() {}

func (m *Campaign) GetCampaign() isCampaign_Campaign {
	if m != nil {
		return m.Campaign
	}
	return nil
}

func (m *Campaign) GetScheduledNotificationCampaign() *ScheduledNotificationCampaign {
	if x, ok := m.GetCampaign().(*Campaign_ScheduledNotificationCampaign); ok {
		return x.ScheduledNotificationCampaign
	}
	return nil
}

func (m *Campaign) GetAutomatedNotificationCampaign() *AutomatedNotificationCampaign {
	if x, ok := m.GetCampaign().(*Campaign_AutomatedNotificationCampaign); ok {
		return x.AutomatedNotificationCampaign
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Campaign) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Campaign_OneofMarshaler, _Campaign_OneofUnmarshaler, _Campaign_OneofSizer, []interface{}{
		(*Campaign_ScheduledNotificationCampaign)(nil),
		(*Campaign_AutomatedNotificationCampaign)(nil),
	}
}

func _Campaign_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Campaign)
	// campaign
	switch x := m.Campaign.(type) {
	case *Campaign_ScheduledNotificationCampaign:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ScheduledNotificationCampaign); err != nil {
			return err
		}
	case *Campaign_AutomatedNotificationCampaign:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AutomatedNotificationCampaign); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Campaign.Campaign has unexpected type %T", x)
	}
	return nil
}

func _Campaign_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Campaign)
	switch tag {
	case 1: // campaign.scheduled_notification_campaign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ScheduledNotificationCampaign)
		err := b.DecodeMessage(msg)
		m.Campaign = &Campaign_ScheduledNotificationCampaign{msg}
		return true, err
	case 2: // campaign.automated_notification_campaign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AutomatedNotificationCampaign)
		err := b.DecodeMessage(msg)
		m.Campaign = &Campaign_AutomatedNotificationCampaign{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Campaign_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Campaign)
	// campaign
	switch x := m.Campaign.(type) {
	case *Campaign_ScheduledNotificationCampaign:
		s := proto.Size(x.ScheduledNotificationCampaign)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Campaign_AutomatedNotificationCampaign:
		s := proto.Size(x.AutomatedNotificationCampaign)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateRequest struct {
	AuthContext  *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	Name         string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CampaignType CampaignType               `protobuf:"varint,3,opt,name=campaign_type,json=campaignType,enum=rover.campaigns.v1.CampaignType" json:"campaign_type,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetCampaignType() CampaignType {
	if m != nil {
		return m.CampaignType
	}
	return CampaignType_CAMPAIGN_TYPE_UNDEFINED
}

type CreateResponse struct {
	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign" json:"campaign,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetCampaign() *Campaign {
	if m != nil {
		return m.Campaign
	}
	return nil
}

type ListRequest struct {
	AuthContext    *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignType   CampaignType               `protobuf:"varint,5,opt,name=campaign_type,json=campaignType,enum=rover.campaigns.v1.CampaignType" json:"campaign_type,omitempty"`
	CampaignStatus CampaignStatus             `protobuf:"varint,6,opt,name=campaign_status,json=campaignStatus,enum=rover.campaigns.v1.CampaignStatus" json:"campaign_status,omitempty"`
	// filter
	Keyword string `protobuf:"bytes,7,opt,name=keyword" json:"keyword,omitempty"`
	// paging
	Page     int32 `protobuf:"varint,8,opt,name=page" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,9,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ListRequest) GetCampaignType() CampaignType {
	if m != nil {
		return m.CampaignType
	}
	return CampaignType_CAMPAIGN_TYPE_UNDEFINED
}

func (m *ListRequest) GetCampaignStatus() CampaignStatus {
	if m != nil {
		return m.CampaignStatus
	}
	return CampaignStatus_CAMPAIGN_STATUS_UNDEFINED
}

func (m *ListRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *ListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListResponse struct {
	Campaigns []*Campaign `protobuf:"bytes,1,rep,name=campaigns" json:"campaigns,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListResponse) GetCampaigns() []*Campaign {
	if m != nil {
		return m.Campaigns
	}
	return nil
}

type ArchiveRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId  int32                      `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
}

func (m *ArchiveRequest) Reset()                    { *m = ArchiveRequest{} }
func (m *ArchiveRequest) String() string            { return proto.CompactTextString(m) }
func (*ArchiveRequest) ProtoMessage()               {}
func (*ArchiveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ArchiveRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *ArchiveRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

type ArchiveResponse struct {
}

func (m *ArchiveResponse) Reset()                    { *m = ArchiveResponse{} }
func (m *ArchiveResponse) String() string            { return proto.CompactTextString(m) }
func (*ArchiveResponse) ProtoMessage()               {}
func (*ArchiveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DuplicateRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId  int32                      `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	Name        string                     `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
}

func (m *DuplicateRequest) Reset()                    { *m = DuplicateRequest{} }
func (m *DuplicateRequest) String() string            { return proto.CompactTextString(m) }
func (*DuplicateRequest) ProtoMessage()               {}
func (*DuplicateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DuplicateRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *DuplicateRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *DuplicateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DuplicateResponse struct {
	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign" json:"campaign,omitempty"`
}

func (m *DuplicateResponse) Reset()                    { *m = DuplicateResponse{} }
func (m *DuplicateResponse) String() string            { return proto.CompactTextString(m) }
func (*DuplicateResponse) ProtoMessage()               {}
func (*DuplicateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DuplicateResponse) GetCampaign() *Campaign {
	if m != nil {
		return m.Campaign
	}
	return nil
}

type RenameRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId  int32                      `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	Name        string                     `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
}

func (m *RenameRequest) Reset()                    { *m = RenameRequest{} }
func (m *RenameRequest) String() string            { return proto.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()               {}
func (*RenameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RenameRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *RenameRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *RenameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RenameResponse struct {
}

func (m *RenameResponse) Reset()                    { *m = RenameResponse{} }
func (m *RenameResponse) String() string            { return proto.CompactTextString(m) }
func (*RenameResponse) ProtoMessage()               {}
func (*RenameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type PublishRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId  int32                      `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
}

func (m *PublishRequest) Reset()                    { *m = PublishRequest{} }
func (m *PublishRequest) String() string            { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()               {}
func (*PublishRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PublishRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *PublishRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

type PublishResponse struct {
}

func (m *PublishResponse) Reset()                    { *m = PublishResponse{} }
func (m *PublishResponse) String() string            { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()               {}
func (*PublishResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type SendTestRequest struct {
	AuthContext *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId  int32                      `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
}

func (m *SendTestRequest) Reset()                    { *m = SendTestRequest{} }
func (m *SendTestRequest) String() string            { return proto.CompactTextString(m) }
func (*SendTestRequest) ProtoMessage()               {}
func (*SendTestRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SendTestRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *SendTestRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

type SendTestResponse struct {
}

func (m *SendTestResponse) Reset()                    { *m = SendTestResponse{} }
func (m *SendTestResponse) String() string            { return proto.CompactTextString(m) }
func (*SendTestResponse) ProtoMessage()               {}
func (*SendTestResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type UpdateNotificationSettingsRequest struct {
	AuthContext                               *rover_auth_v1.AuthContext      `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId                                int32                           `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	ExperienceId                              string                          `protobuf:"bytes,6,opt,name=experience_id,json=experienceId" json:"experience_id,omitempty"`
	UiState                                   string                          `protobuf:"bytes,10,opt,name=ui_state,json=uiState" json:"ui_state,omitempty"`
	NotificationBody                          string                          `protobuf:"bytes,11,opt,name=notification_body,json=notificationBody" json:"notification_body,omitempty"`
	NotificationTitle                         string                          `protobuf:"bytes,12,opt,name=notification_title,json=notificationTitle" json:"notification_title,omitempty"`
	NotificationAttachmentUrl                 string                          `protobuf:"bytes,13,opt,name=notification_attachment_url,json=notificationAttachmentUrl" json:"notification_attachment_url,omitempty"`
	NotificationAttachmentType                NotificationAttachmentType      `protobuf:"varint,14,opt,name=notification_attachment_type,json=notificationAttachmentType,enum=rover.campaigns.v1.NotificationAttachmentType" json:"notification_attachment_type,omitempty"`
	NotificationTapBehaviorType               NotificationTapBehaviorType     `protobuf:"varint,15,opt,name=notification_tap_behavior_type,json=notificationTapBehaviorType,enum=rover.campaigns.v1.NotificationTapBehaviorType" json:"notification_tap_behavior_type,omitempty"`
	NotificationTapBehaviorPresentationType   NotificationTapPresentationType `protobuf:"varint,16,opt,name=notification_tap_behavior_presentation_type,json=notificationTapBehaviorPresentationType,enum=rover.campaigns.v1.NotificationTapPresentationType" json:"notification_tap_behavior_presentation_type,omitempty"`
	NotificationTapBehaviorUrl                string                          `protobuf:"bytes,17,opt,name=notification_tap_behavior_url,json=notificationTapBehaviorUrl" json:"notification_tap_behavior_url,omitempty"`
	NotificationIosContentAvailable           bool                            `protobuf:"varint,18,opt,name=notification_ios_content_available,json=notificationIosContentAvailable" json:"notification_ios_content_available,omitempty"`
	NotificationIosMutableContent             bool                            `protobuf:"varint,19,opt,name=notification_ios_mutable_content,json=notificationIosMutableContent" json:"notification_ios_mutable_content,omitempty"`
	NotificationIosSound                      string                          `protobuf:"bytes,20,opt,name=notification_ios_sound,json=notificationIosSound" json:"notification_ios_sound,omitempty"`
	NotificationIosCategoryIdentifier         string                          `protobuf:"bytes,21,opt,name=notification_ios_category_identifier,json=notificationIosCategoryIdentifier" json:"notification_ios_category_identifier,omitempty"`
	NotificationIosThreadIdentifier           string                          `protobuf:"bytes,22,opt,name=notification_ios_thread_identifier,json=notificationIosThreadIdentifier" json:"notification_ios_thread_identifier,omitempty"`
	NotificationAndroidChannelId              string                          `protobuf:"bytes,23,opt,name=notification_android_channel_id,json=notificationAndroidChannelId" json:"notification_android_channel_id,omitempty"`
	NotificationAndroidSound                  string                          `protobuf:"bytes,24,opt,name=notification_android_sound,json=notificationAndroidSound" json:"notification_android_sound,omitempty"`
	NotificationAndroidTag                    string                          `protobuf:"bytes,25,opt,name=notification_android_tag,json=notificationAndroidTag" json:"notification_android_tag,omitempty"`
	NotificationExpiration                    int32                           `protobuf:"varint,26,opt,name=notification_expiration,json=notificationExpiration" json:"notification_expiration,omitempty"`
	NotificationAttributes                    map[string]string               `protobuf:"bytes,27,rep,name=notification_attributes,json=notificationAttributes" json:"notification_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotificationAlertOptionPushNotification   bool                            `protobuf:"varint,28,opt,name=notification_alert_option_push_notification,json=notificationAlertOptionPushNotification" json:"notification_alert_option_push_notification,omitempty"`
	NotificationAlertOptionNotificationCenter bool                            `protobuf:"varint,29,opt,name=notification_alert_option_notification_center,json=notificationAlertOptionNotificationCenter" json:"notification_alert_option_notification_center,omitempty"`
	NotificationAlertOptionBadgeNumber        bool                            `protobuf:"varint,30,opt,name=notification_alert_option_badge_number,json=notificationAlertOptionBadgeNumber" json:"notification_alert_option_badge_number,omitempty"`
}

func (m *UpdateNotificationSettingsRequest) Reset()         { *m = UpdateNotificationSettingsRequest{} }
func (m *UpdateNotificationSettingsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNotificationSettingsRequest) ProtoMessage()    {}
func (*UpdateNotificationSettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15}
}

func (m *UpdateNotificationSettingsRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateNotificationSettingsRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *UpdateNotificationSettingsRequest) GetExperienceId() string {
	if m != nil {
		return m.ExperienceId
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetUiState() string {
	if m != nil {
		return m.UiState
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationBody() string {
	if m != nil {
		return m.NotificationBody
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationTitle() string {
	if m != nil {
		return m.NotificationTitle
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAttachmentUrl() string {
	if m != nil {
		return m.NotificationAttachmentUrl
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAttachmentType() NotificationAttachmentType {
	if m != nil {
		return m.NotificationAttachmentType
	}
	return NotificationAttachmentType_NOTIFICATION_ATTACHMENT_TYPE_UNKNOWN
}

func (m *UpdateNotificationSettingsRequest) GetNotificationTapBehaviorType() NotificationTapBehaviorType {
	if m != nil {
		return m.NotificationTapBehaviorType
	}
	return NotificationTapBehaviorType_NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_EXPERIENCE
}

func (m *UpdateNotificationSettingsRequest) GetNotificationTapBehaviorPresentationType() NotificationTapPresentationType {
	if m != nil {
		return m.NotificationTapBehaviorPresentationType
	}
	return NotificationTapPresentationType_NOTIFICATION_TAP_PRESENTATION_TYPE_UNKNOWN
}

func (m *UpdateNotificationSettingsRequest) GetNotificationTapBehaviorUrl() string {
	if m != nil {
		return m.NotificationTapBehaviorUrl
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationIosContentAvailable() bool {
	if m != nil {
		return m.NotificationIosContentAvailable
	}
	return false
}

func (m *UpdateNotificationSettingsRequest) GetNotificationIosMutableContent() bool {
	if m != nil {
		return m.NotificationIosMutableContent
	}
	return false
}

func (m *UpdateNotificationSettingsRequest) GetNotificationIosSound() string {
	if m != nil {
		return m.NotificationIosSound
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationIosCategoryIdentifier() string {
	if m != nil {
		return m.NotificationIosCategoryIdentifier
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationIosThreadIdentifier() string {
	if m != nil {
		return m.NotificationIosThreadIdentifier
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAndroidChannelId() string {
	if m != nil {
		return m.NotificationAndroidChannelId
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAndroidSound() string {
	if m != nil {
		return m.NotificationAndroidSound
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAndroidTag() string {
	if m != nil {
		return m.NotificationAndroidTag
	}
	return ""
}

func (m *UpdateNotificationSettingsRequest) GetNotificationExpiration() int32 {
	if m != nil {
		return m.NotificationExpiration
	}
	return 0
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAttributes() map[string]string {
	if m != nil {
		return m.NotificationAttributes
	}
	return nil
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAlertOptionPushNotification() bool {
	if m != nil {
		return m.NotificationAlertOptionPushNotification
	}
	return false
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAlertOptionNotificationCenter() bool {
	if m != nil {
		return m.NotificationAlertOptionNotificationCenter
	}
	return false
}

func (m *UpdateNotificationSettingsRequest) GetNotificationAlertOptionBadgeNumber() bool {
	if m != nil {
		return m.NotificationAlertOptionBadgeNumber
	}
	return false
}

type UpdateNotificationSettingsResponse struct {
}

func (m *UpdateNotificationSettingsResponse) Reset()         { *m = UpdateNotificationSettingsResponse{} }
func (m *UpdateNotificationSettingsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNotificationSettingsResponse) ProtoMessage()    {}
func (*UpdateNotificationSettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16}
}

type UpdateScheduledDeliverySettingsRequest struct {
	AuthContext                 *rover_auth_v1.AuthContext `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId                  int32                      `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	UiState                     string                     `protobuf:"bytes,10,opt,name=ui_state,json=uiState" json:"ui_state,omitempty"`
	SegmentCondition            SegmentCondition           `protobuf:"varint,11,opt,name=segment_condition,json=segmentCondition,enum=rover.campaigns.v1.SegmentCondition" json:"segment_condition,omitempty"`
	SegmentIds                  []string                   `protobuf:"bytes,12,rep,name=segment_ids,json=segmentIds" json:"segment_ids,omitempty"`
	ScheduledType               ScheduledType              `protobuf:"varint,13,opt,name=scheduled_type,json=scheduledType,enum=rover.campaigns.v1.ScheduledType" json:"scheduled_type,omitempty"`
	ScheduledTimestamp          *google_protobuf.Timestamp `protobuf:"bytes,14,opt,name=scheduled_timestamp,json=scheduledTimestamp" json:"scheduled_timestamp,omitempty"`
	ScheduledTimeZone           string                     `protobuf:"bytes,15,opt,name=scheduled_time_zone,json=scheduledTimeZone" json:"scheduled_time_zone,omitempty"`
	ScheduledUseLocalDeviceTime bool                       `protobuf:"varint,16,opt,name=scheduled_use_local_device_time,json=scheduledUseLocalDeviceTime" json:"scheduled_use_local_device_time,omitempty"`
}

func (m *UpdateScheduledDeliverySettingsRequest) Reset() {
	*m = UpdateScheduledDeliverySettingsRequest{}
}
func (m *UpdateScheduledDeliverySettingsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateScheduledDeliverySettingsRequest) ProtoMessage()    {}
func (*UpdateScheduledDeliverySettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17}
}

func (m *UpdateScheduledDeliverySettingsRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateScheduledDeliverySettingsRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *UpdateScheduledDeliverySettingsRequest) GetUiState() string {
	if m != nil {
		return m.UiState
	}
	return ""
}

func (m *UpdateScheduledDeliverySettingsRequest) GetSegmentCondition() SegmentCondition {
	if m != nil {
		return m.SegmentCondition
	}
	return SegmentCondition_SEGMENT_CONDITION_ANY
}

func (m *UpdateScheduledDeliverySettingsRequest) GetSegmentIds() []string {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

func (m *UpdateScheduledDeliverySettingsRequest) GetScheduledType() ScheduledType {
	if m != nil {
		return m.ScheduledType
	}
	return ScheduledType_SCHEDULED_TYPE_NOW
}

func (m *UpdateScheduledDeliverySettingsRequest) GetScheduledTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.ScheduledTimestamp
	}
	return nil
}

func (m *UpdateScheduledDeliverySettingsRequest) GetScheduledTimeZone() string {
	if m != nil {
		return m.ScheduledTimeZone
	}
	return ""
}

func (m *UpdateScheduledDeliverySettingsRequest) GetScheduledUseLocalDeviceTime() bool {
	if m != nil {
		return m.ScheduledUseLocalDeviceTime
	}
	return false
}

type UpdateScheduledDeliverySettingsResponse struct {
}

func (m *UpdateScheduledDeliverySettingsResponse) Reset() {
	*m = UpdateScheduledDeliverySettingsResponse{}
}
func (m *UpdateScheduledDeliverySettingsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateScheduledDeliverySettingsResponse) ProtoMessage()    {}
func (*UpdateScheduledDeliverySettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18}
}

type UpdateAutomatedDeliverySettingsRequest struct {
	AuthContext                 *rover_auth_v1.AuthContext          `protobuf:"bytes,1,opt,name=auth_context,json=authContext" json:"auth_context,omitempty"`
	CampaignId                  int32                               `protobuf:"varint,5,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	UiState                     string                              `protobuf:"bytes,10,opt,name=ui_state,json=uiState" json:"ui_state,omitempty"`
	SegmentCondition            SegmentCondition                    `protobuf:"varint,11,opt,name=segment_condition,json=segmentCondition,enum=rover.campaigns.v1.SegmentCondition" json:"segment_condition,omitempty"`
	SegmentIds                  []string                            `protobuf:"bytes,12,rep,name=segment_ids,json=segmentIds" json:"segment_ids,omitempty"`
	AutomatedMonday             bool                                `protobuf:"varint,13,opt,name=automated_monday,json=automatedMonday" json:"automated_monday,omitempty"`
	AutomatedTuesday            bool                                `protobuf:"varint,14,opt,name=automated_tuesday,json=automatedTuesday" json:"automated_tuesday,omitempty"`
	AutomatedWednesday          bool                                `protobuf:"varint,15,opt,name=automated_wednesday,json=automatedWednesday" json:"automated_wednesday,omitempty"`
	AutomatedThursday           bool                                `protobuf:"varint,16,opt,name=automated_thursday,json=automatedThursday" json:"automated_thursday,omitempty"`
	AutomatedFriday             bool                                `protobuf:"varint,17,opt,name=automated_friday,json=automatedFriday" json:"automated_friday,omitempty"`
	AutomatedSaturday           bool                                `protobuf:"varint,18,opt,name=automated_saturday,json=automatedSaturday" json:"automated_saturday,omitempty"`
	AutomatedSunday             bool                                `protobuf:"varint,19,opt,name=automated_sunday,json=automatedSunday" json:"automated_sunday,omitempty"`
	AutomatedStartDate          string                              `protobuf:"bytes,20,opt,name=automated_start_date,json=automatedStartDate" json:"automated_start_date,omitempty"`
	AutomatedEndDate            string                              `protobuf:"bytes,21,opt,name=automated_end_date,json=automatedEndDate" json:"automated_end_date,omitempty"`
	AutomatedStartTime          int32                               `protobuf:"varint,22,opt,name=automated_start_time,json=automatedStartTime" json:"automated_start_time,omitempty"`
	AutomatedEndTime            int32                               `protobuf:"varint,23,opt,name=automated_end_time,json=automatedEndTime" json:"automated_end_time,omitempty"`
	AutomatedTimeZone           string                              `protobuf:"bytes,24,opt,name=automated_time_zone,json=automatedTimeZone" json:"automated_time_zone,omitempty"`
	AutomatedUseLocalDeviceTime bool                                `protobuf:"varint,25,opt,name=automated_use_local_device_time,json=automatedUseLocalDeviceTime" json:"automated_use_local_device_time,omitempty"`
	AutomatedEventName          string                              `protobuf:"bytes,26,opt,name=automated_event_name,json=automatedEventName" json:"automated_event_name,omitempty"`
	AutomatedFrequencySingleUse bool                                `protobuf:"varint,29,opt,name=automated_frequency_single_use,json=automatedFrequencySingleUse" json:"automated_frequency_single_use,omitempty"`
	AutomatedEventPredicates    *rover_protobuf1.PredicateAggregate `protobuf:"bytes,30,opt,name=automated_event_predicates,json=automatedEventPredicates" json:"automated_event_predicates,omitempty"`
	AutomatedFrequencyLimits    []*RateLimit                        `protobuf:"bytes,31,rep,name=automated_frequency_limits,json=automatedFrequencyLimits" json:"automated_frequency_limits,omitempty"`
}

func (m *UpdateAutomatedDeliverySettingsRequest) Reset() {
	*m = UpdateAutomatedDeliverySettingsRequest{}
}
func (m *UpdateAutomatedDeliverySettingsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAutomatedDeliverySettingsRequest) ProtoMessage()    {}
func (*UpdateAutomatedDeliverySettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19}
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAuthContext() *rover_auth_v1.AuthContext {
	if m != nil {
		return m.AuthContext
	}
	return nil
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetUiState() string {
	if m != nil {
		return m.UiState
	}
	return ""
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetSegmentCondition() SegmentCondition {
	if m != nil {
		return m.SegmentCondition
	}
	return SegmentCondition_SEGMENT_CONDITION_ANY
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetSegmentIds() []string {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedMonday() bool {
	if m != nil {
		return m.AutomatedMonday
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedTuesday() bool {
	if m != nil {
		return m.AutomatedTuesday
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedWednesday() bool {
	if m != nil {
		return m.AutomatedWednesday
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedThursday() bool {
	if m != nil {
		return m.AutomatedThursday
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedFriday() bool {
	if m != nil {
		return m.AutomatedFriday
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedSaturday() bool {
	if m != nil {
		return m.AutomatedSaturday
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedSunday() bool {
	if m != nil {
		return m.AutomatedSunday
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedStartDate() string {
	if m != nil {
		return m.AutomatedStartDate
	}
	return ""
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedEndDate() string {
	if m != nil {
		return m.AutomatedEndDate
	}
	return ""
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedStartTime() int32 {
	if m != nil {
		return m.AutomatedStartTime
	}
	return 0
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedEndTime() int32 {
	if m != nil {
		return m.AutomatedEndTime
	}
	return 0
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedTimeZone() string {
	if m != nil {
		return m.AutomatedTimeZone
	}
	return ""
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedUseLocalDeviceTime() bool {
	if m != nil {
		return m.AutomatedUseLocalDeviceTime
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedEventName() string {
	if m != nil {
		return m.AutomatedEventName
	}
	return ""
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedFrequencySingleUse() bool {
	if m != nil {
		return m.AutomatedFrequencySingleUse
	}
	return false
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedEventPredicates() *rover_protobuf1.PredicateAggregate {
	if m != nil {
		return m.AutomatedEventPredicates
	}
	return nil
}

func (m *UpdateAutomatedDeliverySettingsRequest) GetAutomatedFrequencyLimits() []*RateLimit {
	if m != nil {
		return m.AutomatedFrequencyLimits
	}
	return nil
}

type UpdateAutomatedDeliverySettingsResponse struct {
}

func (m *UpdateAutomatedDeliverySettingsResponse) Reset() {
	*m = UpdateAutomatedDeliverySettingsResponse{}
}
func (m *UpdateAutomatedDeliverySettingsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAutomatedDeliverySettingsResponse) ProtoMessage()    {}
func (*UpdateAutomatedDeliverySettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20}
}

type RateLimit struct {
	Limit         int32          `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	IntervalCount int32          `protobuf:"varint,2,opt,name=interval_count,json=intervalCount" json:"interval_count,omitempty"`
	IntervalUnit  RateLimit_Unit `protobuf:"varint,3,opt,name=interval_unit,json=intervalUnit,enum=rover.campaigns.v1.RateLimit_Unit" json:"interval_unit,omitempty"`
}

func (m *RateLimit) Reset()                    { *m = RateLimit{} }
func (m *RateLimit) String() string            { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()               {}
func (*RateLimit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RateLimit) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RateLimit) GetIntervalCount() int32 {
	if m != nil {
		return m.IntervalCount
	}
	return 0
}

func (m *RateLimit) GetIntervalUnit() RateLimit_Unit {
	if m != nil {
		return m.IntervalUnit
	}
	return RateLimit_HOUR
}

//
// for more, see https://paper.dropbox.com/doc/Campaign-Model-iDaks5RstsRN0X2SDCWsv
//
type ScheduledNotificationCampaign struct {
	CampaignId                                int32                           `protobuf:"varint,1,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	Name                                      string                          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CampaignStatus                            CampaignStatus                  `protobuf:"varint,3,opt,name=campaign_status,json=campaignStatus,enum=rover.campaigns.v1.CampaignStatus" json:"campaign_status,omitempty"`
	ExperienceId                              string                          `protobuf:"bytes,4,opt,name=experience_id,json=experienceId" json:"experience_id,omitempty"`
	CreatedAt                                 *google_protobuf.Timestamp      `protobuf:"bytes,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt                                 *google_protobuf.Timestamp      `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	UiState                                   string                          `protobuf:"bytes,10,opt,name=ui_state,json=uiState" json:"ui_state,omitempty"`
	SegmentCondition                          SegmentCondition                `protobuf:"varint,11,opt,name=segment_condition,json=segmentCondition,enum=rover.campaigns.v1.SegmentCondition" json:"segment_condition,omitempty"`
	SegmentIds                                []string                        `protobuf:"bytes,12,rep,name=segment_ids,json=segmentIds" json:"segment_ids,omitempty"`
	NotificationBody                          string                          `protobuf:"bytes,20,opt,name=notification_body,json=notificationBody" json:"notification_body,omitempty"`
	NotificationTitle                         string                          `protobuf:"bytes,21,opt,name=notification_title,json=notificationTitle" json:"notification_title,omitempty"`
	NotificationAttachmentUrl                 string                          `protobuf:"bytes,22,opt,name=notification_attachment_url,json=notificationAttachmentUrl" json:"notification_attachment_url,omitempty"`
	NotificationAttachmentType                NotificationAttachmentType      `protobuf:"varint,23,opt,name=notification_attachment_type,json=notificationAttachmentType,enum=rover.campaigns.v1.NotificationAttachmentType" json:"notification_attachment_type,omitempty"`
	NotificationTapBehaviorType               NotificationTapBehaviorType     `protobuf:"varint,24,opt,name=notification_tap_behavior_type,json=notificationTapBehaviorType,enum=rover.campaigns.v1.NotificationTapBehaviorType" json:"notification_tap_behavior_type,omitempty"`
	NotificationTapBehaviorPresentationType   NotificationTapPresentationType `protobuf:"varint,25,opt,name=notification_tap_behavior_presentation_type,json=notificationTapBehaviorPresentationType,enum=rover.campaigns.v1.NotificationTapPresentationType" json:"notification_tap_behavior_presentation_type,omitempty"`
	NotificationTapBehaviorUrl                string                          `protobuf:"bytes,26,opt,name=notification_tap_behavior_url,json=notificationTapBehaviorUrl" json:"notification_tap_behavior_url,omitempty"`
	NotificationIosContentAvailable           bool                            `protobuf:"varint,27,opt,name=notification_ios_content_available,json=notificationIosContentAvailable" json:"notification_ios_content_available,omitempty"`
	NotificationIosMutableContent             bool                            `protobuf:"varint,28,opt,name=notification_ios_mutable_content,json=notificationIosMutableContent" json:"notification_ios_mutable_content,omitempty"`
	NotificationIosSound                      string                          `protobuf:"bytes,29,opt,name=notification_ios_sound,json=notificationIosSound" json:"notification_ios_sound,omitempty"`
	NotificationIosCategoryIdentifier         string                          `protobuf:"bytes,30,opt,name=notification_ios_category_identifier,json=notificationIosCategoryIdentifier" json:"notification_ios_category_identifier,omitempty"`
	NotificationIosThreadIdentifier           string                          `protobuf:"bytes,31,opt,name=notification_ios_thread_identifier,json=notificationIosThreadIdentifier" json:"notification_ios_thread_identifier,omitempty"`
	NotificationAndroidChannelId              string                          `protobuf:"bytes,32,opt,name=notification_android_channel_id,json=notificationAndroidChannelId" json:"notification_android_channel_id,omitempty"`
	NotificationAndroidSound                  string                          `protobuf:"bytes,33,opt,name=notification_android_sound,json=notificationAndroidSound" json:"notification_android_sound,omitempty"`
	NotificationAndroidTag                    string                          `protobuf:"bytes,34,opt,name=notification_android_tag,json=notificationAndroidTag" json:"notification_android_tag,omitempty"`
	NotificationExpiration                    int32                           `protobuf:"varint,35,opt,name=notification_expiration,json=notificationExpiration" json:"notification_expiration,omitempty"`
	NotificationAttributes                    map[string]string               `protobuf:"bytes,36,rep,name=notification_attributes,json=notificationAttributes" json:"notification_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotificationAlertOptionPushNotification   bool                            `protobuf:"varint,37,opt,name=notification_alert_option_push_notification,json=notificationAlertOptionPushNotification" json:"notification_alert_option_push_notification,omitempty"`
	NotificationAlertOptionNotificationCenter bool                            `protobuf:"varint,38,opt,name=notification_alert_option_notification_center,json=notificationAlertOptionNotificationCenter" json:"notification_alert_option_notification_center,omitempty"`
	NotificationAlertOptionBadgeNumber        bool                            `protobuf:"varint,39,opt,name=notification_alert_option_badge_number,json=notificationAlertOptionBadgeNumber" json:"notification_alert_option_badge_number,omitempty"`
	ScheduledType                             ScheduledType                   `protobuf:"varint,40,opt,name=scheduled_type,json=scheduledType,enum=rover.campaigns.v1.ScheduledType" json:"scheduled_type,omitempty"`
	ScheduledTimestamp                        *google_protobuf.Timestamp      `protobuf:"bytes,41,opt,name=scheduled_timestamp,json=scheduledTimestamp" json:"scheduled_timestamp,omitempty"`
	ScheduledTimeZone                         string                          `protobuf:"bytes,42,opt,name=scheduled_time_zone,json=scheduledTimeZone" json:"scheduled_time_zone,omitempty"`
	ScheduledUseLocalDeviceTime               bool                            `protobuf:"varint,43,opt,name=scheduled_use_local_device_time,json=scheduledUseLocalDeviceTime" json:"scheduled_use_local_device_time,omitempty"`
	ScheduledDeliveryStatus                   ScheduledDeliveryStatus         `protobuf:"varint,44,opt,name=scheduled_delivery_status,json=scheduledDeliveryStatus,enum=rover.campaigns.v1.ScheduledDeliveryStatus" json:"scheduled_delivery_status,omitempty"`
}

func (m *ScheduledNotificationCampaign) Reset()                    { *m = ScheduledNotificationCampaign{} }
func (m *ScheduledNotificationCampaign) String() string            { return proto.CompactTextString(m) }
func (*ScheduledNotificationCampaign) ProtoMessage()               {}
func (*ScheduledNotificationCampaign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ScheduledNotificationCampaign) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *ScheduledNotificationCampaign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetCampaignStatus() CampaignStatus {
	if m != nil {
		return m.CampaignStatus
	}
	return CampaignStatus_CAMPAIGN_STATUS_UNDEFINED
}

func (m *ScheduledNotificationCampaign) GetExperienceId() string {
	if m != nil {
		return m.ExperienceId
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ScheduledNotificationCampaign) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *ScheduledNotificationCampaign) GetUiState() string {
	if m != nil {
		return m.UiState
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetSegmentCondition() SegmentCondition {
	if m != nil {
		return m.SegmentCondition
	}
	return SegmentCondition_SEGMENT_CONDITION_ANY
}

func (m *ScheduledNotificationCampaign) GetSegmentIds() []string {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

func (m *ScheduledNotificationCampaign) GetNotificationBody() string {
	if m != nil {
		return m.NotificationBody
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationTitle() string {
	if m != nil {
		return m.NotificationTitle
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationAttachmentUrl() string {
	if m != nil {
		return m.NotificationAttachmentUrl
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationAttachmentType() NotificationAttachmentType {
	if m != nil {
		return m.NotificationAttachmentType
	}
	return NotificationAttachmentType_NOTIFICATION_ATTACHMENT_TYPE_UNKNOWN
}

func (m *ScheduledNotificationCampaign) GetNotificationTapBehaviorType() NotificationTapBehaviorType {
	if m != nil {
		return m.NotificationTapBehaviorType
	}
	return NotificationTapBehaviorType_NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_EXPERIENCE
}

func (m *ScheduledNotificationCampaign) GetNotificationTapBehaviorPresentationType() NotificationTapPresentationType {
	if m != nil {
		return m.NotificationTapBehaviorPresentationType
	}
	return NotificationTapPresentationType_NOTIFICATION_TAP_PRESENTATION_TYPE_UNKNOWN
}

func (m *ScheduledNotificationCampaign) GetNotificationTapBehaviorUrl() string {
	if m != nil {
		return m.NotificationTapBehaviorUrl
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationIosContentAvailable() bool {
	if m != nil {
		return m.NotificationIosContentAvailable
	}
	return false
}

func (m *ScheduledNotificationCampaign) GetNotificationIosMutableContent() bool {
	if m != nil {
		return m.NotificationIosMutableContent
	}
	return false
}

func (m *ScheduledNotificationCampaign) GetNotificationIosSound() string {
	if m != nil {
		return m.NotificationIosSound
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationIosCategoryIdentifier() string {
	if m != nil {
		return m.NotificationIosCategoryIdentifier
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationIosThreadIdentifier() string {
	if m != nil {
		return m.NotificationIosThreadIdentifier
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationAndroidChannelId() string {
	if m != nil {
		return m.NotificationAndroidChannelId
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationAndroidSound() string {
	if m != nil {
		return m.NotificationAndroidSound
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationAndroidTag() string {
	if m != nil {
		return m.NotificationAndroidTag
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetNotificationExpiration() int32 {
	if m != nil {
		return m.NotificationExpiration
	}
	return 0
}

func (m *ScheduledNotificationCampaign) GetNotificationAttributes() map[string]string {
	if m != nil {
		return m.NotificationAttributes
	}
	return nil
}

func (m *ScheduledNotificationCampaign) GetNotificationAlertOptionPushNotification() bool {
	if m != nil {
		return m.NotificationAlertOptionPushNotification
	}
	return false
}

func (m *ScheduledNotificationCampaign) GetNotificationAlertOptionNotificationCenter() bool {
	if m != nil {
		return m.NotificationAlertOptionNotificationCenter
	}
	return false
}

func (m *ScheduledNotificationCampaign) GetNotificationAlertOptionBadgeNumber() bool {
	if m != nil {
		return m.NotificationAlertOptionBadgeNumber
	}
	return false
}

func (m *ScheduledNotificationCampaign) GetScheduledType() ScheduledType {
	if m != nil {
		return m.ScheduledType
	}
	return ScheduledType_SCHEDULED_TYPE_NOW
}

func (m *ScheduledNotificationCampaign) GetScheduledTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.ScheduledTimestamp
	}
	return nil
}

func (m *ScheduledNotificationCampaign) GetScheduledTimeZone() string {
	if m != nil {
		return m.ScheduledTimeZone
	}
	return ""
}

func (m *ScheduledNotificationCampaign) GetScheduledUseLocalDeviceTime() bool {
	if m != nil {
		return m.ScheduledUseLocalDeviceTime
	}
	return false
}

func (m *ScheduledNotificationCampaign) GetScheduledDeliveryStatus() ScheduledDeliveryStatus {
	if m != nil {
		return m.ScheduledDeliveryStatus
	}
	return ScheduledDeliveryStatus_SCHEDULED_DELIVERY_STATUS_UNKNOWN
}

type AutomatedNotificationCampaign struct {
	CampaignId                                int32                           `protobuf:"varint,1,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	Name                                      string                          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CampaignStatus                            CampaignStatus                  `protobuf:"varint,3,opt,name=campaign_status,json=campaignStatus,enum=rover.campaigns.v1.CampaignStatus" json:"campaign_status,omitempty"`
	ExperienceId                              string                          `protobuf:"bytes,4,opt,name=experience_id,json=experienceId" json:"experience_id,omitempty"`
	CreatedAt                                 *google_protobuf.Timestamp      `protobuf:"bytes,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt                                 *google_protobuf.Timestamp      `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	UiState                                   string                          `protobuf:"bytes,10,opt,name=ui_state,json=uiState" json:"ui_state,omitempty"`
	SegmentCondition                          SegmentCondition                `protobuf:"varint,11,opt,name=segment_condition,json=segmentCondition,enum=rover.campaigns.v1.SegmentCondition" json:"segment_condition,omitempty"`
	SegmentIds                                []string                        `protobuf:"bytes,12,rep,name=segment_ids,json=segmentIds" json:"segment_ids,omitempty"`
	NotificationBody                          string                          `protobuf:"bytes,20,opt,name=notification_body,json=notificationBody" json:"notification_body,omitempty"`
	NotificationTitle                         string                          `protobuf:"bytes,21,opt,name=notification_title,json=notificationTitle" json:"notification_title,omitempty"`
	NotificationAttachmentUrl                 string                          `protobuf:"bytes,22,opt,name=notification_attachment_url,json=notificationAttachmentUrl" json:"notification_attachment_url,omitempty"`
	NotificationAttachmentType                NotificationAttachmentType      `protobuf:"varint,23,opt,name=notification_attachment_type,json=notificationAttachmentType,enum=rover.campaigns.v1.NotificationAttachmentType" json:"notification_attachment_type,omitempty"`
	NotificationTapBehaviorType               NotificationTapBehaviorType     `protobuf:"varint,24,opt,name=notification_tap_behavior_type,json=notificationTapBehaviorType,enum=rover.campaigns.v1.NotificationTapBehaviorType" json:"notification_tap_behavior_type,omitempty"`
	NotificationTapBehaviorPresentationType   NotificationTapPresentationType `protobuf:"varint,25,opt,name=notification_tap_behavior_presentation_type,json=notificationTapBehaviorPresentationType,enum=rover.campaigns.v1.NotificationTapPresentationType" json:"notification_tap_behavior_presentation_type,omitempty"`
	NotificationTapBehaviorUrl                string                          `protobuf:"bytes,26,opt,name=notification_tap_behavior_url,json=notificationTapBehaviorUrl" json:"notification_tap_behavior_url,omitempty"`
	NotificationIosContentAvailable           bool                            `protobuf:"varint,27,opt,name=notification_ios_content_available,json=notificationIosContentAvailable" json:"notification_ios_content_available,omitempty"`
	NotificationIosMutableContent             bool                            `protobuf:"varint,28,opt,name=notification_ios_mutable_content,json=notificationIosMutableContent" json:"notification_ios_mutable_content,omitempty"`
	NotificationIosSound                      string                          `protobuf:"bytes,29,opt,name=notification_ios_sound,json=notificationIosSound" json:"notification_ios_sound,omitempty"`
	NotificationIosCategoryIdentifier         string                          `protobuf:"bytes,30,opt,name=notification_ios_category_identifier,json=notificationIosCategoryIdentifier" json:"notification_ios_category_identifier,omitempty"`
	NotificationIosThreadIdentifier           string                          `protobuf:"bytes,31,opt,name=notification_ios_thread_identifier,json=notificationIosThreadIdentifier" json:"notification_ios_thread_identifier,omitempty"`
	NotificationAndroidChannelId              string                          `protobuf:"bytes,32,opt,name=notification_android_channel_id,json=notificationAndroidChannelId" json:"notification_android_channel_id,omitempty"`
	NotificationAndroidSound                  string                          `protobuf:"bytes,33,opt,name=notification_android_sound,json=notificationAndroidSound" json:"notification_android_sound,omitempty"`
	NotificationAndroidTag                    string                          `protobuf:"bytes,34,opt,name=notification_android_tag,json=notificationAndroidTag" json:"notification_android_tag,omitempty"`
	NotificationExpiration                    int32                           `protobuf:"varint,35,opt,name=notification_expiration,json=notificationExpiration" json:"notification_expiration,omitempty"`
	NotificationAttributes                    map[string]string               `protobuf:"bytes,36,rep,name=notification_attributes,json=notificationAttributes" json:"notification_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotificationAlertOptionPushNotification   bool                            `protobuf:"varint,37,opt,name=notification_alert_option_push_notification,json=notificationAlertOptionPushNotification" json:"notification_alert_option_push_notification,omitempty"`
	NotificationAlertOptionNotificationCenter bool                            `protobuf:"varint,38,opt,name=notification_alert_option_notification_center,json=notificationAlertOptionNotificationCenter" json:"notification_alert_option_notification_center,omitempty"`
	NotificationAlertOptionBadgeNumber        bool                            `protobuf:"varint,39,opt,name=notification_alert_option_badge_number,json=notificationAlertOptionBadgeNumber" json:"notification_alert_option_badge_number,omitempty"`
	AutomatedMonday                           bool                            `protobuf:"varint,46,opt,name=automated_monday,json=automatedMonday" json:"automated_monday,omitempty"`
	AutomatedTuesday                          bool                            `protobuf:"varint,47,opt,name=automated_tuesday,json=automatedTuesday" json:"automated_tuesday,omitempty"`
	AutomatedWednesday                        bool                            `protobuf:"varint,48,opt,name=automated_wednesday,json=automatedWednesday" json:"automated_wednesday,omitempty"`
	AutomatedThursday                         bool                            `protobuf:"varint,49,opt,name=automated_thursday,json=automatedThursday" json:"automated_thursday,omitempty"`
	AutomatedFriday                           bool                            `protobuf:"varint,50,opt,name=automated_friday,json=automatedFriday" json:"automated_friday,omitempty"`
	AutomatedSaturday                         bool                            `protobuf:"varint,51,opt,name=automated_saturday,json=automatedSaturday" json:"automated_saturday,omitempty"`
	AutomatedSunday                           bool                            `protobuf:"varint,52,opt,name=automated_sunday,json=automatedSunday" json:"automated_sunday,omitempty"`
	// start/end dates yyyy-mm-dd
	AutomatedStartDate          string                              `protobuf:"bytes,53,opt,name=automated_start_date,json=automatedStartDate" json:"automated_start_date,omitempty"`
	AutomatedEndDate            string                              `protobuf:"bytes,54,opt,name=automated_end_date,json=automatedEndDate" json:"automated_end_date,omitempty"`
	AutomatedStartTime          int32                               `protobuf:"varint,55,opt,name=automated_start_time,json=automatedStartTime" json:"automated_start_time,omitempty"`
	AutomatedEndTime            int32                               `protobuf:"varint,56,opt,name=automated_end_time,json=automatedEndTime" json:"automated_end_time,omitempty"`
	AutomatedTimeZone           string                              `protobuf:"bytes,57,opt,name=automated_time_zone,json=automatedTimeZone" json:"automated_time_zone,omitempty"`
	AutomatedUseLocalDeviceTime bool                                `protobuf:"varint,58,opt,name=automated_use_local_device_time,json=automatedUseLocalDeviceTime" json:"automated_use_local_device_time,omitempty"`
	AutomatedEventName          string                              `protobuf:"bytes,59,opt,name=automated_event_name,json=automatedEventName" json:"automated_event_name,omitempty"`
	AutomatedEventPredicates    *rover_protobuf1.PredicateAggregate `protobuf:"bytes,60,opt,name=automated_event_predicates,json=automatedEventPredicates" json:"automated_event_predicates,omitempty"`
	AutomatedFrequencySingleUse bool                                `protobuf:"varint,61,opt,name=automated_frequency_single_use,json=automatedFrequencySingleUse" json:"automated_frequency_single_use,omitempty"`
	AutomatedFrequencyLimits    []*RateLimit                        `protobuf:"bytes,62,rep,name=automated_frequency_limits,json=automatedFrequencyLimits" json:"automated_frequency_limits,omitempty"`
}

func (m *AutomatedNotificationCampaign) Reset()                    { *m = AutomatedNotificationCampaign{} }
func (m *AutomatedNotificationCampaign) String() string            { return proto.CompactTextString(m) }
func (*AutomatedNotificationCampaign) ProtoMessage()               {}
func (*AutomatedNotificationCampaign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *AutomatedNotificationCampaign) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *AutomatedNotificationCampaign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetCampaignStatus() CampaignStatus {
	if m != nil {
		return m.CampaignStatus
	}
	return CampaignStatus_CAMPAIGN_STATUS_UNDEFINED
}

func (m *AutomatedNotificationCampaign) GetExperienceId() string {
	if m != nil {
		return m.ExperienceId
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *AutomatedNotificationCampaign) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *AutomatedNotificationCampaign) GetUiState() string {
	if m != nil {
		return m.UiState
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetSegmentCondition() SegmentCondition {
	if m != nil {
		return m.SegmentCondition
	}
	return SegmentCondition_SEGMENT_CONDITION_ANY
}

func (m *AutomatedNotificationCampaign) GetSegmentIds() []string {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

func (m *AutomatedNotificationCampaign) GetNotificationBody() string {
	if m != nil {
		return m.NotificationBody
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationTitle() string {
	if m != nil {
		return m.NotificationTitle
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationAttachmentUrl() string {
	if m != nil {
		return m.NotificationAttachmentUrl
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationAttachmentType() NotificationAttachmentType {
	if m != nil {
		return m.NotificationAttachmentType
	}
	return NotificationAttachmentType_NOTIFICATION_ATTACHMENT_TYPE_UNKNOWN
}

func (m *AutomatedNotificationCampaign) GetNotificationTapBehaviorType() NotificationTapBehaviorType {
	if m != nil {
		return m.NotificationTapBehaviorType
	}
	return NotificationTapBehaviorType_NOTIFICATION_TAP_BEHAVIOR_TYPE_OPEN_EXPERIENCE
}

func (m *AutomatedNotificationCampaign) GetNotificationTapBehaviorPresentationType() NotificationTapPresentationType {
	if m != nil {
		return m.NotificationTapBehaviorPresentationType
	}
	return NotificationTapPresentationType_NOTIFICATION_TAP_PRESENTATION_TYPE_UNKNOWN
}

func (m *AutomatedNotificationCampaign) GetNotificationTapBehaviorUrl() string {
	if m != nil {
		return m.NotificationTapBehaviorUrl
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationIosContentAvailable() bool {
	if m != nil {
		return m.NotificationIosContentAvailable
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetNotificationIosMutableContent() bool {
	if m != nil {
		return m.NotificationIosMutableContent
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetNotificationIosSound() string {
	if m != nil {
		return m.NotificationIosSound
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationIosCategoryIdentifier() string {
	if m != nil {
		return m.NotificationIosCategoryIdentifier
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationIosThreadIdentifier() string {
	if m != nil {
		return m.NotificationIosThreadIdentifier
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationAndroidChannelId() string {
	if m != nil {
		return m.NotificationAndroidChannelId
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationAndroidSound() string {
	if m != nil {
		return m.NotificationAndroidSound
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationAndroidTag() string {
	if m != nil {
		return m.NotificationAndroidTag
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetNotificationExpiration() int32 {
	if m != nil {
		return m.NotificationExpiration
	}
	return 0
}

func (m *AutomatedNotificationCampaign) GetNotificationAttributes() map[string]string {
	if m != nil {
		return m.NotificationAttributes
	}
	return nil
}

func (m *AutomatedNotificationCampaign) GetNotificationAlertOptionPushNotification() bool {
	if m != nil {
		return m.NotificationAlertOptionPushNotification
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetNotificationAlertOptionNotificationCenter() bool {
	if m != nil {
		return m.NotificationAlertOptionNotificationCenter
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetNotificationAlertOptionBadgeNumber() bool {
	if m != nil {
		return m.NotificationAlertOptionBadgeNumber
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedMonday() bool {
	if m != nil {
		return m.AutomatedMonday
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedTuesday() bool {
	if m != nil {
		return m.AutomatedTuesday
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedWednesday() bool {
	if m != nil {
		return m.AutomatedWednesday
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedThursday() bool {
	if m != nil {
		return m.AutomatedThursday
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedFriday() bool {
	if m != nil {
		return m.AutomatedFriday
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedSaturday() bool {
	if m != nil {
		return m.AutomatedSaturday
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedSunday() bool {
	if m != nil {
		return m.AutomatedSunday
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedStartDate() string {
	if m != nil {
		return m.AutomatedStartDate
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetAutomatedEndDate() string {
	if m != nil {
		return m.AutomatedEndDate
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetAutomatedStartTime() int32 {
	if m != nil {
		return m.AutomatedStartTime
	}
	return 0
}

func (m *AutomatedNotificationCampaign) GetAutomatedEndTime() int32 {
	if m != nil {
		return m.AutomatedEndTime
	}
	return 0
}

func (m *AutomatedNotificationCampaign) GetAutomatedTimeZone() string {
	if m != nil {
		return m.AutomatedTimeZone
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetAutomatedUseLocalDeviceTime() bool {
	if m != nil {
		return m.AutomatedUseLocalDeviceTime
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedEventName() string {
	if m != nil {
		return m.AutomatedEventName
	}
	return ""
}

func (m *AutomatedNotificationCampaign) GetAutomatedEventPredicates() *rover_protobuf1.PredicateAggregate {
	if m != nil {
		return m.AutomatedEventPredicates
	}
	return nil
}

func (m *AutomatedNotificationCampaign) GetAutomatedFrequencySingleUse() bool {
	if m != nil {
		return m.AutomatedFrequencySingleUse
	}
	return false
}

func (m *AutomatedNotificationCampaign) GetAutomatedFrequencyLimits() []*RateLimit {
	if m != nil {
		return m.AutomatedFrequencyLimits
	}
	return nil
}

func init() {
	proto.RegisterType((*Campaign)(nil), "rover.campaigns.v1.Campaign")
	proto.RegisterType((*CreateRequest)(nil), "rover.campaigns.v1.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "rover.campaigns.v1.CreateResponse")
	proto.RegisterType((*ListRequest)(nil), "rover.campaigns.v1.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "rover.campaigns.v1.ListResponse")
	proto.RegisterType((*ArchiveRequest)(nil), "rover.campaigns.v1.ArchiveRequest")
	proto.RegisterType((*ArchiveResponse)(nil), "rover.campaigns.v1.ArchiveResponse")
	proto.RegisterType((*DuplicateRequest)(nil), "rover.campaigns.v1.DuplicateRequest")
	proto.RegisterType((*DuplicateResponse)(nil), "rover.campaigns.v1.DuplicateResponse")
	proto.RegisterType((*RenameRequest)(nil), "rover.campaigns.v1.RenameRequest")
	proto.RegisterType((*RenameResponse)(nil), "rover.campaigns.v1.RenameResponse")
	proto.RegisterType((*PublishRequest)(nil), "rover.campaigns.v1.PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "rover.campaigns.v1.PublishResponse")
	proto.RegisterType((*SendTestRequest)(nil), "rover.campaigns.v1.SendTestRequest")
	proto.RegisterType((*SendTestResponse)(nil), "rover.campaigns.v1.SendTestResponse")
	proto.RegisterType((*UpdateNotificationSettingsRequest)(nil), "rover.campaigns.v1.UpdateNotificationSettingsRequest")
	proto.RegisterType((*UpdateNotificationSettingsResponse)(nil), "rover.campaigns.v1.UpdateNotificationSettingsResponse")
	proto.RegisterType((*UpdateScheduledDeliverySettingsRequest)(nil), "rover.campaigns.v1.UpdateScheduledDeliverySettingsRequest")
	proto.RegisterType((*UpdateScheduledDeliverySettingsResponse)(nil), "rover.campaigns.v1.UpdateScheduledDeliverySettingsResponse")
	proto.RegisterType((*UpdateAutomatedDeliverySettingsRequest)(nil), "rover.campaigns.v1.UpdateAutomatedDeliverySettingsRequest")
	proto.RegisterType((*UpdateAutomatedDeliverySettingsResponse)(nil), "rover.campaigns.v1.UpdateAutomatedDeliverySettingsResponse")
	proto.RegisterType((*RateLimit)(nil), "rover.campaigns.v1.RateLimit")
	proto.RegisterType((*ScheduledNotificationCampaign)(nil), "rover.campaigns.v1.ScheduledNotificationCampaign")
	proto.RegisterType((*AutomatedNotificationCampaign)(nil), "rover.campaigns.v1.AutomatedNotificationCampaign")
	proto.RegisterEnum("rover.campaigns.v1.CampaignType", CampaignType_name, CampaignType_value)
	proto.RegisterEnum("rover.campaigns.v1.CampaignStatus", CampaignStatus_name, CampaignStatus_value)
	proto.RegisterEnum("rover.campaigns.v1.SegmentCondition", SegmentCondition_name, SegmentCondition_value)
	proto.RegisterEnum("rover.campaigns.v1.NotificationAttachmentType", NotificationAttachmentType_name, NotificationAttachmentType_value)
	proto.RegisterEnum("rover.campaigns.v1.NotificationTapBehaviorType", NotificationTapBehaviorType_name, NotificationTapBehaviorType_value)
	proto.RegisterEnum("rover.campaigns.v1.NotificationTapPresentationType", NotificationTapPresentationType_name, NotificationTapPresentationType_value)
	proto.RegisterEnum("rover.campaigns.v1.ScheduledType", ScheduledType_name, ScheduledType_value)
	proto.RegisterEnum("rover.campaigns.v1.ScheduledDeliveryStatus", ScheduledDeliveryStatus_name, ScheduledDeliveryStatus_value)
	proto.RegisterEnum("rover.campaigns.v1.RateLimit_Unit", RateLimit_Unit_name, RateLimit_Unit_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Campaigns service

type CampaignsClient interface {
	//
	// CRUD
	//
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Archive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (*ArchiveResponse, error)
	Duplicate(ctx context.Context, in *DuplicateRequest, opts ...grpc.CallOption) (*DuplicateResponse, error)
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error)
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
	SendTest(ctx context.Context, in *SendTestRequest, opts ...grpc.CallOption) (*SendTestResponse, error)
	UpdateNotificationSettings(ctx context.Context, in *UpdateNotificationSettingsRequest, opts ...grpc.CallOption) (*UpdateNotificationSettingsResponse, error)
	UpdateScheduledDeliverySettings(ctx context.Context, in *UpdateScheduledDeliverySettingsRequest, opts ...grpc.CallOption) (*UpdateScheduledDeliverySettingsResponse, error)
	UpdateAutomatedDeliverySettings(ctx context.Context, in *UpdateAutomatedDeliverySettingsRequest, opts ...grpc.CallOption) (*UpdateAutomatedDeliverySettingsResponse, error)
}

type campaignsClient struct {
	cc *grpc.ClientConn
}

func NewCampaignsClient(cc *grpc.ClientConn) CampaignsClient {
	return &campaignsClient{cc}
}

func (c *campaignsClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) Archive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (*ArchiveResponse, error) {
	out := new(ArchiveResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/Archive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) Duplicate(ctx context.Context, in *DuplicateRequest, opts ...grpc.CallOption) (*DuplicateResponse, error) {
	out := new(DuplicateResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/Duplicate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error) {
	out := new(RenameResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/Rename", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/Publish", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) SendTest(ctx context.Context, in *SendTestRequest, opts ...grpc.CallOption) (*SendTestResponse, error) {
	out := new(SendTestResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/SendTest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) UpdateNotificationSettings(ctx context.Context, in *UpdateNotificationSettingsRequest, opts ...grpc.CallOption) (*UpdateNotificationSettingsResponse, error) {
	out := new(UpdateNotificationSettingsResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/UpdateNotificationSettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) UpdateScheduledDeliverySettings(ctx context.Context, in *UpdateScheduledDeliverySettingsRequest, opts ...grpc.CallOption) (*UpdateScheduledDeliverySettingsResponse, error) {
	out := new(UpdateScheduledDeliverySettingsResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/UpdateScheduledDeliverySettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignsClient) UpdateAutomatedDeliverySettings(ctx context.Context, in *UpdateAutomatedDeliverySettingsRequest, opts ...grpc.CallOption) (*UpdateAutomatedDeliverySettingsResponse, error) {
	out := new(UpdateAutomatedDeliverySettingsResponse)
	err := grpc.Invoke(ctx, "/rover.campaigns.v1.Campaigns/UpdateAutomatedDeliverySettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Campaigns service

type CampaignsServer interface {
	//
	// CRUD
	//
	List(context.Context, *ListRequest) (*ListResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Archive(context.Context, *ArchiveRequest) (*ArchiveResponse, error)
	Duplicate(context.Context, *DuplicateRequest) (*DuplicateResponse, error)
	Rename(context.Context, *RenameRequest) (*RenameResponse, error)
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
	SendTest(context.Context, *SendTestRequest) (*SendTestResponse, error)
	UpdateNotificationSettings(context.Context, *UpdateNotificationSettingsRequest) (*UpdateNotificationSettingsResponse, error)
	UpdateScheduledDeliverySettings(context.Context, *UpdateScheduledDeliverySettingsRequest) (*UpdateScheduledDeliverySettingsResponse, error)
	UpdateAutomatedDeliverySettings(context.Context, *UpdateAutomatedDeliverySettingsRequest) (*UpdateAutomatedDeliverySettingsResponse, error)
}

func RegisterCampaignsServer(s *grpc.Server, srv CampaignsServer) {
	s.RegisterService(&_Campaigns_serviceDesc, srv)
}

func _Campaigns_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_Archive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).Archive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/Archive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).Archive(ctx, req.(*ArchiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_Duplicate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DuplicateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).Duplicate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/Duplicate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).Duplicate(ctx, req.(*DuplicateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_SendTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).SendTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/SendTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).SendTest(ctx, req.(*SendTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_UpdateNotificationSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNotificationSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).UpdateNotificationSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/UpdateNotificationSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).UpdateNotificationSettings(ctx, req.(*UpdateNotificationSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_UpdateScheduledDeliverySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateScheduledDeliverySettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).UpdateScheduledDeliverySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/UpdateScheduledDeliverySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).UpdateScheduledDeliverySettings(ctx, req.(*UpdateScheduledDeliverySettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Campaigns_UpdateAutomatedDeliverySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAutomatedDeliverySettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignsServer).UpdateAutomatedDeliverySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rover.campaigns.v1.Campaigns/UpdateAutomatedDeliverySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignsServer).UpdateAutomatedDeliverySettings(ctx, req.(*UpdateAutomatedDeliverySettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Campaigns_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rover.campaigns.v1.Campaigns",
	HandlerType: (*CampaignsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Campaigns_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Campaigns_Create_Handler,
		},
		{
			MethodName: "Archive",
			Handler:    _Campaigns_Archive_Handler,
		},
		{
			MethodName: "Duplicate",
			Handler:    _Campaigns_Duplicate_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _Campaigns_Rename_Handler,
		},
		{
			MethodName: "Publish",
			Handler:    _Campaigns_Publish_Handler,
		},
		{
			MethodName: "SendTest",
			Handler:    _Campaigns_SendTest_Handler,
		},
		{
			MethodName: "UpdateNotificationSettings",
			Handler:    _Campaigns_UpdateNotificationSettings_Handler,
		},
		{
			MethodName: "UpdateScheduledDeliverySettings",
			Handler:    _Campaigns_UpdateScheduledDeliverySettings_Handler,
		},
		{
			MethodName: "UpdateAutomatedDeliverySettings",
			Handler:    _Campaigns_UpdateAutomatedDeliverySettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "campaigns/v1/campaigns.proto",
}

func init() { proto.RegisterFile("campaigns/v1/campaigns.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2679 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xec, 0x5b, 0xcd, 0x73, 0xdb, 0xc6,
	0x15, 0x0f, 0x25, 0xd9, 0x96, 0x9e, 0xbe, 0xa8, 0xb5, 0x23, 0x41, 0x94, 0x64, 0xd9, 0xb4, 0xfc,
	0x25, 0xc5, 0x54, 0x6c, 0xe7, 0xc3, 0xb1, 0x93, 0xcc, 0x40, 0x24, 0x6c, 0xa1, 0x96, 0x48, 0x06,
	0x24, 0xed, 0x38, 0xed, 0x0c, 0x0a, 0x91, 0x30, 0x85, 0x29, 0x45, 0x32, 0x00, 0xa8, 0x44, 0xe9,
	0xa1, 0x87, 0xce, 0xa4, 0x33, 0xed, 0xa5, 0x3d, 0xa6, 0xe7, 0x5e, 0x3a, 0xed, 0xad, 0xc7, 0xce,
	0x74, 0xfa, 0xb7, 0xf4, 0xd0, 0x53, 0xff, 0x88, 0xbe, 0x5d, 0x7c, 0x43, 0x00, 0x28, 0x4a, 0x8c,
	0xe3, 0x83, 0x4e, 0x12, 0x76, 0x7f, 0xef, 0xb7, 0x6f, 0xbf, 0xde, 0xbe, 0xfd, 0x69, 0x05, 0xcb,
	0x75, 0xe5, 0xa0, 0xab, 0x68, 0xcd, 0xb6, 0xb1, 0x79, 0x78, 0x7f, 0xd3, 0xfd, 0xc8, 0x75, 0xf5,
	0x8e, 0xd9, 0x21, 0x44, 0xef, 0x1c, 0xaa, 0x7a, 0xce, 0x2b, 0x3e, 0xbc, 0x9f, 0x21, 0x4a, 0xcf,
	0xdc, 0xa7, 0x60, 0xfa, 0xd3, 0xc2, 0x65, 0x16, 0xd9, 0x8f, 0xbd, 0xde, 0xeb, 0xcd, 0xae, 0xae,
	0x36, 0xb4, 0xba, 0x62, 0xaa, 0x36, 0x45, 0x66, 0xb5, 0xd9, 0xe9, 0x34, 0x5b, 0xea, 0xa6, 0x8b,
	0x30, 0xb5, 0x03, 0xd5, 0x30, 0x91, 0xd1, 0x02, 0x64, 0xff, 0x38, 0x02, 0xe3, 0x79, 0xbb, 0x01,
	0xf2, 0x6b, 0x58, 0x35, 0xea, 0xfb, 0x6a, 0xa3, 0xd7, 0x52, 0x1b, 0x72, 0xbb, 0x63, 0x6a, 0xaf,
	0x29, 0x99, 0xd6, 0x69, 0xcb, 0x8e, 0x0f, 0x5c, 0xea, 0x5a, 0xea, 0xce, 0xe4, 0x83, 0xfb, 0xb9,
	0xe3, 0xae, 0xe5, 0x2a, 0x8e, 0x69, 0xd1, 0x67, 0xe9, 0x70, 0x6f, 0xbf, 0x23, 0xad, 0x18, 0x49,
	0x00, 0xda, 0x38, 0xf6, 0xa9, 0x73, 0x80, 0xde, 0xc7, 0x35, 0x3e, 0x12, 0xdf, 0x38, 0xef, 0x98,
	0xc6, 0x35, 0xae, 0x24, 0x01, 0xb6, 0x00, 0xc6, 0x1d, 0xba, 0xec, 0x5f, 0x53, 0x30, 0x9d, 0xd7,
	0x55, 0xc4, 0x4a, 0xea, 0xd7, 0x3d, 0x1c, 0x2d, 0xf2, 0x19, 0x4c, 0xd1, 0xe1, 0x96, 0xeb, 0x9d,
	0xb6, 0xa9, 0x7e, 0x6b, 0xda, 0x83, 0x90, 0xb1, 0xfd, 0x60, 0x33, 0x61, 0xb9, 0xb0, 0x9f, 0xb7,
	0x10, 0xd2, 0xa4, 0xe2, 0x7d, 0x10, 0x02, 0x63, 0x6d, 0xe5, 0x40, 0x65, 0xee, 0x4f, 0x48, 0xec,
	0x77, 0x22, 0xc0, 0xb4, 0xd3, 0xa0, 0x6c, 0x1e, 0x75, 0x55, 0x6e, 0x14, 0x2b, 0x67, 0x1e, 0x5c,
	0x8b, 0xea, 0x9b, 0xe3, 0x65, 0x15, 0x71, 0xd2, 0x54, 0xdd, 0xf7, 0x95, 0xfd, 0x19, 0xcc, 0x38,
	0xae, 0x1a, 0xdd, 0x4e, 0xdb, 0x50, 0xc9, 0x23, 0xaf, 0x27, 0xb6, 0x9f, 0xcb, 0x49, 0x9c, 0x92,
	0xd7, 0xef, 0xbf, 0x8d, 0xc0, 0xe4, 0x8e, 0x66, 0x98, 0x43, 0xea, 0xf5, 0xb1, 0x1e, 0x5e, 0x38,
	0x4d, 0x0f, 0xc9, 0x73, 0x98, 0x75, 0x69, 0x70, 0xe1, 0x9a, 0x3d, 0x83, 0xbb, 0xc8, 0x88, 0xb2,
	0x49, 0x44, 0x15, 0x86, 0x94, 0x66, 0xea, 0x81, 0x6f, 0xc2, 0xc1, 0xa5, 0x5f, 0xa9, 0x47, 0xdf,
	0x74, 0xf4, 0x06, 0x77, 0x89, 0x4d, 0x86, 0xf3, 0x49, 0xe7, 0xa8, 0xab, 0x34, 0x55, 0x6e, 0x1c,
	0x8b, 0x2f, 0x48, 0xec, 0x77, 0xb2, 0x04, 0x13, 0xf4, 0xa7, 0x6c, 0x68, 0xdf, 0xa9, 0xdc, 0x04,
	0xab, 0x18, 0xa7, 0x05, 0x15, 0xfc, 0xc6, 0x91, 0x9f, 0xb2, 0x06, 0xcb, 0x1e, 0xf7, 0xc7, 0x30,
	0xe1, 0x7a, 0x82, 0x43, 0x35, 0xda, 0x77, 0xe0, 0x3d, 0x78, 0xb6, 0x0b, 0x33, 0xbc, 0x5e, 0xdf,
	0xd7, 0x0e, 0x87, 0xb5, 0xe2, 0x56, 0x61, 0xd2, 0x1d, 0x34, 0xad, 0xc1, 0x46, 0xfe, 0x82, 0x04,
	0x4e, 0x91, 0xd8, 0xc8, 0xce, 0xc1, 0xac, 0xdb, 0xa2, 0xd5, 0x81, 0xec, 0xf7, 0x29, 0x48, 0x17,
	0x7a, 0xdd, 0x16, 0x8b, 0x1f, 0x6f, 0xc8, 0x0f, 0x77, 0x6b, 0x5c, 0xf4, 0xb6, 0x46, 0x76, 0x17,
	0xe6, 0x7c, 0x7e, 0x9c, 0x79, 0x59, 0xff, 0x16, 0xb7, 0xb3, 0xa4, 0x52, 0xe6, 0x9f, 0xb2, 0x53,
	0x69, 0x98, 0x71, 0x9c, 0xb0, 0xc7, 0x1b, 0x27, 0xbd, 0xdc, 0xdb, 0x6b, 0x69, 0xc6, 0xfe, 0x1b,
	0x9c, 0x74, 0xb7, 0x45, 0xdb, 0x89, 0xaf, 0x61, 0xb6, 0xa2, 0xb6, 0x1b, 0x55, 0x75, 0x68, 0xdb,
	0xbe, 0xaf, 0x17, 0x04, 0xd2, 0x5e, 0x93, 0xb6, 0x1b, 0xff, 0x9b, 0x81, 0xeb, 0xb5, 0x6e, 0x03,
	0x27, 0xdc, 0x1f, 0x9d, 0x2b, 0xaa, 0x69, 0x6a, 0xed, 0xa6, 0xf1, 0xa6, 0xe6, 0xed, 0x06, 0x4c,
	0xab, 0xdf, 0x76, 0x55, 0x5d, 0x53, 0xdb, 0x75, 0x95, 0x42, 0xac, 0x09, 0x9c, 0xf2, 0x0a, 0x11,
	0xb4, 0x08, 0xe3, 0x3d, 0x8d, 0x45, 0x22, 0x95, 0x03, 0x2b, 0x86, 0xf4, 0x34, 0x1a, 0x5e, 0x54,
	0xb2, 0x01, 0x73, 0x81, 0x73, 0x6b, 0xaf, 0xd3, 0x38, 0xe2, 0x26, 0x19, 0x26, 0xed, 0xaf, 0xd8,
	0xc2, 0x72, 0x72, 0x0f, 0x48, 0x00, 0x6c, 0x6a, 0x66, 0x4b, 0xe5, 0xa6, 0x18, 0x3a, 0x40, 0x53,
	0xa5, 0x15, 0xe4, 0x73, 0x58, 0x0a, 0xc0, 0x15, 0xd3, 0x54, 0xea, 0xfb, 0x07, 0x6a, 0xdb, 0x94,
	0x7b, 0x7a, 0x8b, 0x9b, 0x66, 0x76, 0x8b, 0x7e, 0x08, 0xef, 0x22, 0x6a, 0x7a, 0x8b, 0x74, 0x61,
	0x39, 0xce, 0x9e, 0x05, 0xe7, 0x19, 0x16, 0x53, 0x73, 0x51, 0x7b, 0xaa, 0x18, 0x49, 0xca, 0x42,
	0x75, 0xa6, 0x1d, 0x5b, 0x47, 0x4c, 0xb8, 0x1a, 0xec, 0xa0, 0xd2, 0x95, 0xf7, 0xd4, 0x7d, 0xe5,
	0x50, 0xeb, 0xe8, 0x56, 0x9b, 0xb3, 0xac, 0xcd, 0xcd, 0x7e, 0x6d, 0x56, 0x95, 0xee, 0x96, 0x6d,
	0xc7, 0x1a, 0x0d, 0x0c, 0x44, 0xa8, 0x92, 0xfc, 0x29, 0x05, 0x1b, 0xf1, 0xcd, 0x62, 0x7e, 0x64,
	0xa0, 0x7f, 0x76, 0x0d, 0xf5, 0x21, 0xcd, 0x7c, 0x78, 0x78, 0x02, 0x1f, 0xca, 0x3e, 0x5b, 0xe6,
	0xc7, 0xed, 0x18, 0x3f, 0xc2, 0x40, 0xc2, 0xc3, 0x4a, 0xbc, 0x4b, 0x74, 0xf6, 0xe6, 0xd8, 0xec,
	0x65, 0x62, 0xf8, 0xe8, 0xf4, 0x3d, 0x87, 0x6c, 0x80, 0x42, 0xeb, 0x18, 0xd6, 0x36, 0xc0, 0xf9,
	0x53, 0x0e, 0x15, 0xad, 0xa5, 0xec, 0xe1, 0xea, 0x21, 0xc8, 0x33, 0x2e, 0xad, 0xfa, 0x91, 0x62,
	0xc7, 0xc8, 0x5b, 0x38, 0xde, 0x81, 0x91, 0x67, 0x70, 0xed, 0x18, 0xd9, 0x41, 0xcf, 0xa4, 0x75,
	0x0e, 0x29, 0x77, 0x99, 0x51, 0xad, 0x84, 0xa8, 0x76, 0x2d, 0x94, 0xcd, 0x48, 0x3e, 0x80, 0xf9,
	0x63, 0x44, 0x46, 0xa7, 0xd7, 0x6e, 0x70, 0x57, 0x58, 0x8f, 0xae, 0x84, 0xcc, 0x2b, 0xb4, 0x8e,
	0x94, 0x60, 0xed, 0x78, 0x5f, 0x70, 0xff, 0x34, 0x3b, 0xfa, 0x11, 0xee, 0x3a, 0x24, 0xc6, 0x3a,
	0x55, 0xe7, 0xde, 0x65, 0x1c, 0xd7, 0xc3, 0xbd, 0xb1, 0x91, 0xa2, 0x0b, 0x8c, 0x1c, 0x1c, 0x73,
	0x1f, 0xd3, 0xa2, 0x86, 0x9f, 0x6e, 0x9e, 0xd1, 0x85, 0x07, 0xa7, 0xca, 0x70, 0x3e, 0x32, 0x01,
	0x56, 0x83, 0x1b, 0xa5, 0xdd, 0xd0, 0x3b, 0x5a, 0x43, 0xae, 0xef, 0x2b, 0xed, 0xb6, 0xda, 0xa2,
	0x61, 0x61, 0x81, 0x31, 0x05, 0xf6, 0x13, 0x6f, 0xa1, 0xf2, 0x16, 0x08, 0xc3, 0xc4, 0xa7, 0x90,
	0x89, 0xa4, 0xb1, 0x86, 0x87, 0x63, 0x0c, 0x5c, 0x04, 0x83, 0x35, 0x44, 0x8f, 0x80, 0x8b, 0xb4,
	0x36, 0x95, 0x26, 0xb7, 0xc8, 0x6c, 0xe7, 0x23, 0x6c, 0xab, 0x4a, 0x93, 0x7c, 0x0c, 0x0b, 0x01,
	0x4b, 0x8c, 0x5d, 0x9a, 0xce, 0x7e, 0xe5, 0x32, 0x2c, 0xe0, 0x05, 0x0c, 0x05, 0xb7, 0x96, 0xfc,
	0x3e, 0x15, 0xb2, 0xc4, 0x08, 0xa1, 0x6b, 0x7b, 0x3d, 0xbc, 0x4b, 0x70, 0x4b, 0x2c, 0x9d, 0xf9,
	0x22, 0x6a, 0x93, 0xf4, 0x8d, 0xda, 0xe1, 0xf0, 0x61, 0x73, 0x0a, 0x6d, 0x53, 0x3f, 0x0a, 0xf5,
	0xc2, 0xad, 0x24, 0xbf, 0x08, 0x6d, 0x62, 0xa5, 0xa5, 0xea, 0xa6, 0xdc, 0xe9, 0xb2, 0x8f, 0x6e,
	0xcf, 0xd8, 0x0f, 0x5c, 0x10, 0xb8, 0x65, 0xb6, 0x58, 0x03, 0xfb, 0x91, 0xa7, 0x16, 0x25, 0x66,
	0x50, 0x46, 0xbc, 0xdf, 0x09, 0xf2, 0x4b, 0xb8, 0x17, 0xcf, 0x1e, 0xbc, 0x79, 0xe0, 0xb2, 0xc0,
	0xa5, 0xb3, 0xc2, 0xf8, 0xef, 0xc6, 0xf0, 0x07, 0x2e, 0x14, 0xcc, 0x80, 0x48, 0x70, 0x2b, 0xbe,
	0x85, 0x3d, 0xa5, 0x81, 0x49, 0x65, 0xbb, 0x77, 0xb0, 0x87, 0xd4, 0x57, 0x19, 0x75, 0x36, 0x86,
	0x7a, 0x8b, 0x42, 0x8b, 0x0c, 0x99, 0x11, 0x61, 0x29, 0x61, 0x28, 0x49, 0x1a, 0x46, 0x31, 0x97,
	0x65, 0x67, 0xe2, 0x84, 0x44, 0x7f, 0x25, 0x57, 0xe0, 0xc2, 0xa1, 0xd2, 0xea, 0x39, 0xf7, 0x0e,
	0xeb, 0xe3, 0xf1, 0xc8, 0xa3, 0x54, 0x76, 0x0d, 0xb2, 0x49, 0xf3, 0x66, 0x1f, 0xca, 0x7f, 0x19,
	0x83, 0x5b, 0x16, 0xcc, 0xbd, 0xd9, 0x15, 0xd4, 0x16, 0xa6, 0x8c, 0xfa, 0xd1, 0x9b, 0x3e, 0x99,
	0x13, 0x0e, 0xdd, 0x2f, 0x60, 0xce, 0x50, 0x9b, 0xec, 0x20, 0xc3, 0xd6, 0x1b, 0x1a, 0x5b, 0x10,
	0x93, 0x2c, 0xaa, 0xaf, 0x45, 0xde, 0x52, 0x2d, 0x70, 0xde, 0xc1, 0x4a, 0x69, 0x23, 0x54, 0x42,
	0xdd, 0x71, 0x28, 0xb5, 0x86, 0x81, 0x67, 0xf2, 0x28, 0x36, 0x08, 0x76, 0x91, 0xd8, 0x30, 0xc8,
	0x36, 0xcc, 0x78, 0xf7, 0x64, 0x76, 0x8c, 0x4c, 0xb3, 0x06, 0xaf, 0x27, 0x5e, 0x8b, 0xd9, 0xa1,
	0x31, 0x6d, 0xf8, 0x3f, 0x31, 0x74, 0x5d, 0xf6, 0x31, 0x39, 0x77, 0x73, 0x76, 0x1a, 0xd3, 0xf1,
	0xb3, 0x6e, 0xef, 0x39, 0xe7, 0xf6, 0x9e, 0xab, 0x3a, 0x08, 0x89, 0x78, 0x3c, 0x4e, 0x19, 0xc9,
	0x85, 0xc9, 0xe4, 0xef, 0x3a, 0x6d, 0xeb, 0x98, 0xc5, 0x9c, 0x22, 0x60, 0xf0, 0x15, 0x56, 0x90,
	0x82, 0xff, 0xba, 0xdf, 0x33, 0x54, 0xb9, 0xd5, 0xa9, 0x2b, 0x2d, 0xb9, 0xa1, 0x1e, 0x6a, 0x98,
	0xff, 0x50, 0x02, 0x76, 0x3c, 0x8e, 0x4b, 0x4b, 0x2e, 0xac, 0x66, 0xa8, 0x3b, 0x14, 0x54, 0x60,
	0x18, 0xca, 0x94, 0xbd, 0x0b, 0xb7, 0xfb, 0xae, 0x12, 0x7b, 0x45, 0xfd, 0x7b, 0xc2, 0x59, 0x51,
	0xee, 0x75, 0xfd, 0x7c, 0x45, 0xb1, 0x15, 0x75, 0x17, 0xd2, 0x9e, 0xf8, 0x71, 0x80, 0x76, 0xca,
	0x11, 0x5b, 0x53, 0xe3, 0xd2, 0xac, 0x5b, 0xbe, 0xcb, 0x8a, 0x69, 0x96, 0xe9, 0x41, 0x4d, 0x1c,
	0x2c, 0x8a, 0x9d, 0x61, 0x58, 0x8f, 0xa3, 0x6a, 0x95, 0x93, 0x4d, 0xb8, 0xec, 0x81, 0xbf, 0x51,
	0x1b, 0x6d, 0x0b, 0x3e, 0xcb, 0xe0, 0xc4, 0xad, 0x7a, 0xe9, 0xd4, 0xd0, 0xb4, 0xd4, 0xc7, 0xbe,
	0xdf, 0xd3, 0x19, 0xde, 0x5a, 0x06, 0x5e, 0xbb, 0x55, 0xbb, 0x22, 0xe8, 0xf7, 0x6b, 0x5d, 0xa3,
	0xe0, 0xb9, 0x90, 0xdf, 0x4f, 0x59, 0x71, 0x90, 0xd9, 0xc0, 0xeb, 0xb8, 0x4e, 0xc1, 0x24, 0xc4,
	0x5c, 0xb1, 0x2b, 0x82, 0xcc, 0x46, 0x8f, 0x8d, 0xc8, 0xe5, 0x10, 0x73, 0x85, 0x15, 0x93, 0xf7,
	0xe1, 0x8a, 0x0f, 0x6a, 0x2a, 0x18, 0x6a, 0xe9, 0x1a, 0xb3, 0x93, 0x10, 0xaf, 0xd5, 0x0a, 0xad,
	0x2a, 0xd0, 0x29, 0x7e, 0xcf, 0xef, 0x0b, 0x5e, 0x46, 0x2c, 0xbc, 0x95, 0x70, 0x78, 0xcd, 0x0a,
	0xed, 0x06, 0x43, 0x47, 0xf0, 0xb3, 0xcd, 0x31, 0xcf, 0x56, 0x55, 0x88, 0x9f, 0xee, 0x89, 0xe3,
	0xfc, 0x0c, 0xbf, 0xc0, 0xf0, 0x01, 0x7e, 0x86, 0xce, 0xf9, 0x27, 0xc9, 0xdb, 0xb7, 0x56, 0x92,
	0xe0, 0x1b, 0x74, 0xdf, 0xbe, 0xf5, 0xf0, 0xd1, 0xfb, 0x76, 0xd1, 0xda, 0xb7, 0x2e, 0xec, 0xf8,
	0xbe, 0x0d, 0xf6, 0x4a, 0x3d, 0xa4, 0x6b, 0x93, 0xdd, 0x5a, 0x33, 0xa1, 0x51, 0x13, 0x68, 0x55,
	0x91, 0x6a, 0x56, 0x79, 0xb8, 0xea, 0x9f, 0x6c, 0xba, 0x53, 0xdb, 0xf5, 0x23, 0xd9, 0xc0, 0x7d,
	0x8b, 0x99, 0x23, 0x3a, 0x62, 0x1f, 0x94, 0x4b, 0xbe, 0xa9, 0xb7, 0x41, 0x15, 0x86, 0x41, 0x2f,
	0xf0, 0xf0, 0xcd, 0x84, 0x9b, 0xf5, 0x54, 0x4b, 0x76, 0x1c, 0x4e, 0xba, 0xd2, 0x8e, 0x1b, 0xf7,
	0xca, 0x0e, 0x82, 0x6f, 0x36, 0x75, 0xb5, 0x49, 0x85, 0x01, 0x2e, 0xe8, 0xa0, 0x8b, 0x30, 0xc8,
	0xcf, 0xfd, 0x2d, 0x78, 0x6e, 0xb6, 0xb4, 0x03, 0xcd, 0x34, 0xb8, 0x55, 0x96, 0xcb, 0xac, 0x44,
	0x6d, 0x64, 0x09, 0x2d, 0x76, 0x28, 0xca, 0x47, 0xee, 0xf6, 0x80, 0x55, 0x18, 0x5e, 0xb4, 0x4b,
	0x88, 0x60, 0x76, 0xb4, 0xfb, 0x7b, 0x0a, 0x26, 0x5c, 0x4a, 0x7a, 0x1a, 0x33, 0x0f, 0x58, 0x24,
	0xbb, 0x20, 0x59, 0x1f, 0xe4, 0x26, 0xcc, 0x68, 0x34, 0x63, 0xc0, 0xb3, 0x19, 0x83, 0x4d, 0x0f,
	0x13, 0xef, 0x11, 0x56, 0x3d, 0xed, 0x94, 0xe6, 0x69, 0x21, 0x66, 0xec, 0x6e, 0x81, 0xdc, 0x6b,
	0x23, 0xc9, 0x68, 0xbc, 0x04, 0xe6, 0x36, 0x99, 0xab, 0x21, 0x52, 0x9a, 0x72, 0x0c, 0xe9, 0x57,
	0x76, 0x11, 0xc6, 0xe8, 0x4f, 0x32, 0x0e, 0x63, 0xdb, 0xa5, 0x9a, 0x94, 0x7e, 0x87, 0x5c, 0x82,
	0xd1, 0x02, 0xff, 0x2a, 0x9d, 0xca, 0xfe, 0xf7, 0x32, 0xac, 0x24, 0x4a, 0xb8, 0xe1, 0xa0, 0x9a,
	0x8a, 0x15, 0x3e, 0xfc, 0x42, 0x67, 0x84, 0x7e, 0x37, 0x7a, 0x6a, 0xfd, 0xee, 0xd8, 0x0d, 0x7d,
	0x2c, 0xe2, 0x86, 0xfe, 0x09, 0x40, 0x9d, 0x69, 0xa2, 0x0d, 0xcc, 0x61, 0x99, 0xa0, 0x97, 0x7c,
	0x94, 0x4e, 0xd8, 0x68, 0xde, 0xa4, 0xa6, 0x3d, 0x36, 0xbb, 0xcc, 0x74, 0xa2, 0xbf, 0xa9, 0x8d,
	0x46, 0xd3, 0xb7, 0xec, 0x40, 0x89, 0xd4, 0x22, 0xae, 0x0c, 0xa4, 0x45, 0xbc, 0x7b, 0x4a, 0x2d,
	0x62, 0xfe, 0xac, 0x5a, 0xc4, 0xc2, 0x4f, 0xa0, 0x45, 0x70, 0x6f, 0x81, 0x16, 0xb1, 0xf8, 0x36,
	0x68, 0x11, 0x99, 0x21, 0x69, 0x11, 0x4b, 0xc3, 0xd3, 0x22, 0x96, 0xcf, 0xa6, 0x45, 0xac, 0x0c,
	0x41, 0x8b, 0xb8, 0x3a, 0x5c, 0x2d, 0x62, 0x75, 0x68, 0x5a, 0xc4, 0xb5, 0x33, 0x6b, 0x11, 0xd7,
	0xcf, 0xa0, 0x45, 0x64, 0x4f, 0xab, 0x45, 0xdc, 0x48, 0xd4, 0x22, 0xbe, 0x4f, 0xd0, 0x22, 0xd6,
	0xd8, 0xf9, 0xbd, 0x3b, 0xf0, 0x1f, 0x20, 0xdf, 0x84, 0x0e, 0x71, 0xf3, 0x47, 0xd6, 0x21, 0x6e,
	0xfd, 0x78, 0x3a, 0xc4, 0xed, 0x93, 0xea, 0x10, 0x11, 0x97, 0xdf, 0x3b, 0xc3, 0xbd, 0xfc, 0xde,
	0x1d, 0xe6, 0xe5, 0x77, 0xfd, 0x0c, 0x97, 0xdf, 0x8d, 0xbe, 0x97, 0x5f, 0xd2, 0x84, 0x45, 0x8f,
	0xa5, 0x61, 0x67, 0x82, 0x4e, 0x9e, 0xf3, 0x1e, 0x1b, 0x97, 0x8d, 0xc4, 0x71, 0x71, 0xb3, 0x47,
	0x2b, 0xe1, 0x59, 0x30, 0xa2, 0x2b, 0x86, 0xa9, 0xfe, 0xfc, 0xc0, 0xc1, 0x4a, 0xe2, 0x9f, 0xcb,
	0xcf, 0x13, 0xbd, 0xf3, 0x44, 0xef, 0x3c, 0xd1, 0x3b, 0x4f, 0xf4, 0xce, 0x13, 0xbd, 0xf3, 0x44,
	0xef, 0xad, 0x4c, 0xf4, 0x12, 0x4f, 0xaf, 0xf3, 0x44, 0x6f, 0x48, 0x89, 0x5e, 0x94, 0x26, 0x9d,
	0x1b, 0x40, 0x93, 0xde, 0x1c, 0x4c, 0x93, 0x7e, 0x7f, 0x40, 0x4d, 0xfa, 0xfe, 0x20, 0x9a, 0xf4,
	0x83, 0x41, 0x34, 0xe9, 0x87, 0x83, 0x68, 0xd2, 0x1f, 0x0c, 0xa6, 0x49, 0x7f, 0x38, 0xa0, 0x26,
	0xfd, 0xd1, 0x80, 0x9a, 0xf4, 0xc7, 0x03, 0x6a, 0xd2, 0x8f, 0x06, 0xd3, 0xa4, 0x3f, 0x39, 0x83,
	0x26, 0xfd, 0xf8, 0xf4, 0x9a, 0xf4, 0x93, 0x58, 0x4d, 0x3a, 0x59, 0x4e, 0xfe, 0x74, 0x08, 0x72,
	0x72, 0x7f, 0xd5, 0xfb, 0xb3, 0xfe, 0xaa, 0x77, 0xb2, 0x26, 0xfd, 0xf9, 0x99, 0x34, 0xe9, 0x21,
	0xde, 0x0d, 0xd6, 0x7f, 0x03, 0x53, 0xfe, 0xb7, 0x98, 0x64, 0x09, 0x16, 0xf2, 0xfc, 0x6e, 0x99,
	0x17, 0x9f, 0x15, 0xe5, 0xea, 0xab, 0xb2, 0x20, 0xd7, 0x8a, 0x05, 0xe1, 0xa9, 0x58, 0x14, 0x0a,
	0xe9, 0x77, 0xc8, 0x1d, 0x58, 0x0b, 0x56, 0x56, 0xf2, 0xdb, 0x42, 0xa1, 0xb6, 0x23, 0x14, 0xe4,
	0x62, 0xa9, 0x2a, 0x3e, 0x15, 0xf3, 0x7c, 0x55, 0x2c, 0x15, 0xd3, 0xa9, 0xe3, 0x48, 0xbe, 0x56,
	0x2d, 0xed, 0xf2, 0xd5, 0x30, 0x72, 0x64, 0xfd, 0x77, 0x29, 0x98, 0x09, 0xde, 0x0d, 0xc8, 0x0a,
	0x2c, 0xba, 0xc6, 0x95, 0x2a, 0x5f, 0xad, 0x55, 0x02, 0x5e, 0x2c, 0xc2, 0xbb, 0xe1, 0xea, 0x82,
	0xc4, 0x3f, 0xad, 0x62, 0xb3, 0x11, 0x96, 0xe5, 0xda, 0xd6, 0x8e, 0x58, 0x41, 0x37, 0xd3, 0x23,
	0x64, 0x19, 0xb8, 0x70, 0x35, 0x2f, 0xe5, 0xb7, 0xc5, 0x17, 0x58, 0x3b, 0xba, 0xbe, 0x4d, 0xdf,
	0xa9, 0x85, 0xb2, 0x71, 0x6c, 0xab, 0x22, 0x3c, 0xdb, 0x15, 0x8a, 0x55, 0x39, 0x5f, 0x2a, 0x16,
	0x44, 0xea, 0xb4, 0xcc, 0x17, 0x5f, 0x59, 0x6e, 0x44, 0x54, 0xed, 0xec, 0xa4, 0x53, 0xeb, 0xff,
	0x4a, 0x41, 0x26, 0x3e, 0x9f, 0xa5, 0x83, 0xe3, 0x1f, 0x04, 0x99, 0xaf, 0x56, 0xf9, 0xfc, 0x36,
	0x63, 0xb2, 0x87, 0xfc, 0x79, 0xb1, 0xf4, 0xb2, 0x88, 0x6d, 0xdc, 0x82, 0x6c, 0x22, 0x52, 0xdc,
	0xe5, 0x9f, 0x09, 0xd8, 0xef, 0x7e, 0x38, 0xbe, 0x56, 0x10, 0x4b, 0x38, 0x00, 0xfd, 0x70, 0x2f,
	0xc4, 0x82, 0x50, 0xc2, 0xa1, 0xf8, 0x4f, 0x2a, 0xb8, 0xc2, 0xc2, 0xf9, 0xef, 0x03, 0xc8, 0x05,
	0x78, 0xaa, 0x7c, 0x59, 0xde, 0x12, 0xb6, 0xf9, 0x17, 0x62, 0x49, 0xb2, 0x98, 0x4a, 0x65, 0xa1,
	0x28, 0x0b, 0x5f, 0x96, 0x05, 0x49, 0x14, 0x8a, 0x79, 0x01, 0xfb, 0xb2, 0x01, 0xb7, 0x4f, 0x62,
	0xc3, 0x97, 0xcb, 0xd8, 0xa1, 0xfb, 0x70, 0xef, 0x24, 0xe0, 0x82, 0x20, 0x94, 0xe5, 0x1d, 0xb1,
	0xf8, 0x1c, 0xfb, 0xb6, 0x09, 0x1b, 0x27, 0x31, 0x79, 0x29, 0x6c, 0x55, 0xc4, 0xaa, 0x80, 0x9d,
	0xfc, 0x47, 0x0a, 0x56, 0xfb, 0x64, 0xdf, 0x18, 0x15, 0xd7, 0x8f, 0x91, 0x96, 0x25, 0xa1, 0x82,
	0x23, 0x66, 0x17, 0x04, 0x27, 0xec, 0x1e, 0xdc, 0x3d, 0x01, 0x5e, 0x4c, 0xea, 0x66, 0x24, 0x7c,
	0x4b, 0x2a, 0xbd, 0xac, 0x08, 0x12, 0xee, 0x17, 0x01, 0xa6, 0x03, 0x1a, 0x0b, 0x99, 0x07, 0xe2,
	0x6d, 0x43, 0x86, 0x47, 0x5f, 0xd0, 0x15, 0x5c, 0xec, 0xa1, 0x72, 0xf7, 0x13, 0x97, 0xe8, 0x3f,
	0x31, 0x11, 0x8b, 0xd1, 0x24, 0xc8, 0x4d, 0xb8, 0xee, 0x59, 0x16, 0x84, 0x1d, 0xdc, 0x1f, 0xd2,
	0x2b, 0x6f, 0x27, 0x3a, 0x7d, 0xbd, 0x0d, 0x37, 0xe2, 0x61, 0xbe, 0xb6, 0xe8, 0x7a, 0x8f, 0x07,
	0x8a, 0xc5, 0xb2, 0x54, 0x7a, 0x86, 0x7d, 0xae, 0x58, 0xeb, 0x33, 0x1e, 0x89, 0xfb, 0xdf, 0xda,
	0xc8, 0xa3, 0x0f, 0x7e, 0x18, 0x87, 0x09, 0x27, 0x68, 0x18, 0x44, 0x84, 0x31, 0xfa, 0x32, 0x9b,
	0xac, 0x46, 0xc5, 0x53, 0xdf, 0x03, 0xf7, 0xcc, 0xb5, 0x78, 0x80, 0xfd, 0xea, 0xb8, 0x04, 0x17,
	0xad, 0xe7, 0xf5, 0x24, 0x52, 0xdd, 0x0a, 0xfc, 0x97, 0x40, 0x26, 0x9b, 0x04, 0xb1, 0x09, 0x25,
	0xb8, 0x64, 0xbf, 0xbb, 0x26, 0x91, 0xf0, 0xe0, 0x33, 0xf0, 0xcc, 0x8d, 0x44, 0x8c, 0xcd, 0xf9,
	0x25, 0x4c, 0xb8, 0xef, 0xa5, 0x49, 0xa4, 0xce, 0x10, 0x7e, 0xd6, 0x9d, 0xb9, 0xd9, 0x07, 0xe5,
	0x75, 0xdf, 0x7a, 0xb4, 0x1c, 0xdd, 0xfd, 0xc0, 0xab, 0xea, 0xe8, 0xee, 0x07, 0xdf, 0x3c, 0xd3,
	0xee, 0xdb, 0x2f, 0x90, 0xa3, 0xbb, 0x1f, 0x7c, 0x10, 0x1d, 0xdd, 0xfd, 0xd0, 0x13, 0x66, 0x52,
	0x83, 0x71, 0xe7, 0x3d, 0x31, 0xb9, 0x11, 0xad, 0xb2, 0x04, 0x1e, 0x38, 0x67, 0xd6, 0x92, 0x41,
	0x36, 0xed, 0x1f, 0x30, 0x68, 0xc7, 0x3f, 0x92, 0x22, 0x1f, 0x9e, 0xea, 0x31, 0x5c, 0xe6, 0xa3,
	0x41, 0xcd, 0x6c, 0x6f, 0xfe, 0x8c, 0xc1, 0xa9, 0xcf, 0x2b, 0x1b, 0xf2, 0x38, 0x9e, 0xbb, 0xdf,
	0x03, 0xae, 0xcc, 0x93, 0x53, 0xd9, 0x1e, 0x73, 0x2e, 0xf6, 0x8f, 0xe2, 0x49, 0xce, 0xf5, 0x7b,
	0x0b, 0x94, 0xe4, 0x5c, 0xdf, 0xbf, 0xc2, 0x6f, 0x65, 0xbe, 0xe2, 0xfc, 0xff, 0x64, 0xf5, 0xc4,
	0xfd, 0xe8, 0xee, 0xed, 0x5d, 0x64, 0x19, 0xe1, 0xc3, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd2,
	0x7b, 0xbc, 0xea, 0x87, 0x35, 0x00, 0x00,
}
