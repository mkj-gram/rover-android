/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var auth_v1_auth_pb = require('../../auth/v1/auth_pb.js');
goog.exportSymbol('proto.rover.csv_processor.v1.CreateLoadJobReply', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.CreateLoadJobRequest', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.GCSObject', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.GetLoadJobReply', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.GetLoadJobRequest', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.JobStatus', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.JobType', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.LoadJob', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.ProfileLoadJobConfig', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.SegmentLoadJobConfig', null, global);
goog.exportSymbol('proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.GCSObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.GCSObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.GCSObject.displayName = 'proto.rover.csv_processor.v1.GCSObject';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.GCSObject.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.GCSObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.GCSObject} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.GCSObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bucket: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.GCSObject}
 */
proto.rover.csv_processor.v1.GCSObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.GCSObject;
  return proto.rover.csv_processor.v1.GCSObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.GCSObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.GCSObject}
 */
proto.rover.csv_processor.v1.GCSObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.GCSObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.GCSObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.GCSObject} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.GCSObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBucket();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.rover.csv_processor.v1.GCSObject.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rover.csv_processor.v1.GCSObject.prototype.setProjectId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string bucket = 2;
 * @return {string}
 */
proto.rover.csv_processor.v1.GCSObject.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rover.csv_processor.v1.GCSObject.prototype.setBucket = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string file_id = 3;
 * @return {string}
 */
proto.rover.csv_processor.v1.GCSObject.prototype.getFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rover.csv_processor.v1.GCSObject.prototype.setFileId = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.LoadJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.LoadJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.LoadJob.displayName = 'proto.rover.csv_processor.v1.LoadJob';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.LoadJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.LoadJob} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.LoadJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    progress: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    failedReason: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.LoadJob}
 */
proto.rover.csv_processor.v1.LoadJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.LoadJob;
  return proto.rover.csv_processor.v1.LoadJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.LoadJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.LoadJob}
 */
proto.rover.csv_processor.v1.LoadJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    case 3:
      var value = /** @type {!proto.rover.csv_processor.v1.JobType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {!proto.rover.csv_processor.v1.JobStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProgress(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailedReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.LoadJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.LoadJob} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.LoadJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFailedReason();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.LoadJob.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 account_id = 2;
 * @return {number}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.LoadJob.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional JobType type = 3;
 * @return {!proto.rover.csv_processor.v1.JobType}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.getType = function() {
  return /** @type {!proto.rover.csv_processor.v1.JobType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.rover.csv_processor.v1.JobType} value */
proto.rover.csv_processor.v1.LoadJob.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional JobStatus status = 4;
 * @return {!proto.rover.csv_processor.v1.JobStatus}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.getStatus = function() {
  return /** @type {!proto.rover.csv_processor.v1.JobStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.rover.csv_processor.v1.JobStatus} value */
proto.rover.csv_processor.v1.LoadJob.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 progress = 5;
 * @return {number}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.LoadJob.prototype.setProgress = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.rover.csv_processor.v1.LoadJob.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.rover.csv_processor.v1.LoadJob.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string failed_reason = 7;
 * @return {string}
 */
proto.rover.csv_processor.v1.LoadJob.prototype.getFailedReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.rover.csv_processor.v1.LoadJob.prototype.setFailedReason = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.SegmentLoadJobConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.SegmentLoadJobConfig.displayName = 'proto.rover.csv_processor.v1.SegmentLoadJobConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.SegmentLoadJobConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.SegmentLoadJobConfig} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    segmentId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    csv: (f = msg.getCsv()) && proto.rover.csv_processor.v1.GCSObject.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.SegmentLoadJobConfig}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.SegmentLoadJobConfig;
  return proto.rover.csv_processor.v1.SegmentLoadJobConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.SegmentLoadJobConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.SegmentLoadJobConfig}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSegmentId(value);
      break;
    case 3:
      var value = new proto.rover.csv_processor.v1.GCSObject;
      reader.readMessage(value,proto.rover.csv_processor.v1.GCSObject.deserializeBinaryFromReader);
      msg.setCsv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.SegmentLoadJobConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.SegmentLoadJobConfig} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSegmentId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCsv();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rover.csv_processor.v1.GCSObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 account_id = 1;
 * @return {number}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 segment_id = 2;
 * @return {number}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.getSegmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.setSegmentId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional GCSObject csv = 3;
 * @return {?proto.rover.csv_processor.v1.GCSObject}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.getCsv = function() {
  return /** @type{?proto.rover.csv_processor.v1.GCSObject} */ (
    jspb.Message.getWrapperField(this, proto.rover.csv_processor.v1.GCSObject, 3));
};


/** @param {?proto.rover.csv_processor.v1.GCSObject|undefined} value */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.setCsv = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.clearCsv = function() {
  this.setCsv(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.SegmentLoadJobConfig.prototype.hasCsv = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.displayName = 'proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    staticSegmentId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    csvFileId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig;
  return proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStaticSegmentId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCsvFileId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStaticSegmentId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCsvFileId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 account_id = 1;
 * @return {number}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 static_segment_id = 2;
 * @return {number}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.getStaticSegmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.setStaticSegmentId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 csv_file_id = 3;
 * @return {number}
 */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.getCsvFileId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.prototype.setCsvFileId = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rover.csv_processor.v1.ProfileLoadJobConfig.repeatedFields_, null);
};
goog.inherits(proto.rover.csv_processor.v1.ProfileLoadJobConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.ProfileLoadJobConfig.displayName = 'proto.rover.csv_processor.v1.ProfileLoadJobConfig';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.ProfileLoadJobConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.ProfileLoadJobConfig} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    csvFileId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    schemaList: jspb.Message.toObjectList(msg.getSchemaList(),
    proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.ProfileLoadJobConfig}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.ProfileLoadJobConfig;
  return proto.rover.csv_processor.v1.ProfileLoadJobConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.ProfileLoadJobConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.ProfileLoadJobConfig}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCsvFileId(value);
      break;
    case 3:
      var value = new proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema;
      reader.readMessage(value,proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.deserializeBinaryFromReader);
      msg.addSchema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.ProfileLoadJobConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.ProfileLoadJobConfig} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCsvFileId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSchemaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.displayName = 'proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    field: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema;
  return proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string field = 2;
 * @return {string}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.setField = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 account_id = 1;
 * @return {number}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 csv_file_id = 2;
 * @return {number}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.getCsvFileId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.setCsvFileId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated Schema schema = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema>}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.getSchemaList = function() {
  return /** @type{!Array.<!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema, 3));
};


/** @param {!Array.<!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema>} value */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.setSchemaList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema}
 */
proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.addSchema = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rover.csv_processor.v1.ProfileLoadJobConfig.Schema, opt_index);
};


proto.rover.csv_processor.v1.ProfileLoadJobConfig.prototype.clearSchemaList = function() {
  this.setSchemaList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.GetLoadJobRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.GetLoadJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.GetLoadJobRequest.displayName = 'proto.rover.csv_processor.v1.GetLoadJobRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.GetLoadJobRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.GetLoadJobRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && auth_v1_auth_pb.AuthContext.toObject(includeInstance, f),
    loadJobId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    queueVersion: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.GetLoadJobRequest}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.GetLoadJobRequest;
  return proto.rover.csv_processor.v1.GetLoadJobRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.GetLoadJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.GetLoadJobRequest}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_v1_auth_pb.AuthContext;
      reader.readMessage(value,auth_v1_auth_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLoadJobId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQueueVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.GetLoadJobRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.GetLoadJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_v1_auth_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getLoadJobId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQueueVersion();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional rover.auth.v1.AuthContext auth_context = 1;
 * @return {?proto.rover.auth.v1.AuthContext}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.rover.auth.v1.AuthContext} */ (
    jspb.Message.getWrapperField(this, auth_v1_auth_pb.AuthContext, 1));
};


/** @param {?proto.rover.auth.v1.AuthContext|undefined} value */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.setAuthContext = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.clearAuthContext = function() {
  this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 load_job_id = 2;
 * @return {number}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.getLoadJobId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.setLoadJobId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 queue_version = 3;
 * @return {number}
 */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.getQueueVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.rover.csv_processor.v1.GetLoadJobRequest.prototype.setQueueVersion = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.GetLoadJobReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.GetLoadJobReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.GetLoadJobReply.displayName = 'proto.rover.csv_processor.v1.GetLoadJobReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.GetLoadJobReply.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.GetLoadJobReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.GetLoadJobReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.GetLoadJobReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.rover.csv_processor.v1.LoadJob.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.GetLoadJobReply}
 */
proto.rover.csv_processor.v1.GetLoadJobReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.GetLoadJobReply;
  return proto.rover.csv_processor.v1.GetLoadJobReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.GetLoadJobReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.GetLoadJobReply}
 */
proto.rover.csv_processor.v1.GetLoadJobReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rover.csv_processor.v1.LoadJob;
      reader.readMessage(value,proto.rover.csv_processor.v1.LoadJob.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.GetLoadJobReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.GetLoadJobReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.GetLoadJobReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.GetLoadJobReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rover.csv_processor.v1.LoadJob.serializeBinaryToWriter
    );
  }
};


/**
 * optional LoadJob job = 1;
 * @return {?proto.rover.csv_processor.v1.LoadJob}
 */
proto.rover.csv_processor.v1.GetLoadJobReply.prototype.getJob = function() {
  return /** @type{?proto.rover.csv_processor.v1.LoadJob} */ (
    jspb.Message.getWrapperField(this, proto.rover.csv_processor.v1.LoadJob, 1));
};


/** @param {?proto.rover.csv_processor.v1.LoadJob|undefined} value */
proto.rover.csv_processor.v1.GetLoadJobReply.prototype.setJob = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rover.csv_processor.v1.GetLoadJobReply.prototype.clearJob = function() {
  this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.GetLoadJobReply.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rover.csv_processor.v1.CreateLoadJobRequest.oneofGroups_);
};
goog.inherits(proto.rover.csv_processor.v1.CreateLoadJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.CreateLoadJobRequest.displayName = 'proto.rover.csv_processor.v1.CreateLoadJobRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.JobConfigCase = {
  JOB_CONFIG_NOT_SET: 0,
  SEGMENT_LOAD_JOB_CONFIG: 3,
  SEGMENT_LOAD_JOB_WITH_CSV_FILE_CONFIG: 4,
  PROFILE_LOAD_JOB_CONFIG: 5
};

/**
 * @return {proto.rover.csv_processor.v1.CreateLoadJobRequest.JobConfigCase}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.getJobConfigCase = function() {
  return /** @type {proto.rover.csv_processor.v1.CreateLoadJobRequest.JobConfigCase} */(jspb.Message.computeOneofCase(this, proto.rover.csv_processor.v1.CreateLoadJobRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.CreateLoadJobRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.CreateLoadJobRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && auth_v1_auth_pb.AuthContext.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    segmentLoadJobConfig: (f = msg.getSegmentLoadJobConfig()) && proto.rover.csv_processor.v1.SegmentLoadJobConfig.toObject(includeInstance, f),
    segmentLoadJobWithCsvFileConfig: (f = msg.getSegmentLoadJobWithCsvFileConfig()) && proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.toObject(includeInstance, f),
    profileLoadJobConfig: (f = msg.getProfileLoadJobConfig()) && proto.rover.csv_processor.v1.ProfileLoadJobConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.CreateLoadJobRequest}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.CreateLoadJobRequest;
  return proto.rover.csv_processor.v1.CreateLoadJobRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.CreateLoadJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.CreateLoadJobRequest}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_v1_auth_pb.AuthContext;
      reader.readMessage(value,auth_v1_auth_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {!proto.rover.csv_processor.v1.JobType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.rover.csv_processor.v1.SegmentLoadJobConfig;
      reader.readMessage(value,proto.rover.csv_processor.v1.SegmentLoadJobConfig.deserializeBinaryFromReader);
      msg.setSegmentLoadJobConfig(value);
      break;
    case 4:
      var value = new proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig;
      reader.readMessage(value,proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.deserializeBinaryFromReader);
      msg.setSegmentLoadJobWithCsvFileConfig(value);
      break;
    case 5:
      var value = new proto.rover.csv_processor.v1.ProfileLoadJobConfig;
      reader.readMessage(value,proto.rover.csv_processor.v1.ProfileLoadJobConfig.deserializeBinaryFromReader);
      msg.setProfileLoadJobConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.CreateLoadJobRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.CreateLoadJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_v1_auth_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSegmentLoadJobConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rover.csv_processor.v1.SegmentLoadJobConfig.serializeBinaryToWriter
    );
  }
  f = message.getSegmentLoadJobWithCsvFileConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig.serializeBinaryToWriter
    );
  }
  f = message.getProfileLoadJobConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rover.csv_processor.v1.ProfileLoadJobConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional rover.auth.v1.AuthContext auth_context = 1;
 * @return {?proto.rover.auth.v1.AuthContext}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.rover.auth.v1.AuthContext} */ (
    jspb.Message.getWrapperField(this, auth_v1_auth_pb.AuthContext, 1));
};


/** @param {?proto.rover.auth.v1.AuthContext|undefined} value */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.setAuthContext = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.clearAuthContext = function() {
  this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JobType type = 2;
 * @return {!proto.rover.csv_processor.v1.JobType}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.getType = function() {
  return /** @type {!proto.rover.csv_processor.v1.JobType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.rover.csv_processor.v1.JobType} value */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.setType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional SegmentLoadJobConfig segment_load_job_config = 3;
 * @return {?proto.rover.csv_processor.v1.SegmentLoadJobConfig}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.getSegmentLoadJobConfig = function() {
  return /** @type{?proto.rover.csv_processor.v1.SegmentLoadJobConfig} */ (
    jspb.Message.getWrapperField(this, proto.rover.csv_processor.v1.SegmentLoadJobConfig, 3));
};


/** @param {?proto.rover.csv_processor.v1.SegmentLoadJobConfig|undefined} value */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.setSegmentLoadJobConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.rover.csv_processor.v1.CreateLoadJobRequest.oneofGroups_[0], value);
};


proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.clearSegmentLoadJobConfig = function() {
  this.setSegmentLoadJobConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.hasSegmentLoadJobConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SegmentLoadJobWithCsvFileConfig segment_load_job_with_csv_file_config = 4;
 * @return {?proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.getSegmentLoadJobWithCsvFileConfig = function() {
  return /** @type{?proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig} */ (
    jspb.Message.getWrapperField(this, proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig, 4));
};


/** @param {?proto.rover.csv_processor.v1.SegmentLoadJobWithCsvFileConfig|undefined} value */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.setSegmentLoadJobWithCsvFileConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.rover.csv_processor.v1.CreateLoadJobRequest.oneofGroups_[0], value);
};


proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.clearSegmentLoadJobWithCsvFileConfig = function() {
  this.setSegmentLoadJobWithCsvFileConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.hasSegmentLoadJobWithCsvFileConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProfileLoadJobConfig profile_load_job_config = 5;
 * @return {?proto.rover.csv_processor.v1.ProfileLoadJobConfig}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.getProfileLoadJobConfig = function() {
  return /** @type{?proto.rover.csv_processor.v1.ProfileLoadJobConfig} */ (
    jspb.Message.getWrapperField(this, proto.rover.csv_processor.v1.ProfileLoadJobConfig, 5));
};


/** @param {?proto.rover.csv_processor.v1.ProfileLoadJobConfig|undefined} value */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.setProfileLoadJobConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.rover.csv_processor.v1.CreateLoadJobRequest.oneofGroups_[0], value);
};


proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.clearProfileLoadJobConfig = function() {
  this.setProfileLoadJobConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.CreateLoadJobRequest.prototype.hasProfileLoadJobConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rover.csv_processor.v1.CreateLoadJobReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rover.csv_processor.v1.CreateLoadJobReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rover.csv_processor.v1.CreateLoadJobReply.displayName = 'proto.rover.csv_processor.v1.CreateLoadJobReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.prototype.toObject = function(opt_includeInstance) {
  return proto.rover.csv_processor.v1.CreateLoadJobReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rover.csv_processor.v1.CreateLoadJobReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.rover.csv_processor.v1.LoadJob.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rover.csv_processor.v1.CreateLoadJobReply}
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rover.csv_processor.v1.CreateLoadJobReply;
  return proto.rover.csv_processor.v1.CreateLoadJobReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rover.csv_processor.v1.CreateLoadJobReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rover.csv_processor.v1.CreateLoadJobReply}
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rover.csv_processor.v1.LoadJob;
      reader.readMessage(value,proto.rover.csv_processor.v1.LoadJob.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rover.csv_processor.v1.CreateLoadJobReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rover.csv_processor.v1.CreateLoadJobReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rover.csv_processor.v1.LoadJob.serializeBinaryToWriter
    );
  }
};


/**
 * optional LoadJob job = 1;
 * @return {?proto.rover.csv_processor.v1.LoadJob}
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.prototype.getJob = function() {
  return /** @type{?proto.rover.csv_processor.v1.LoadJob} */ (
    jspb.Message.getWrapperField(this, proto.rover.csv_processor.v1.LoadJob, 1));
};


/** @param {?proto.rover.csv_processor.v1.LoadJob|undefined} value */
proto.rover.csv_processor.v1.CreateLoadJobReply.prototype.setJob = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rover.csv_processor.v1.CreateLoadJobReply.prototype.clearJob = function() {
  this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rover.csv_processor.v1.CreateLoadJobReply.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.rover.csv_processor.v1.JobType = {
  SEGMENT: 0,
  SEGMENT_WITH_CSV_FILE: 1,
  PROFILE_IMPORT: 2
};

/**
 * @enum {number}
 */
proto.rover.csv_processor.v1.JobStatus = {
  UNKNOWN: 0,
  ENQUEUED: 1,
  PROCESSING: 2,
  FAILED: 3,
  COMPLETED: 4
};

goog.object.extend(exports, proto.rover.csv_processor.v1);
