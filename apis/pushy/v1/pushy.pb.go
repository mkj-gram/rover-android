// Code generated by protoc-gen-go.
// source: pushy/v1/pushy.proto
// DO NOT EDIT!

package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Device_Platform int32

const (
	Device_IOS     Device_Platform = 0
	Device_ANDROID Device_Platform = 1
)

var Device_Platform_name = map[int32]string{
	0: "IOS",
	1: "ANDROID",
}
var Device_Platform_value = map[string]int32{
	"IOS":     0,
	"ANDROID": 1,
}

func (x Device_Platform) String() string {
	return proto.EnumName(Device_Platform_name, int32(x))
}
func (Device_Platform) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

type Device struct {
	// The internal id of the device
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The token used for push
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	// Used to tie the device to a platform
	AccountId int32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Used in special cases where a universal platform is needed
	AppIdentifier string `protobuf:"bytes,4,opt,name=app_identifier,json=appIdentifier" json:"app_identifier,omitempty"`
	// Which service to use to send to a notification to a device
	Platform Device_Platform `protobuf:"varint,5,opt,name=platform,enum=pushy.v1.Device_Platform" json:"platform,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Device) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Device) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Device) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Device) GetAppIdentifier() string {
	if m != nil {
		return m.AppIdentifier
	}
	return ""
}

func (m *Device) GetPlatform() Device_Platform {
	if m != nil {
		return m.Platform
	}
	return Device_IOS
}

type IosPlatform struct {
	Id                  int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AccountId           int32  `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	BundleId            string `protobuf:"bytes,3,opt,name=bundle_id,json=bundleId" json:"bundle_id,omitempty"`
	CertificatePassword string `protobuf:"bytes,4,opt,name=certificate_password,json=certificatePassword" json:"certificate_password,omitempty"`
	Certifcate          string `protobuf:"bytes,5,opt,name=certifcate" json:"certifcate,omitempty"`
}

func (m *IosPlatform) Reset()                    { *m = IosPlatform{} }
func (m *IosPlatform) String() string            { return proto.CompactTextString(m) }
func (*IosPlatform) ProtoMessage()               {}
func (*IosPlatform) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *IosPlatform) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IosPlatform) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *IosPlatform) GetBundleId() string {
	if m != nil {
		return m.BundleId
	}
	return ""
}

func (m *IosPlatform) GetCertificatePassword() string {
	if m != nil {
		return m.CertificatePassword
	}
	return ""
}

func (m *IosPlatform) GetCertifcate() string {
	if m != nil {
		return m.Certifcate
	}
	return ""
}

type AndroidPlatform struct {
	Id             int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AccountId      int32  `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PackageName    string `protobuf:"bytes,3,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	SenderId       string `protobuf:"bytes,4,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	MessagingToken string `protobuf:"bytes,5,opt,name=messaging_token,json=messagingToken" json:"messaging_token,omitempty"`
	ApiKey         string `protobuf:"bytes,6,opt,name=api_key,json=apiKey" json:"api_key,omitempty"`
}

func (m *AndroidPlatform) Reset()                    { *m = AndroidPlatform{} }
func (m *AndroidPlatform) String() string            { return proto.CompactTextString(m) }
func (*AndroidPlatform) ProtoMessage()               {}
func (*AndroidPlatform) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *AndroidPlatform) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AndroidPlatform) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *AndroidPlatform) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *AndroidPlatform) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *AndroidPlatform) GetMessagingToken() string {
	if m != nil {
		return m.MessagingToken
	}
	return ""
}

func (m *AndroidPlatform) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

type GetDeviceRequest struct {
	// lookup device by token
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDeviceRequest) Reset()                    { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()               {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *GetDeviceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDeviceResponse struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *GetDeviceResponse) Reset()                    { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()               {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *GetDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CreateDeviceRequest struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *CreateDeviceRequest) Reset()                    { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()               {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *CreateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CreateDeviceResponse struct {
	Result *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Device *Device          `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
}

func (m *CreateDeviceResponse) Reset()                    { *m = CreateDeviceResponse{} }
func (m *CreateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceResponse) ProtoMessage()               {}
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *CreateDeviceResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CreateDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type DeleteDeviceRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteDeviceRequest) Reset()                    { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()               {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *DeleteDeviceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDeviceResponse struct {
	Result *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteDeviceResponse) Reset()                    { *m = DeleteDeviceResponse{} }
func (m *DeleteDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeviceResponse) ProtoMessage()               {}
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *DeleteDeviceResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateDeviceRequest struct {
	Id     string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Device *Device `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
}

func (m *UpdateDeviceRequest) Reset()                    { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()               {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *UpdateDeviceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type UpdateDeviceResponse struct {
	Result *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateDeviceResponse) Reset()                    { *m = UpdateDeviceResponse{} }
func (m *UpdateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceResponse) ProtoMessage()               {}
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *UpdateDeviceResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetIosPlatformRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetIosPlatformRequest) Reset()                    { *m = GetIosPlatformRequest{} }
func (m *GetIosPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*GetIosPlatformRequest) ProtoMessage()               {}
func (*GetIosPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *GetIosPlatformRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetIosPlatformResponse struct {
	Result      *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	IosPlatform *IosPlatform     `protobuf:"bytes,2,opt,name=ios_platform,json=iosPlatform" json:"ios_platform,omitempty"`
}

func (m *GetIosPlatformResponse) Reset()                    { *m = GetIosPlatformResponse{} }
func (m *GetIosPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*GetIosPlatformResponse) ProtoMessage()               {}
func (*GetIosPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *GetIosPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetIosPlatformResponse) GetIosPlatform() *IosPlatform {
	if m != nil {
		return m.IosPlatform
	}
	return nil
}

type CreateIosPlatformRequest struct {
	IosPlatform *IosPlatform `protobuf:"bytes,1,opt,name=ios_platform,json=iosPlatform" json:"ios_platform,omitempty"`
}

func (m *CreateIosPlatformRequest) Reset()                    { *m = CreateIosPlatformRequest{} }
func (m *CreateIosPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateIosPlatformRequest) ProtoMessage()               {}
func (*CreateIosPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *CreateIosPlatformRequest) GetIosPlatform() *IosPlatform {
	if m != nil {
		return m.IosPlatform
	}
	return nil
}

type CreateIosPlatformResponse struct {
	Result      *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	IosPlatform *IosPlatform     `protobuf:"bytes,2,opt,name=ios_platform,json=iosPlatform" json:"ios_platform,omitempty"`
}

func (m *CreateIosPlatformResponse) Reset()                    { *m = CreateIosPlatformResponse{} }
func (m *CreateIosPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateIosPlatformResponse) ProtoMessage()               {}
func (*CreateIosPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *CreateIosPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CreateIosPlatformResponse) GetIosPlatform() *IosPlatform {
	if m != nil {
		return m.IosPlatform
	}
	return nil
}

//
// Delete Ios Platform
//
type DeleteIosPlatformRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteIosPlatformRequest) Reset()                    { *m = DeleteIosPlatformRequest{} }
func (m *DeleteIosPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteIosPlatformRequest) ProtoMessage()               {}
func (*DeleteIosPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *DeleteIosPlatformRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteIosPlatformResponse struct {
	Result *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteIosPlatformResponse) Reset()                    { *m = DeleteIosPlatformResponse{} }
func (m *DeleteIosPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteIosPlatformResponse) ProtoMessage()               {}
func (*DeleteIosPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *DeleteIosPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

//
// Update Ios Platform
//
type UpdateIosPlatformRequest struct {
	Id       int32        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Platform *IosPlatform `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
}

func (m *UpdateIosPlatformRequest) Reset()                    { *m = UpdateIosPlatformRequest{} }
func (m *UpdateIosPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateIosPlatformRequest) ProtoMessage()               {}
func (*UpdateIosPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *UpdateIosPlatformRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateIosPlatformRequest) GetPlatform() *IosPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type UpdateIosPlatformResponse struct {
	Result   *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Platform *IosPlatform     `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
}

func (m *UpdateIosPlatformResponse) Reset()                    { *m = UpdateIosPlatformResponse{} }
func (m *UpdateIosPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateIosPlatformResponse) ProtoMessage()               {}
func (*UpdateIosPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *UpdateIosPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *UpdateIosPlatformResponse) GetPlatform() *IosPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

//
// AndroidPlatform Crud Calls
type GetAndroidPlatformRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetAndroidPlatformRequest) Reset()                    { *m = GetAndroidPlatformRequest{} }
func (m *GetAndroidPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAndroidPlatformRequest) ProtoMessage()               {}
func (*GetAndroidPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *GetAndroidPlatformRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetAndroidPlatformResponse struct {
	Result   *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Platform *AndroidPlatform `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
}

func (m *GetAndroidPlatformResponse) Reset()                    { *m = GetAndroidPlatformResponse{} }
func (m *GetAndroidPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAndroidPlatformResponse) ProtoMessage()               {}
func (*GetAndroidPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *GetAndroidPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetAndroidPlatformResponse) GetPlatform() *AndroidPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type CreateAndroidPlatformRequest struct {
	Platform *AndroidPlatform `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
}

func (m *CreateAndroidPlatformRequest) Reset()                    { *m = CreateAndroidPlatformRequest{} }
func (m *CreateAndroidPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAndroidPlatformRequest) ProtoMessage()               {}
func (*CreateAndroidPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *CreateAndroidPlatformRequest) GetPlatform() *AndroidPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type CreateAndroidPlatformResponse struct {
	Result   *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Platform *AndroidPlatform `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
}

func (m *CreateAndroidPlatformResponse) Reset()                    { *m = CreateAndroidPlatformResponse{} }
func (m *CreateAndroidPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAndroidPlatformResponse) ProtoMessage()               {}
func (*CreateAndroidPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *CreateAndroidPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CreateAndroidPlatformResponse) GetPlatform() *AndroidPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

//
// Delete Android Platform
//
type DeleteAndroidPlatformRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteAndroidPlatformRequest) Reset()                    { *m = DeleteAndroidPlatformRequest{} }
func (m *DeleteAndroidPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAndroidPlatformRequest) ProtoMessage()               {}
func (*DeleteAndroidPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *DeleteAndroidPlatformRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteAndroidPlatformResponse struct {
	Result *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteAndroidPlatformResponse) Reset()                    { *m = DeleteAndroidPlatformResponse{} }
func (m *DeleteAndroidPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAndroidPlatformResponse) ProtoMessage()               {}
func (*DeleteAndroidPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *DeleteAndroidPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

//
// Update Android Platform
//
type UpdateAndroidPlatformRequest struct {
	Id       int32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Platform *AndroidPlatform `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
}

func (m *UpdateAndroidPlatformRequest) Reset()                    { *m = UpdateAndroidPlatformRequest{} }
func (m *UpdateAndroidPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAndroidPlatformRequest) ProtoMessage()               {}
func (*UpdateAndroidPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *UpdateAndroidPlatformRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateAndroidPlatformRequest) GetPlatform() *AndroidPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type UpdateAndroidPlatformResponse struct {
	Result   *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Platform *AndroidPlatform `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
}

func (m *UpdateAndroidPlatformResponse) Reset()                    { *m = UpdateAndroidPlatformResponse{} }
func (m *UpdateAndroidPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAndroidPlatformResponse) ProtoMessage()               {}
func (*UpdateAndroidPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *UpdateAndroidPlatformResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *UpdateAndroidPlatformResponse) GetPlatform() *AndroidPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type SendNotificationRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The device id to send to
	To string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	// The notification text
	NotificationText string `protobuf:"bytes,3,opt,name=notification_text,json=notificationText" json:"notification_text,omitempty"`
	Title            string `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Sound            string `protobuf:"bytes,5,opt,name=sound" json:"sound,omitempty"`
	Badge            int32  `protobuf:"varint,6,opt,name=badge" json:"badge,omitempty"`
	Priority         string `protobuf:"bytes,7,opt,name=priority" json:"priority,omitempty"`
	CollapseKey      string `protobuf:"bytes,8,opt,name=collapse_key,json=collapseKey" json:"collapse_key,omitempty"`
	// The json embedded in the payload
	Payload string `protobuf:"bytes,9,opt,name=payload" json:"payload,omitempty"`
	// ios options
	ContentAvailable bool  `protobuf:"varint,10,opt,name=content_available,json=contentAvailable" json:"content_available,omitempty"`
	MutableContent   bool  `protobuf:"varint,11,opt,name=mutable_content,json=mutableContent" json:"mutable_content,omitempty"`
	TimeToLive       int32 `protobuf:"varint,12,opt,name=time_to_live,json=timeToLive" json:"time_to_live,omitempty"`
}

func (m *SendNotificationRequest) Reset()                    { *m = SendNotificationRequest{} }
func (m *SendNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*SendNotificationRequest) ProtoMessage()               {}
func (*SendNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

func (m *SendNotificationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendNotificationRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendNotificationRequest) GetNotificationText() string {
	if m != nil {
		return m.NotificationText
	}
	return ""
}

func (m *SendNotificationRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SendNotificationRequest) GetSound() string {
	if m != nil {
		return m.Sound
	}
	return ""
}

func (m *SendNotificationRequest) GetBadge() int32 {
	if m != nil {
		return m.Badge
	}
	return 0
}

func (m *SendNotificationRequest) GetPriority() string {
	if m != nil {
		return m.Priority
	}
	return ""
}

func (m *SendNotificationRequest) GetCollapseKey() string {
	if m != nil {
		return m.CollapseKey
	}
	return ""
}

func (m *SendNotificationRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *SendNotificationRequest) GetContentAvailable() bool {
	if m != nil {
		return m.ContentAvailable
	}
	return false
}

func (m *SendNotificationRequest) GetMutableContent() bool {
	if m != nil {
		return m.MutableContent
	}
	return false
}

func (m *SendNotificationRequest) GetTimeToLive() int32 {
	if m != nil {
		return m.TimeToLive
	}
	return 0
}

type SendNotificationResponse struct {
	Result *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *SendNotificationResponse) Reset()                    { *m = SendNotificationResponse{} }
func (m *SendNotificationResponse) String() string            { return proto.CompactTextString(m) }
func (*SendNotificationResponse) ProtoMessage()               {}
func (*SendNotificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *SendNotificationResponse) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type SendNotificationResult struct {
	Result *OperationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	// Array of notification ids that have succeeded
	SuccessIds []string `protobuf:"bytes,2,rep,name=success_ids,json=successIds" json:"success_ids,omitempty"`
	// Array of notification ids that have failed
	FailedIds []string `protobuf:"bytes,3,rep,name=failed_ids,json=failedIds" json:"failed_ids,omitempty"`
}

func (m *SendNotificationResult) Reset()                    { *m = SendNotificationResult{} }
func (m *SendNotificationResult) String() string            { return proto.CompactTextString(m) }
func (*SendNotificationResult) ProtoMessage()               {}
func (*SendNotificationResult) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *SendNotificationResult) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *SendNotificationResult) GetSuccessIds() []string {
	if m != nil {
		return m.SuccessIds
	}
	return nil
}

func (m *SendNotificationResult) GetFailedIds() []string {
	if m != nil {
		return m.FailedIds
	}
	return nil
}

func init() {
	proto.RegisterType((*Device)(nil), "pushy.v1.Device")
	proto.RegisterType((*IosPlatform)(nil), "pushy.v1.IosPlatform")
	proto.RegisterType((*AndroidPlatform)(nil), "pushy.v1.AndroidPlatform")
	proto.RegisterType((*GetDeviceRequest)(nil), "pushy.v1.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "pushy.v1.GetDeviceResponse")
	proto.RegisterType((*CreateDeviceRequest)(nil), "pushy.v1.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceResponse)(nil), "pushy.v1.CreateDeviceResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "pushy.v1.DeleteDeviceRequest")
	proto.RegisterType((*DeleteDeviceResponse)(nil), "pushy.v1.DeleteDeviceResponse")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "pushy.v1.UpdateDeviceRequest")
	proto.RegisterType((*UpdateDeviceResponse)(nil), "pushy.v1.UpdateDeviceResponse")
	proto.RegisterType((*GetIosPlatformRequest)(nil), "pushy.v1.GetIosPlatformRequest")
	proto.RegisterType((*GetIosPlatformResponse)(nil), "pushy.v1.GetIosPlatformResponse")
	proto.RegisterType((*CreateIosPlatformRequest)(nil), "pushy.v1.CreateIosPlatformRequest")
	proto.RegisterType((*CreateIosPlatformResponse)(nil), "pushy.v1.CreateIosPlatformResponse")
	proto.RegisterType((*DeleteIosPlatformRequest)(nil), "pushy.v1.DeleteIosPlatformRequest")
	proto.RegisterType((*DeleteIosPlatformResponse)(nil), "pushy.v1.DeleteIosPlatformResponse")
	proto.RegisterType((*UpdateIosPlatformRequest)(nil), "pushy.v1.UpdateIosPlatformRequest")
	proto.RegisterType((*UpdateIosPlatformResponse)(nil), "pushy.v1.UpdateIosPlatformResponse")
	proto.RegisterType((*GetAndroidPlatformRequest)(nil), "pushy.v1.GetAndroidPlatformRequest")
	proto.RegisterType((*GetAndroidPlatformResponse)(nil), "pushy.v1.GetAndroidPlatformResponse")
	proto.RegisterType((*CreateAndroidPlatformRequest)(nil), "pushy.v1.CreateAndroidPlatformRequest")
	proto.RegisterType((*CreateAndroidPlatformResponse)(nil), "pushy.v1.CreateAndroidPlatformResponse")
	proto.RegisterType((*DeleteAndroidPlatformRequest)(nil), "pushy.v1.DeleteAndroidPlatformRequest")
	proto.RegisterType((*DeleteAndroidPlatformResponse)(nil), "pushy.v1.DeleteAndroidPlatformResponse")
	proto.RegisterType((*UpdateAndroidPlatformRequest)(nil), "pushy.v1.UpdateAndroidPlatformRequest")
	proto.RegisterType((*UpdateAndroidPlatformResponse)(nil), "pushy.v1.UpdateAndroidPlatformResponse")
	proto.RegisterType((*SendNotificationRequest)(nil), "pushy.v1.SendNotificationRequest")
	proto.RegisterType((*SendNotificationResponse)(nil), "pushy.v1.SendNotificationResponse")
	proto.RegisterType((*SendNotificationResult)(nil), "pushy.v1.SendNotificationResult")
	proto.RegisterEnum("pushy.v1.Device_Platform", Device_Platform_name, Device_Platform_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PushyService service

type PushyServiceClient interface {
	// push
	SendNotification(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*SendNotificationResponse, error)
	SendNotificationStream(ctx context.Context, opts ...grpc.CallOption) (PushyService_SendNotificationStreamClient, error)
	// Device rpc crud calls
	GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error)
	DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error)
	UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error)
	// ios platform crud calls
	GetIosPlatform(ctx context.Context, in *GetIosPlatformRequest, opts ...grpc.CallOption) (*GetIosPlatformResponse, error)
	CreateIosPlatform(ctx context.Context, in *CreateIosPlatformRequest, opts ...grpc.CallOption) (*CreateIosPlatformResponse, error)
	DeleteIosPlatform(ctx context.Context, in *DeleteIosPlatformRequest, opts ...grpc.CallOption) (*DeleteIosPlatformResponse, error)
	UpdateIosPlatform(ctx context.Context, in *UpdateIosPlatformRequest, opts ...grpc.CallOption) (*UpdateIosPlatformResponse, error)
	// android platform crud calls
	GetAndroidPlatform(ctx context.Context, in *GetAndroidPlatformRequest, opts ...grpc.CallOption) (*GetAndroidPlatformResponse, error)
	CreateAndroidPlatform(ctx context.Context, in *CreateAndroidPlatformRequest, opts ...grpc.CallOption) (*CreateAndroidPlatformResponse, error)
	DeleteAndroidPlatform(ctx context.Context, in *DeleteAndroidPlatformRequest, opts ...grpc.CallOption) (*DeleteAndroidPlatformResponse, error)
	UpdateAndroidPlatform(ctx context.Context, in *UpdateAndroidPlatformRequest, opts ...grpc.CallOption) (*UpdateAndroidPlatformResponse, error)
}

type pushyServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushyServiceClient(cc *grpc.ClientConn) PushyServiceClient {
	return &pushyServiceClient{cc}
}

func (c *pushyServiceClient) SendNotification(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*SendNotificationResponse, error) {
	out := new(SendNotificationResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/SendNotification", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) SendNotificationStream(ctx context.Context, opts ...grpc.CallOption) (PushyService_SendNotificationStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PushyService_serviceDesc.Streams[0], c.cc, "/pushy.v1.PushyService/SendNotificationStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &pushyServiceSendNotificationStreamClient{stream}
	return x, nil
}

type PushyService_SendNotificationStreamClient interface {
	Send(*SendNotificationRequest) error
	CloseAndRecv() (*SendNotificationResult, error)
	grpc.ClientStream
}

type pushyServiceSendNotificationStreamClient struct {
	grpc.ClientStream
}

func (x *pushyServiceSendNotificationStreamClient) Send(m *SendNotificationRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pushyServiceSendNotificationStreamClient) CloseAndRecv() (*SendNotificationResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendNotificationResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pushyServiceClient) GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/GetDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error) {
	out := new(CreateDeviceResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/CreateDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error) {
	out := new(DeleteDeviceResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/DeleteDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error) {
	out := new(UpdateDeviceResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/UpdateDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) GetIosPlatform(ctx context.Context, in *GetIosPlatformRequest, opts ...grpc.CallOption) (*GetIosPlatformResponse, error) {
	out := new(GetIosPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/GetIosPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) CreateIosPlatform(ctx context.Context, in *CreateIosPlatformRequest, opts ...grpc.CallOption) (*CreateIosPlatformResponse, error) {
	out := new(CreateIosPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/CreateIosPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) DeleteIosPlatform(ctx context.Context, in *DeleteIosPlatformRequest, opts ...grpc.CallOption) (*DeleteIosPlatformResponse, error) {
	out := new(DeleteIosPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/DeleteIosPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) UpdateIosPlatform(ctx context.Context, in *UpdateIosPlatformRequest, opts ...grpc.CallOption) (*UpdateIosPlatformResponse, error) {
	out := new(UpdateIosPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/UpdateIosPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) GetAndroidPlatform(ctx context.Context, in *GetAndroidPlatformRequest, opts ...grpc.CallOption) (*GetAndroidPlatformResponse, error) {
	out := new(GetAndroidPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/GetAndroidPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) CreateAndroidPlatform(ctx context.Context, in *CreateAndroidPlatformRequest, opts ...grpc.CallOption) (*CreateAndroidPlatformResponse, error) {
	out := new(CreateAndroidPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/CreateAndroidPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) DeleteAndroidPlatform(ctx context.Context, in *DeleteAndroidPlatformRequest, opts ...grpc.CallOption) (*DeleteAndroidPlatformResponse, error) {
	out := new(DeleteAndroidPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/DeleteAndroidPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushyServiceClient) UpdateAndroidPlatform(ctx context.Context, in *UpdateAndroidPlatformRequest, opts ...grpc.CallOption) (*UpdateAndroidPlatformResponse, error) {
	out := new(UpdateAndroidPlatformResponse)
	err := grpc.Invoke(ctx, "/pushy.v1.PushyService/UpdateAndroidPlatform", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PushyService service

type PushyServiceServer interface {
	// push
	SendNotification(context.Context, *SendNotificationRequest) (*SendNotificationResponse, error)
	SendNotificationStream(PushyService_SendNotificationStreamServer) error
	// Device rpc crud calls
	GetDevice(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	CreateDevice(context.Context, *CreateDeviceRequest) (*CreateDeviceResponse, error)
	DeleteDevice(context.Context, *DeleteDeviceRequest) (*DeleteDeviceResponse, error)
	UpdateDevice(context.Context, *UpdateDeviceRequest) (*UpdateDeviceResponse, error)
	// ios platform crud calls
	GetIosPlatform(context.Context, *GetIosPlatformRequest) (*GetIosPlatformResponse, error)
	CreateIosPlatform(context.Context, *CreateIosPlatformRequest) (*CreateIosPlatformResponse, error)
	DeleteIosPlatform(context.Context, *DeleteIosPlatformRequest) (*DeleteIosPlatformResponse, error)
	UpdateIosPlatform(context.Context, *UpdateIosPlatformRequest) (*UpdateIosPlatformResponse, error)
	// android platform crud calls
	GetAndroidPlatform(context.Context, *GetAndroidPlatformRequest) (*GetAndroidPlatformResponse, error)
	CreateAndroidPlatform(context.Context, *CreateAndroidPlatformRequest) (*CreateAndroidPlatformResponse, error)
	DeleteAndroidPlatform(context.Context, *DeleteAndroidPlatformRequest) (*DeleteAndroidPlatformResponse, error)
	UpdateAndroidPlatform(context.Context, *UpdateAndroidPlatformRequest) (*UpdateAndroidPlatformResponse, error)
}

func RegisterPushyServiceServer(s *grpc.Server, srv PushyServiceServer) {
	s.RegisterService(&_PushyService_serviceDesc, srv)
}

func _PushyService_SendNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).SendNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/SendNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).SendNotification(ctx, req.(*SendNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_SendNotificationStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PushyServiceServer).SendNotificationStream(&pushyServiceSendNotificationStreamServer{stream})
}

type PushyService_SendNotificationStreamServer interface {
	SendAndClose(*SendNotificationResult) error
	Recv() (*SendNotificationRequest, error)
	grpc.ServerStream
}

type pushyServiceSendNotificationStreamServer struct {
	grpc.ServerStream
}

func (x *pushyServiceSendNotificationStreamServer) SendAndClose(m *SendNotificationResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pushyServiceSendNotificationStreamServer) Recv() (*SendNotificationRequest, error) {
	m := new(SendNotificationRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PushyService_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).GetDevice(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_CreateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).CreateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/CreateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).CreateDevice(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_DeleteDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).DeleteDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/DeleteDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).DeleteDevice(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).UpdateDevice(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_GetIosPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIosPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).GetIosPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/GetIosPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).GetIosPlatform(ctx, req.(*GetIosPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_CreateIosPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIosPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).CreateIosPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/CreateIosPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).CreateIosPlatform(ctx, req.(*CreateIosPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_DeleteIosPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIosPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).DeleteIosPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/DeleteIosPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).DeleteIosPlatform(ctx, req.(*DeleteIosPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_UpdateIosPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIosPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).UpdateIosPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/UpdateIosPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).UpdateIosPlatform(ctx, req.(*UpdateIosPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_GetAndroidPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAndroidPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).GetAndroidPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/GetAndroidPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).GetAndroidPlatform(ctx, req.(*GetAndroidPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_CreateAndroidPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAndroidPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).CreateAndroidPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/CreateAndroidPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).CreateAndroidPlatform(ctx, req.(*CreateAndroidPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_DeleteAndroidPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAndroidPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).DeleteAndroidPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/DeleteAndroidPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).DeleteAndroidPlatform(ctx, req.(*DeleteAndroidPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushyService_UpdateAndroidPlatform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAndroidPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushyServiceServer).UpdateAndroidPlatform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushy.v1.PushyService/UpdateAndroidPlatform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushyServiceServer).UpdateAndroidPlatform(ctx, req.(*UpdateAndroidPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pushy.v1.PushyService",
	HandlerType: (*PushyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendNotification",
			Handler:    _PushyService_SendNotification_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _PushyService_GetDevice_Handler,
		},
		{
			MethodName: "CreateDevice",
			Handler:    _PushyService_CreateDevice_Handler,
		},
		{
			MethodName: "DeleteDevice",
			Handler:    _PushyService_DeleteDevice_Handler,
		},
		{
			MethodName: "UpdateDevice",
			Handler:    _PushyService_UpdateDevice_Handler,
		},
		{
			MethodName: "GetIosPlatform",
			Handler:    _PushyService_GetIosPlatform_Handler,
		},
		{
			MethodName: "CreateIosPlatform",
			Handler:    _PushyService_CreateIosPlatform_Handler,
		},
		{
			MethodName: "DeleteIosPlatform",
			Handler:    _PushyService_DeleteIosPlatform_Handler,
		},
		{
			MethodName: "UpdateIosPlatform",
			Handler:    _PushyService_UpdateIosPlatform_Handler,
		},
		{
			MethodName: "GetAndroidPlatform",
			Handler:    _PushyService_GetAndroidPlatform_Handler,
		},
		{
			MethodName: "CreateAndroidPlatform",
			Handler:    _PushyService_CreateAndroidPlatform_Handler,
		},
		{
			MethodName: "DeleteAndroidPlatform",
			Handler:    _PushyService_DeleteAndroidPlatform_Handler,
		},
		{
			MethodName: "UpdateAndroidPlatform",
			Handler:    _PushyService_UpdateAndroidPlatform_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendNotificationStream",
			Handler:       _PushyService_SendNotificationStream_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "pushy/v1/pushy.proto",
}

func init() { proto.RegisterFile("pushy/v1/pushy.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x41, 0x6f, 0xe3, 0x44,
	0x14, 0x8e, 0x53, 0x9a, 0x26, 0x2f, 0x21, 0x9b, 0x9d, 0xa6, 0xbb, 0x6e, 0xb6, 0xdd, 0xcd, 0x7a,
	0x59, 0x1a, 0xb1, 0x52, 0x56, 0x2d, 0x5a, 0x89, 0x0b, 0x42, 0xd5, 0x56, 0x54, 0xd9, 0x45, 0x4d,
	0xe5, 0xb6, 0x27, 0x04, 0xd6, 0x34, 0x7e, 0x2d, 0xa6, 0x8e, 0xc7, 0xd8, 0x93, 0xb0, 0xb9, 0x72,
	0x00, 0x81, 0xf8, 0x1f, 0x5c, 0xf8, 0x15, 0xdc, 0xf9, 0x41, 0xdc, 0x90, 0x67, 0x9c, 0x64, 0xe2,
	0xd8, 0x69, 0x68, 0xa4, 0xe5, 0x96, 0x79, 0xf3, 0xf9, 0x7b, 0xdf, 0x7b, 0xf3, 0xec, 0xf9, 0x5a,
	0xa8, 0xfb, 0x83, 0xf0, 0xbb, 0xd1, 0xcb, 0xe1, 0xfe, 0x4b, 0xf1, 0xa3, 0xed, 0x07, 0x8c, 0x33,
	0x52, 0x94, 0x8b, 0xe1, 0x7e, 0x43, 0xef, 0xb1, 0x7e, 0x9f, 0x79, 0x11, 0x20, 0xc0, 0xd0, 0x67,
	0x5e, 0x88, 0x12, 0x63, 0xfc, 0xad, 0x41, 0xe1, 0x08, 0x87, 0x4e, 0x0f, 0x49, 0x15, 0xf2, 0x8e,
	0xad, 0x6b, 0x4d, 0xad, 0x55, 0x32, 0xf3, 0x8e, 0x4d, 0xea, 0xb0, 0xce, 0xd9, 0x0d, 0x7a, 0x7a,
	0x5e, 0x84, 0xe4, 0x82, 0xec, 0x02, 0xd0, 0x5e, 0x8f, 0x0d, 0x3c, 0x6e, 0x39, 0xb6, 0xbe, 0xd6,
	0xd4, 0x5a, 0xeb, 0x66, 0x29, 0x8e, 0x74, 0x6c, 0xf2, 0x1c, 0xaa, 0xd4, 0xf7, 0x2d, 0xc7, 0x46,
	0x8f, 0x3b, 0x57, 0x0e, 0x06, 0xfa, 0x07, 0xe2, 0xe9, 0x0f, 0xa9, 0xef, 0x77, 0x26, 0x41, 0xf2,
	0x0a, 0x8a, 0xbe, 0x4b, 0xf9, 0x15, 0x0b, 0xfa, 0xfa, 0x7a, 0x53, 0x6b, 0x55, 0x0f, 0xb6, 0xdb,
	0x63, 0xb5, 0x6d, 0xa9, 0xa7, 0x7d, 0x1a, 0x03, 0xcc, 0x09, 0xd4, 0x68, 0x42, 0x71, 0x1c, 0x25,
	0x1b, 0xb0, 0xd6, 0xe9, 0x9e, 0xd5, 0x72, 0xa4, 0x0c, 0x1b, 0x87, 0x27, 0x47, 0x66, 0xb7, 0x73,
	0x54, 0xd3, 0x8c, 0x3f, 0x35, 0x28, 0x77, 0x58, 0x38, 0x41, 0x4d, 0x8b, 0x5a, 0x17, 0x45, 0xcd,
	0xca, 0xcf, 0x27, 0xe5, 0x3f, 0x82, 0xd2, 0xe5, 0xc0, 0xb3, 0x5d, 0x1c, 0x17, 0x57, 0x32, 0x8b,
	0x32, 0xd0, 0xb1, 0xc9, 0x3e, 0xd4, 0x7b, 0x18, 0x44, 0x15, 0xf4, 0x28, 0x47, 0xcb, 0xa7, 0x61,
	0xf8, 0x23, 0x0b, 0xec, 0xb8, 0xc2, 0x4d, 0x65, 0xef, 0x34, 0xde, 0x22, 0x8f, 0x01, 0x64, 0x38,
	0x8a, 0x8a, 0x4a, 0x4b, 0xa6, 0x12, 0x31, 0xfe, 0xd2, 0xe0, 0xde, 0xa1, 0x67, 0x07, 0xcc, 0xb1,
	0xef, 0x2a, 0xf9, 0x29, 0x54, 0x7c, 0xda, 0xbb, 0xa1, 0xd7, 0x68, 0x79, 0xb4, 0x8f, 0xb1, 0xea,
	0x72, 0x1c, 0x3b, 0xa1, 0x7d, 0x8c, 0xaa, 0x0a, 0xd1, 0xb3, 0x31, 0x88, 0x08, 0xa4, 0xda, 0xa2,
	0x0c, 0x74, 0x6c, 0xb2, 0x07, 0xf7, 0xfa, 0x18, 0x86, 0xf4, 0xda, 0xf1, 0xae, 0x2d, 0x79, 0xe0,
	0x52, 0x67, 0x75, 0x12, 0x3e, 0x17, 0x27, 0xff, 0x10, 0x36, 0xa8, 0xef, 0x58, 0x37, 0x38, 0xd2,
	0x0b, 0x02, 0x50, 0xa0, 0xbe, 0xf3, 0x16, 0x47, 0x86, 0x01, 0xb5, 0x63, 0xe4, 0xf2, 0xd4, 0x4c,
	0xfc, 0x61, 0x80, 0x21, 0x4f, 0x0e, 0x93, 0xf1, 0x39, 0xdc, 0x57, 0x30, 0x72, 0x04, 0x49, 0x0b,
	0x0a, 0xb6, 0x88, 0x08, 0x60, 0xf9, 0xa0, 0x96, 0x9c, 0x01, 0x33, 0xde, 0x37, 0xbe, 0x80, 0xcd,
	0xd7, 0x01, 0x52, 0x8e, 0xb3, 0x59, 0x96, 0x27, 0xe0, 0x50, 0x9f, 0x25, 0x88, 0x25, 0x1c, 0x40,
	0x21, 0xc0, 0x70, 0xe0, 0xf2, 0x98, 0xa1, 0xd1, 0x96, 0xaf, 0x4a, 0x44, 0xd1, 0xf5, 0x31, 0xa0,
	0xdc, 0x61, 0x9e, 0x29, 0x10, 0x66, 0x8c, 0x54, 0xb2, 0xe6, 0x6f, 0xc9, 0xfa, 0x1c, 0x36, 0x8f,
	0xd0, 0xc5, 0xa4, 0xec, 0x64, 0x73, 0xde, 0x40, 0x7d, 0x16, 0x76, 0x77, 0x71, 0x46, 0x17, 0x36,
	0x2f, 0x7c, 0x9b, 0xde, 0x92, 0xf2, 0x3f, 0xd4, 0xf0, 0x06, 0xea, 0xb3, 0x84, 0x2b, 0x88, 0xdb,
	0x83, 0xad, 0x63, 0xe4, 0xca, 0xfb, 0x39, 0x2f, 0x4f, 0xcc, 0xbc, 0xf1, 0xb3, 0x06, 0x0f, 0x92,
	0xc8, 0x15, 0x4e, 0xec, 0x33, 0xa8, 0x38, 0x2c, 0xb4, 0x26, 0x9f, 0x1c, 0x59, 0xf3, 0xd6, 0xb4,
	0x66, 0x35, 0x51, 0xd9, 0x99, 0x2e, 0x8c, 0x73, 0xd0, 0xe5, 0xdc, 0xa4, 0x88, 0x4e, 0xb2, 0x6a,
	0x4b, 0xb3, 0xfe, 0xaa, 0xc1, 0x76, 0x0a, 0xed, 0xff, 0x52, 0xe1, 0x27, 0xa0, 0xcb, 0xe1, 0x5b,
	0xe2, 0x58, 0xba, 0xb0, 0x9d, 0x82, 0x5d, 0x61, 0x20, 0xbe, 0x01, 0x5d, 0x0e, 0xd7, 0xed, 0xc9,
	0xc9, 0xbe, 0x72, 0x67, 0x2c, 0x2c, 0x6f, 0x7a, 0x5f, 0xfc, 0xa4, 0xc1, 0x76, 0x0a, 0xff, 0x0a,
	0x7d, 0xbe, 0x83, 0x88, 0x17, 0xb0, 0x7d, 0x8c, 0x3c, 0xf1, 0x95, 0xcf, 0xea, 0xf0, 0x2f, 0x1a,
	0x34, 0xd2, 0xd0, 0x2b, 0x48, 0x7e, 0x35, 0x27, 0x59, 0xb9, 0x6b, 0x93, 0x89, 0xa6, 0xb2, 0x2f,
	0x60, 0x47, 0x8e, 0x68, 0x86, 0x72, 0x95, 0x56, 0x5b, 0x9e, 0xf6, 0x37, 0x0d, 0x76, 0x33, 0x78,
	0xdf, 0x7f, 0x8d, 0x6d, 0xd8, 0x91, 0xf3, 0xbc, 0xe4, 0xe9, 0x9c, 0xc1, 0x6e, 0x06, 0x7e, 0x85,
	0x77, 0x00, 0x61, 0x47, 0xce, 0xe8, 0x72, 0x22, 0xee, 0x5a, 0x6b, 0xd4, 0xf8, 0x8c, 0x3c, 0xef,
	0xbf, 0xf1, 0xff, 0xe4, 0xe1, 0xe1, 0x19, 0x7a, 0xf6, 0x09, 0x8b, 0x2d, 0x93, 0x60, 0x4e, 0xbf,
	0xaa, 0xaa, 0x90, 0xe7, 0x2c, 0x36, 0xa1, 0x79, 0xce, 0xc8, 0x0b, 0xb8, 0xef, 0x29, 0x8f, 0x59,
	0x1c, 0xdf, 0xf1, 0xd8, 0xf5, 0xd4, 0xd4, 0x8d, 0x73, 0x7c, 0xc7, 0x85, 0x89, 0x75, 0xb8, 0x8b,
	0xb1, 0xed, 0x91, 0x8b, 0x28, 0x1a, 0xb2, 0x81, 0x67, 0xc7, 0x4e, 0x47, 0x2e, 0xa2, 0xe8, 0x25,
	0xb5, 0xaf, 0x51, 0xd8, 0x9b, 0x75, 0x53, 0x2e, 0x48, 0x03, 0x8a, 0x7e, 0xe0, 0xb0, 0xc0, 0xe1,
	0x23, 0x7d, 0x43, 0x7a, 0xa7, 0xf1, 0x3a, 0xf2, 0x5e, 0x3d, 0xe6, 0xba, 0xd4, 0x0f, 0x51, 0xf8,
	0xa2, 0xa2, 0xf4, 0x5e, 0xe3, 0xd8, 0x5b, 0x1c, 0x11, 0x1d, 0x36, 0x7c, 0x3a, 0x72, 0x19, 0xb5,
	0xf5, 0x92, 0xd8, 0x1d, 0x2f, 0xa3, 0x3a, 0x7a, 0xcc, 0xe3, 0xe8, 0x71, 0x8b, 0x0e, 0xa9, 0xe3,
	0xd2, 0x4b, 0x17, 0x75, 0x68, 0x6a, 0xad, 0xa2, 0x59, 0x8b, 0x37, 0x0e, 0xc7, 0x71, 0xe1, 0xd2,
	0x06, 0x3c, 0xfa, 0x69, 0xc5, 0x7b, 0x7a, 0x59, 0x40, 0xab, 0x71, 0xf8, 0xb5, 0x8c, 0x92, 0x26,
	0x54, 0xb8, 0xd3, 0x47, 0x8b, 0x33, 0xcb, 0x75, 0x86, 0xa8, 0x57, 0x44, 0x2d, 0x10, 0xc5, 0xce,
	0xd9, 0x57, 0xce, 0x10, 0x8d, 0x13, 0xd0, 0xe7, 0x5b, 0xbf, 0xc2, 0xfc, 0xfe, 0xae, 0xc1, 0x83,
	0x14, 0xc2, 0x68, 0x3a, 0xee, 0x32, 0x51, 0x4f, 0xa0, 0x1c, 0x0e, 0x7a, 0x3d, 0x0c, 0x43, 0xcb,
	0xb1, 0x43, 0x3d, 0xdf, 0x5c, 0x8b, 0x3c, 0x73, 0x1c, 0xea, 0xd8, 0x61, 0xe4, 0x87, 0xaf, 0xa8,
	0xe3, 0xa2, 0x2d, 0xf6, 0xd7, 0xc4, 0x7e, 0x49, 0x46, 0x3a, 0x76, 0x78, 0xf0, 0x07, 0x40, 0xe5,
	0x34, 0x9a, 0xc0, 0x33, 0x0c, 0xc4, 0xdf, 0x35, 0x5f, 0x43, 0x2d, 0x29, 0x8f, 0x3c, 0x9d, 0x0e,
	0x69, 0xc6, 0x18, 0x36, 0x8c, 0x45, 0x10, 0xd9, 0x2e, 0x23, 0x47, 0xe8, 0x7c, 0xed, 0x67, 0x3c,
	0x40, 0xda, 0x5f, 0x26, 0x45, 0x73, 0x61, 0x8a, 0xa8, 0xb7, 0xb9, 0x96, 0x46, 0xbe, 0x84, 0xd2,
	0xc4, 0x3a, 0x93, 0xc6, 0xf4, 0x91, 0xa4, 0xe7, 0x6e, 0x3c, 0x4a, 0xdd, 0x9b, 0x48, 0xed, 0x42,
	0x45, 0xb5, 0xc0, 0x64, 0x77, 0x0a, 0x4f, 0xf1, 0xd6, 0x8d, 0xc7, 0x59, 0xdb, 0x2a, 0xa1, 0x6a,
	0x5b, 0x55, 0xc2, 0x14, 0xd7, 0xab, 0x12, 0xa6, 0xb9, 0x5d, 0x49, 0xa8, 0x5a, 0x4d, 0x95, 0x30,
	0xc5, 0xd3, 0xaa, 0x84, 0x69, 0x0e, 0xd5, 0xc8, 0x91, 0x0b, 0xa8, 0xce, 0xba, 0x48, 0xf2, 0x64,
	0xa6, 0x47, 0xf3, 0xae, 0x43, 0x3d, 0x93, 0x74, 0x03, 0x6a, 0xe4, 0xc8, 0xb7, 0x70, 0x7f, 0xce,
	0xbd, 0x11, 0x23, 0xd9, 0xaf, 0x14, 0xf2, 0x67, 0x0b, 0x31, 0x2a, 0xff, 0x9c, 0xcd, 0x52, 0xf9,
	0xb3, 0xfc, 0x9a, 0xca, 0x9f, 0xe9, 0xd3, 0x24, 0xff, 0x9c, 0x2b, 0x52, 0xf9, 0xb3, 0x2c, 0x99,
	0xca, 0x9f, 0x69, 0xab, 0xc4, 0x4b, 0x41, 0xe6, 0x3d, 0x0c, 0x79, 0x36, 0xd3, 0xd9, 0xf4, 0xcb,
	0xae, 0xf1, 0xd1, 0x62, 0xd0, 0x24, 0xc5, 0xf7, 0xb0, 0x95, 0xea, 0x22, 0xc8, 0xc7, 0xc9, 0x16,
	0x67, 0x24, 0xda, 0xbb, 0x15, 0xa7, 0xe6, 0x4a, 0xbd, 0xf5, 0xd5, 0x5c, 0x8b, 0x6c, 0x84, 0x9a,
	0x6b, 0xa1, 0x7d, 0x90, 0xb9, 0x52, 0x2f, 0x69, 0x35, 0xd7, 0x22, 0xb7, 0xa0, 0xe6, 0x5a, 0x78,
	0xdb, 0x1b, 0xb9, 0xcb, 0x82, 0xf8, 0x17, 0xd0, 0xa7, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa8,
	0x8d, 0x5b, 0xed, 0x3e, 0x12, 0x00, 0x00,
}
