syntax = "proto3";

package rover.segment.v1;

option go_package = "segment/v1;segment";

import "google/protobuf/timestamp.proto";
import "auth/v1/auth.proto";

enum PushIdType {
    ROVER = 0;
    ALIAS = 1;
}

message StaticSegment {
    int32 id = 1;
    int32 account_id = 2;
    string title = 3;
    int64 size = 4;

    google.protobuf.Timestamp updated_at = 5;
    google.protobuf.Timestamp created_at = 6;
}

message ListStaticSegmentRequest {

    rover.auth.v1.AuthContext auth_context = 1;

    int32 account_id = 2;

    string order_by = 3;

    int32 page_size = 4;

    string page_token = 5;
}

message ListStaticSegmentResponse {
    repeated StaticSegment segments = 1;

    string next_page_token = 2;
}


message GetStaticSegmentRequest {

    rover.auth.v1.AuthContext auth_context = 1;

    int32 id = 2;
}

message GetStaticSegmentReply {
    StaticSegment segment = 1;
}

message CreateStaticSegmentRequest {
    
    rover.auth.v1.AuthContext auth_context = 1;

    int32 account_id = 2;
    string title = 3;
}

message CreateStaticSegmentReply {
    StaticSegment segment = 1;
}

message DeleteStaticSegmentRequest {

    rover.auth.v1.AuthContext auth_context = 1;
    
    int32 id = 2;
}

message DeleteStaticSegmentReply {
    // Empty
}

message UpdateStaticSegmentIdsReply {
    StaticSegment segment = 1;
}

/* Internal */
message GetStaticSegmentPushIdsRequest {
    int32 segment_id = 1;
}

message PushId {
    string id = 1;
    PushIdType type = 2;
}

service Segment {

    rpc ListStaticSegments(ListStaticSegmentRequest) returns (ListStaticSegmentResponse) {};
    rpc GetStaticSegment(GetStaticSegmentRequest) returns (GetStaticSegmentReply) {};
    rpc CreateStaticSegment(CreateStaticSegmentRequest) returns (CreateStaticSegmentReply) {};
    rpc DeleteStaticSegment(DeleteStaticSegmentRequest) returns (DeleteStaticSegmentReply) {};

    rpc UpdateStaticSegmentPushIds(stream PushId) returns (UpdateStaticSegmentIdsReply) {};
    rpc GetStaticSegmentPushIds(GetStaticSegmentPushIdsRequest) returns (stream PushId) {}
}