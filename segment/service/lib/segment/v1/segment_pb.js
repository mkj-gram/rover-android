/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.segment.v1.CreateStaticSegmentReply', null, global);
goog.exportSymbol('proto.segment.v1.CreateStaticSegmentRequest', null, global);
goog.exportSymbol('proto.segment.v1.GetStaticSegmentPushIdsRequest', null, global);
goog.exportSymbol('proto.segment.v1.GetStaticSegmentReply', null, global);
goog.exportSymbol('proto.segment.v1.GetStaticSegmentRequest', null, global);
goog.exportSymbol('proto.segment.v1.ListStaticSegmentRequest', null, global);
goog.exportSymbol('proto.segment.v1.ListStaticSegmentResponse', null, global);
goog.exportSymbol('proto.segment.v1.PushId', null, global);
goog.exportSymbol('proto.segment.v1.PushIdType', null, global);
goog.exportSymbol('proto.segment.v1.StaticSegment', null, global);
goog.exportSymbol('proto.segment.v1.UpdateStaticSegmentIdsReply', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.StaticSegment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.StaticSegment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.StaticSegment.displayName = 'proto.segment.v1.StaticSegment';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.StaticSegment.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.StaticSegment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.StaticSegment} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.StaticSegment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.StaticSegment}
 */
proto.segment.v1.StaticSegment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.StaticSegment;
  return proto.segment.v1.StaticSegment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.StaticSegment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.StaticSegment}
 */
proto.segment.v1.StaticSegment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.StaticSegment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.StaticSegment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.StaticSegment} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.StaticSegment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.segment.v1.StaticSegment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.segment.v1.StaticSegment.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 account_id = 2;
 * @return {number}
 */
proto.segment.v1.StaticSegment.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.segment.v1.StaticSegment.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.segment.v1.StaticSegment.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.segment.v1.StaticSegment.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.segment.v1.StaticSegment.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.segment.v1.StaticSegment.prototype.setSize = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp updated_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.segment.v1.StaticSegment.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.segment.v1.StaticSegment.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.segment.v1.StaticSegment.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.segment.v1.StaticSegment.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.segment.v1.StaticSegment.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.segment.v1.StaticSegment.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.segment.v1.StaticSegment.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.segment.v1.StaticSegment.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.ListStaticSegmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.ListStaticSegmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.ListStaticSegmentRequest.displayName = 'proto.segment.v1.ListStaticSegmentRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.ListStaticSegmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.ListStaticSegmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.ListStaticSegmentRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.ListStaticSegmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderBy: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.ListStaticSegmentRequest}
 */
proto.segment.v1.ListStaticSegmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.ListStaticSegmentRequest;
  return proto.segment.v1.ListStaticSegmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.ListStaticSegmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.ListStaticSegmentRequest}
 */
proto.segment.v1.ListStaticSegmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.ListStaticSegmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.ListStaticSegmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.ListStaticSegmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.ListStaticSegmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 account_id = 1;
 * @return {number}
 */
proto.segment.v1.ListStaticSegmentRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.segment.v1.ListStaticSegmentRequest.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string order_by = 2;
 * @return {string}
 */
proto.segment.v1.ListStaticSegmentRequest.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.segment.v1.ListStaticSegmentRequest.prototype.setOrderBy = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 page_size = 3;
 * @return {number}
 */
proto.segment.v1.ListStaticSegmentRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.segment.v1.ListStaticSegmentRequest.prototype.setPageSize = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string page_token = 4;
 * @return {string}
 */
proto.segment.v1.ListStaticSegmentRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.segment.v1.ListStaticSegmentRequest.prototype.setPageToken = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.ListStaticSegmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.segment.v1.ListStaticSegmentResponse.repeatedFields_, null);
};
goog.inherits(proto.segment.v1.ListStaticSegmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.ListStaticSegmentResponse.displayName = 'proto.segment.v1.ListStaticSegmentResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.segment.v1.ListStaticSegmentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.ListStaticSegmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.ListStaticSegmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.ListStaticSegmentResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.ListStaticSegmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    segmentsList: jspb.Message.toObjectList(msg.getSegmentsList(),
    proto.segment.v1.StaticSegment.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.ListStaticSegmentResponse}
 */
proto.segment.v1.ListStaticSegmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.ListStaticSegmentResponse;
  return proto.segment.v1.ListStaticSegmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.ListStaticSegmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.ListStaticSegmentResponse}
 */
proto.segment.v1.ListStaticSegmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.segment.v1.StaticSegment;
      reader.readMessage(value,proto.segment.v1.StaticSegment.deserializeBinaryFromReader);
      msg.addSegments(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.ListStaticSegmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.ListStaticSegmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.ListStaticSegmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.ListStaticSegmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSegmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.segment.v1.StaticSegment.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated StaticSegment segments = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.segment.v1.StaticSegment>}
 */
proto.segment.v1.ListStaticSegmentResponse.prototype.getSegmentsList = function() {
  return /** @type{!Array.<!proto.segment.v1.StaticSegment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.segment.v1.StaticSegment, 1));
};


/** @param {!Array.<!proto.segment.v1.StaticSegment>} value */
proto.segment.v1.ListStaticSegmentResponse.prototype.setSegmentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.segment.v1.StaticSegment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.segment.v1.StaticSegment}
 */
proto.segment.v1.ListStaticSegmentResponse.prototype.addSegments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.segment.v1.StaticSegment, opt_index);
};


proto.segment.v1.ListStaticSegmentResponse.prototype.clearSegmentsList = function() {
  this.setSegmentsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.segment.v1.ListStaticSegmentResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.segment.v1.ListStaticSegmentResponse.prototype.setNextPageToken = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.GetStaticSegmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.GetStaticSegmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.GetStaticSegmentRequest.displayName = 'proto.segment.v1.GetStaticSegmentRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.GetStaticSegmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.GetStaticSegmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.GetStaticSegmentRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.GetStaticSegmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.GetStaticSegmentRequest}
 */
proto.segment.v1.GetStaticSegmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.GetStaticSegmentRequest;
  return proto.segment.v1.GetStaticSegmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.GetStaticSegmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.GetStaticSegmentRequest}
 */
proto.segment.v1.GetStaticSegmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.GetStaticSegmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.GetStaticSegmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.GetStaticSegmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.GetStaticSegmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.segment.v1.GetStaticSegmentRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.segment.v1.GetStaticSegmentRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 account_id = 2;
 * @return {number}
 */
proto.segment.v1.GetStaticSegmentRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.segment.v1.GetStaticSegmentRequest.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.GetStaticSegmentReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.GetStaticSegmentReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.GetStaticSegmentReply.displayName = 'proto.segment.v1.GetStaticSegmentReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.GetStaticSegmentReply.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.GetStaticSegmentReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.GetStaticSegmentReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.GetStaticSegmentReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    segment: (f = msg.getSegment()) && proto.segment.v1.StaticSegment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.GetStaticSegmentReply}
 */
proto.segment.v1.GetStaticSegmentReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.GetStaticSegmentReply;
  return proto.segment.v1.GetStaticSegmentReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.GetStaticSegmentReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.GetStaticSegmentReply}
 */
proto.segment.v1.GetStaticSegmentReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.segment.v1.StaticSegment;
      reader.readMessage(value,proto.segment.v1.StaticSegment.deserializeBinaryFromReader);
      msg.setSegment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.GetStaticSegmentReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.GetStaticSegmentReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.GetStaticSegmentReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.GetStaticSegmentReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSegment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.segment.v1.StaticSegment.serializeBinaryToWriter
    );
  }
};


/**
 * optional StaticSegment segment = 1;
 * @return {?proto.segment.v1.StaticSegment}
 */
proto.segment.v1.GetStaticSegmentReply.prototype.getSegment = function() {
  return /** @type{?proto.segment.v1.StaticSegment} */ (
    jspb.Message.getWrapperField(this, proto.segment.v1.StaticSegment, 1));
};


/** @param {?proto.segment.v1.StaticSegment|undefined} value */
proto.segment.v1.GetStaticSegmentReply.prototype.setSegment = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.segment.v1.GetStaticSegmentReply.prototype.clearSegment = function() {
  this.setSegment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.segment.v1.GetStaticSegmentReply.prototype.hasSegment = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.CreateStaticSegmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.CreateStaticSegmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.CreateStaticSegmentRequest.displayName = 'proto.segment.v1.CreateStaticSegmentRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.CreateStaticSegmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.CreateStaticSegmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.CreateStaticSegmentRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.CreateStaticSegmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.CreateStaticSegmentRequest}
 */
proto.segment.v1.CreateStaticSegmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.CreateStaticSegmentRequest;
  return proto.segment.v1.CreateStaticSegmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.CreateStaticSegmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.CreateStaticSegmentRequest}
 */
proto.segment.v1.CreateStaticSegmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.CreateStaticSegmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.CreateStaticSegmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.CreateStaticSegmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.CreateStaticSegmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 account_id = 1;
 * @return {number}
 */
proto.segment.v1.CreateStaticSegmentRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.segment.v1.CreateStaticSegmentRequest.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.segment.v1.CreateStaticSegmentRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.segment.v1.CreateStaticSegmentRequest.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.CreateStaticSegmentReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.CreateStaticSegmentReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.CreateStaticSegmentReply.displayName = 'proto.segment.v1.CreateStaticSegmentReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.CreateStaticSegmentReply.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.CreateStaticSegmentReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.CreateStaticSegmentReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.CreateStaticSegmentReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    segment: (f = msg.getSegment()) && proto.segment.v1.StaticSegment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.CreateStaticSegmentReply}
 */
proto.segment.v1.CreateStaticSegmentReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.CreateStaticSegmentReply;
  return proto.segment.v1.CreateStaticSegmentReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.CreateStaticSegmentReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.CreateStaticSegmentReply}
 */
proto.segment.v1.CreateStaticSegmentReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.segment.v1.StaticSegment;
      reader.readMessage(value,proto.segment.v1.StaticSegment.deserializeBinaryFromReader);
      msg.setSegment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.CreateStaticSegmentReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.CreateStaticSegmentReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.CreateStaticSegmentReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.CreateStaticSegmentReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSegment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.segment.v1.StaticSegment.serializeBinaryToWriter
    );
  }
};


/**
 * optional StaticSegment segment = 1;
 * @return {?proto.segment.v1.StaticSegment}
 */
proto.segment.v1.CreateStaticSegmentReply.prototype.getSegment = function() {
  return /** @type{?proto.segment.v1.StaticSegment} */ (
    jspb.Message.getWrapperField(this, proto.segment.v1.StaticSegment, 1));
};


/** @param {?proto.segment.v1.StaticSegment|undefined} value */
proto.segment.v1.CreateStaticSegmentReply.prototype.setSegment = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.segment.v1.CreateStaticSegmentReply.prototype.clearSegment = function() {
  this.setSegment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.segment.v1.CreateStaticSegmentReply.prototype.hasSegment = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.UpdateStaticSegmentIdsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.UpdateStaticSegmentIdsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.UpdateStaticSegmentIdsReply.displayName = 'proto.segment.v1.UpdateStaticSegmentIdsReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.UpdateStaticSegmentIdsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.UpdateStaticSegmentIdsReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    segment: (f = msg.getSegment()) && proto.segment.v1.StaticSegment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.UpdateStaticSegmentIdsReply}
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.UpdateStaticSegmentIdsReply;
  return proto.segment.v1.UpdateStaticSegmentIdsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.UpdateStaticSegmentIdsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.UpdateStaticSegmentIdsReply}
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.segment.v1.StaticSegment;
      reader.readMessage(value,proto.segment.v1.StaticSegment.deserializeBinaryFromReader);
      msg.setSegment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.UpdateStaticSegmentIdsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.UpdateStaticSegmentIdsReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSegment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.segment.v1.StaticSegment.serializeBinaryToWriter
    );
  }
};


/**
 * optional StaticSegment segment = 1;
 * @return {?proto.segment.v1.StaticSegment}
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.prototype.getSegment = function() {
  return /** @type{?proto.segment.v1.StaticSegment} */ (
    jspb.Message.getWrapperField(this, proto.segment.v1.StaticSegment, 1));
};


/** @param {?proto.segment.v1.StaticSegment|undefined} value */
proto.segment.v1.UpdateStaticSegmentIdsReply.prototype.setSegment = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.segment.v1.UpdateStaticSegmentIdsReply.prototype.clearSegment = function() {
  this.setSegment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.segment.v1.UpdateStaticSegmentIdsReply.prototype.hasSegment = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.GetStaticSegmentPushIdsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.GetStaticSegmentPushIdsRequest.displayName = 'proto.segment.v1.GetStaticSegmentPushIdsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.GetStaticSegmentPushIdsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.GetStaticSegmentPushIdsRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    segmentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.GetStaticSegmentPushIdsRequest}
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.GetStaticSegmentPushIdsRequest;
  return proto.segment.v1.GetStaticSegmentPushIdsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.GetStaticSegmentPushIdsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.GetStaticSegmentPushIdsRequest}
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSegmentId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.GetStaticSegmentPushIdsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.GetStaticSegmentPushIdsRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSegmentId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 segment_id = 1;
 * @return {number}
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.prototype.getSegmentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.segment.v1.GetStaticSegmentPushIdsRequest.prototype.setSegmentId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 account_id = 2;
 * @return {number}
 */
proto.segment.v1.GetStaticSegmentPushIdsRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.segment.v1.GetStaticSegmentPushIdsRequest.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.segment.v1.PushId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.segment.v1.PushId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.segment.v1.PushId.displayName = 'proto.segment.v1.PushId';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.segment.v1.PushId.prototype.toObject = function(opt_includeInstance) {
  return proto.segment.v1.PushId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.segment.v1.PushId} msg The msg instance to transform.
 * @return {!Object}
 */
proto.segment.v1.PushId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.segment.v1.PushId}
 */
proto.segment.v1.PushId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.segment.v1.PushId;
  return proto.segment.v1.PushId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.segment.v1.PushId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.segment.v1.PushId}
 */
proto.segment.v1.PushId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.segment.v1.PushIdType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.segment.v1.PushId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.segment.v1.PushId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.segment.v1.PushId} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.segment.v1.PushId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.segment.v1.PushId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.segment.v1.PushId.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PushIdType type = 2;
 * @return {!proto.segment.v1.PushIdType}
 */
proto.segment.v1.PushId.prototype.getType = function() {
  return /** @type {!proto.segment.v1.PushIdType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.segment.v1.PushIdType} value */
proto.segment.v1.PushId.prototype.setType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.segment.v1.PushIdType = {
  ROVER: 0,
  ALIAS: 1
};

goog.object.extend(exports, proto.segment.v1);
