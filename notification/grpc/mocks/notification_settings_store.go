// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/roverplatform/rover/notification/grpc (interfaces: NotificationSettingsStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	scylla "github.com/roverplatform/rover/notification/scylla"
	reflect "reflect"
)

// MockNotificationSettingsStore is a mock of NotificationSettingsStore interface
type MockNotificationSettingsStore struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationSettingsStoreMockRecorder
}

// MockNotificationSettingsStoreMockRecorder is the mock recorder for MockNotificationSettingsStore
type MockNotificationSettingsStoreMockRecorder struct {
	mock *MockNotificationSettingsStore
}

// NewMockNotificationSettingsStore creates a new mock instance
func NewMockNotificationSettingsStore(ctrl *gomock.Controller) *MockNotificationSettingsStore {
	mock := &MockNotificationSettingsStore{ctrl: ctrl}
	mock.recorder = &MockNotificationSettingsStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotificationSettingsStore) EXPECT() *MockNotificationSettingsStoreMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockNotificationSettingsStore) Create(arg0 context.Context, arg1 scylla.NotificationSettings) error {
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockNotificationSettingsStoreMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNotificationSettingsStore)(nil).Create), arg0, arg1)
}

// OneById mocks base method
func (m *MockNotificationSettingsStore) OneById(arg0 context.Context, arg1 int32) (*scylla.NotificationSettings, error) {
	ret := m.ctrl.Call(m, "OneById", arg0, arg1)
	ret0, _ := ret[0].(*scylla.NotificationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OneById indicates an expected call of OneById
func (mr *MockNotificationSettingsStoreMockRecorder) OneById(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OneById", reflect.TypeOf((*MockNotificationSettingsStore)(nil).OneById), arg0, arg1)
}
