apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName rover_sdk_version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

androidExtensions {
    // So we can use @Parcelize.  This does not expose risk to consumers; this is a build time-only
    // consideration.
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation 'org.jetbrains.spek:spek-api:1.1.5'
    testImplementation 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
    testImplementation 'com.natpryce:hamkrest:1.4.2.0'
    testImplementation 'org.amshove.kluent:kluent:1.30'
    testImplementation 'org.amshove.kluent:kluent-android:1.30'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
    implementation project(':rover-android-sdk:core')

    // used only by the UI concerns
    implementation 'com.android.support:transition:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    implementation 'com.android.support:customtabs:27.1.1'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}


// TODO: I hope I can make more than one dokka entry so I can run my docs for the jekyll website as
// well as for the docsJar.
dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

apply from: 'deploy.gradle'
