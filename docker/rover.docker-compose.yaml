version: "3"

volumes:
  cachefs:
  pgdata:

services:

  mongo:
    image: mongo
    volumes:
      - ../../rover:/rover

  elasticsearch:
    image: elasticsearch:2.4
    volumes:
      - ../../rover:/rover

  postgres:
    image: rover/postgres
    build:
      context: ../../rover
      dockerfile: ./docker/vendor/postgres/Dockerfile
    volumes:
      - ../../rover:/rover
      - pgdata:/var/lib/postgresql/data

  content-api:
    links: [postgres, mongo]
    image: ruby:2.3.3
    command: ./docker/content-api/cmd _bundle migrate # test
    volumes:
      - ../../rover:/rover
      - cachefs:/cachefs/
    working_dir: /rover
    environment:
      BUNDLE_PATH: /cachefs/content-api.bundle
      RACK_ENV: development
      MONGODB_URI: mongodb://mongo:27017/rover-local
      ELASTICSEARCH_URLS: elasticsearch:9200
      WEB_CONCURRENCY: 1
      MAX_THREADS: 1
      POSTGRESQL_DB_HOST: postgres
      AUTH_V1_SERVICE_HOST: auth-service


  auth-service:
    links: [postgres]
    image: golang:1.8-alpine
    command: ./docker/auth-service/cmd test run
    volumes:
      - ../../rover:/go/src/github.com/roverplatform/rover
    working_dir: /go/src/github.com/roverplatform/rover
    environment:
      CGO_ENABLED: 0
      DB_DSN: "postgres://postgres:@postgres:5432/authsvc_test?sslmode=disable"

  audience-service:
    links: [mongo]
    image: golang:1.8-alpine
    command: ./docker/audience-service/cmd test run
    volumes:
      - ../../rover:/go/src/github.com/roverplatform/rover
    working_dir: /go/src/github.com/roverplatform/rover
    environment:
      CGO_ENABLED: 0
      MONGO_DSN: "mongodb://mongo:27017/audience_service_test"
